// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#include "rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace etcdserverpb {
class ResponseHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseHeader>
      _instance;
} _ResponseHeader_default_instance_;
class RangeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RangeRequest>
      _instance;
} _RangeRequest_default_instance_;
class RangeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RangeResponse>
      _instance;
} _RangeResponse_default_instance_;
class PutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutRequest>
      _instance;
} _PutRequest_default_instance_;
class PutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutResponse>
      _instance;
} _PutResponse_default_instance_;
class DeleteRangeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRangeRequest>
      _instance;
} _DeleteRangeRequest_default_instance_;
class DeleteRangeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRangeResponse>
      _instance;
} _DeleteRangeResponse_default_instance_;
class RequestOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestOp>
      _instance;
  const ::etcdserverpb::RangeRequest* request_range_;
  const ::etcdserverpb::PutRequest* request_put_;
  const ::etcdserverpb::DeleteRangeRequest* request_delete_range_;
  const ::etcdserverpb::TxnRequest* request_txn_;
} _RequestOp_default_instance_;
class ResponseOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseOp>
      _instance;
  const ::etcdserverpb::RangeResponse* response_range_;
  const ::etcdserverpb::PutResponse* response_put_;
  const ::etcdserverpb::DeleteRangeResponse* response_delete_range_;
  const ::etcdserverpb::TxnResponse* response_txn_;
} _ResponseOp_default_instance_;
class CompareDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Compare>
      _instance;
  ::google::protobuf::int64 version_;
  ::google::protobuf::int64 create_revision_;
  ::google::protobuf::int64 mod_revision_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int64 lease_;
} _Compare_default_instance_;
class TxnRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxnRequest>
      _instance;
} _TxnRequest_default_instance_;
class TxnResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxnResponse>
      _instance;
} _TxnResponse_default_instance_;
class CompactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompactionRequest>
      _instance;
} _CompactionRequest_default_instance_;
class CompactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompactionResponse>
      _instance;
} _CompactionResponse_default_instance_;
class HashRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HashRequest>
      _instance;
} _HashRequest_default_instance_;
class HashKVRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HashKVRequest>
      _instance;
} _HashKVRequest_default_instance_;
class HashKVResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HashKVResponse>
      _instance;
} _HashKVResponse_default_instance_;
class HashResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HashResponse>
      _instance;
} _HashResponse_default_instance_;
class SnapshotRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotRequest>
      _instance;
} _SnapshotRequest_default_instance_;
class SnapshotResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotResponse>
      _instance;
} _SnapshotResponse_default_instance_;
class WatchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchRequest>
      _instance;
  const ::etcdserverpb::WatchCreateRequest* create_request_;
  const ::etcdserverpb::WatchCancelRequest* cancel_request_;
} _WatchRequest_default_instance_;
class WatchCreateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchCreateRequest>
      _instance;
} _WatchCreateRequest_default_instance_;
class WatchCancelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchCancelRequest>
      _instance;
} _WatchCancelRequest_default_instance_;
class WatchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchResponse>
      _instance;
} _WatchResponse_default_instance_;
class LeaseGrantRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseGrantRequest>
      _instance;
} _LeaseGrantRequest_default_instance_;
class LeaseGrantResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseGrantResponse>
      _instance;
} _LeaseGrantResponse_default_instance_;
class LeaseRevokeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseRevokeRequest>
      _instance;
} _LeaseRevokeRequest_default_instance_;
class LeaseRevokeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseRevokeResponse>
      _instance;
} _LeaseRevokeResponse_default_instance_;
class LeaseKeepAliveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseKeepAliveRequest>
      _instance;
} _LeaseKeepAliveRequest_default_instance_;
class LeaseKeepAliveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseKeepAliveResponse>
      _instance;
} _LeaseKeepAliveResponse_default_instance_;
class LeaseTimeToLiveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseTimeToLiveRequest>
      _instance;
} _LeaseTimeToLiveRequest_default_instance_;
class LeaseTimeToLiveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseTimeToLiveResponse>
      _instance;
} _LeaseTimeToLiveResponse_default_instance_;
class LeaseLeasesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseLeasesRequest>
      _instance;
} _LeaseLeasesRequest_default_instance_;
class LeaseStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseStatus>
      _instance;
} _LeaseStatus_default_instance_;
class LeaseLeasesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaseLeasesResponse>
      _instance;
} _LeaseLeasesResponse_default_instance_;
class MemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Member>
      _instance;
} _Member_default_instance_;
class MemberAddRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberAddRequest>
      _instance;
} _MemberAddRequest_default_instance_;
class MemberAddResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberAddResponse>
      _instance;
} _MemberAddResponse_default_instance_;
class MemberRemoveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberRemoveRequest>
      _instance;
} _MemberRemoveRequest_default_instance_;
class MemberRemoveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberRemoveResponse>
      _instance;
} _MemberRemoveResponse_default_instance_;
class MemberUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberUpdateRequest>
      _instance;
} _MemberUpdateRequest_default_instance_;
class MemberUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberUpdateResponse>
      _instance;
} _MemberUpdateResponse_default_instance_;
class MemberListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberListRequest>
      _instance;
} _MemberListRequest_default_instance_;
class MemberListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberListResponse>
      _instance;
} _MemberListResponse_default_instance_;
class DefragmentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DefragmentRequest>
      _instance;
} _DefragmentRequest_default_instance_;
class DefragmentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DefragmentResponse>
      _instance;
} _DefragmentResponse_default_instance_;
class MoveLeaderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveLeaderRequest>
      _instance;
} _MoveLeaderRequest_default_instance_;
class MoveLeaderResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveLeaderResponse>
      _instance;
} _MoveLeaderResponse_default_instance_;
class AlarmRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlarmRequest>
      _instance;
} _AlarmRequest_default_instance_;
class AlarmMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlarmMember>
      _instance;
} _AlarmMember_default_instance_;
class AlarmResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlarmResponse>
      _instance;
} _AlarmResponse_default_instance_;
class StatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusRequest>
      _instance;
} _StatusRequest_default_instance_;
class StatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusResponse>
      _instance;
} _StatusResponse_default_instance_;
class AuthEnableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthEnableRequest>
      _instance;
} _AuthEnableRequest_default_instance_;
class AuthDisableRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthDisableRequest>
      _instance;
} _AuthDisableRequest_default_instance_;
class AuthenticateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateRequest>
      _instance;
} _AuthenticateRequest_default_instance_;
class AuthUserAddRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserAddRequest>
      _instance;
} _AuthUserAddRequest_default_instance_;
class AuthUserGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserGetRequest>
      _instance;
} _AuthUserGetRequest_default_instance_;
class AuthUserDeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserDeleteRequest>
      _instance;
} _AuthUserDeleteRequest_default_instance_;
class AuthUserChangePasswordRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserChangePasswordRequest>
      _instance;
} _AuthUserChangePasswordRequest_default_instance_;
class AuthUserGrantRoleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserGrantRoleRequest>
      _instance;
} _AuthUserGrantRoleRequest_default_instance_;
class AuthUserRevokeRoleRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserRevokeRoleRequest>
      _instance;
} _AuthUserRevokeRoleRequest_default_instance_;
class AuthRoleAddRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleAddRequest>
      _instance;
} _AuthRoleAddRequest_default_instance_;
class AuthRoleGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleGetRequest>
      _instance;
} _AuthRoleGetRequest_default_instance_;
class AuthUserListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserListRequest>
      _instance;
} _AuthUserListRequest_default_instance_;
class AuthRoleListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleListRequest>
      _instance;
} _AuthRoleListRequest_default_instance_;
class AuthRoleDeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleDeleteRequest>
      _instance;
} _AuthRoleDeleteRequest_default_instance_;
class AuthRoleGrantPermissionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleGrantPermissionRequest>
      _instance;
} _AuthRoleGrantPermissionRequest_default_instance_;
class AuthRoleRevokePermissionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleRevokePermissionRequest>
      _instance;
} _AuthRoleRevokePermissionRequest_default_instance_;
class AuthEnableResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthEnableResponse>
      _instance;
} _AuthEnableResponse_default_instance_;
class AuthDisableResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthDisableResponse>
      _instance;
} _AuthDisableResponse_default_instance_;
class AuthenticateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateResponse>
      _instance;
} _AuthenticateResponse_default_instance_;
class AuthUserAddResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserAddResponse>
      _instance;
} _AuthUserAddResponse_default_instance_;
class AuthUserGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserGetResponse>
      _instance;
} _AuthUserGetResponse_default_instance_;
class AuthUserDeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserDeleteResponse>
      _instance;
} _AuthUserDeleteResponse_default_instance_;
class AuthUserChangePasswordResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserChangePasswordResponse>
      _instance;
} _AuthUserChangePasswordResponse_default_instance_;
class AuthUserGrantRoleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserGrantRoleResponse>
      _instance;
} _AuthUserGrantRoleResponse_default_instance_;
class AuthUserRevokeRoleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserRevokeRoleResponse>
      _instance;
} _AuthUserRevokeRoleResponse_default_instance_;
class AuthRoleAddResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleAddResponse>
      _instance;
} _AuthRoleAddResponse_default_instance_;
class AuthRoleGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleGetResponse>
      _instance;
} _AuthRoleGetResponse_default_instance_;
class AuthRoleListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleListResponse>
      _instance;
} _AuthRoleListResponse_default_instance_;
class AuthUserListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthUserListResponse>
      _instance;
} _AuthUserListResponse_default_instance_;
class AuthRoleDeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleDeleteResponse>
      _instance;
} _AuthRoleDeleteResponse_default_instance_;
class AuthRoleGrantPermissionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleGrantPermissionResponse>
      _instance;
} _AuthRoleGrantPermissionResponse_default_instance_;
class AuthRoleRevokePermissionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthRoleRevokePermissionResponse>
      _instance;
} _AuthRoleRevokePermissionResponse_default_instance_;
}  // namespace etcdserverpb
namespace protobuf_rpc_2eproto {
void InitDefaultsResponseHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_ResponseHeader_default_instance_;
    new (ptr) ::etcdserverpb::ResponseHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::ResponseHeader::InitAsDefaultInstance();
}

void InitDefaultsResponseHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseHeaderImpl);
}

void InitDefaultsRangeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_RangeRequest_default_instance_;
    new (ptr) ::etcdserverpb::RangeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::RangeRequest::InitAsDefaultInstance();
}

void InitDefaultsRangeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRangeRequestImpl);
}

void InitDefaultsRangeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_kv_2eproto::InitDefaultsKeyValue();
  {
    void* ptr = &::etcdserverpb::_RangeResponse_default_instance_;
    new (ptr) ::etcdserverpb::RangeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::RangeResponse::InitAsDefaultInstance();
}

void InitDefaultsRangeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRangeResponseImpl);
}

void InitDefaultsPutRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_PutRequest_default_instance_;
    new (ptr) ::etcdserverpb::PutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::PutRequest::InitAsDefaultInstance();
}

void InitDefaultsPutRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutRequestImpl);
}

void InitDefaultsPutResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_kv_2eproto::InitDefaultsKeyValue();
  {
    void* ptr = &::etcdserverpb::_PutResponse_default_instance_;
    new (ptr) ::etcdserverpb::PutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::PutResponse::InitAsDefaultInstance();
}

void InitDefaultsPutResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutResponseImpl);
}

void InitDefaultsDeleteRangeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_DeleteRangeRequest_default_instance_;
    new (ptr) ::etcdserverpb::DeleteRangeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::DeleteRangeRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteRangeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteRangeRequestImpl);
}

void InitDefaultsDeleteRangeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_kv_2eproto::InitDefaultsKeyValue();
  {
    void* ptr = &::etcdserverpb::_DeleteRangeResponse_default_instance_;
    new (ptr) ::etcdserverpb::DeleteRangeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::DeleteRangeResponse::InitAsDefaultInstance();
}

void InitDefaultsDeleteRangeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteRangeResponseImpl);
}

void InitDefaultsRequestOpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsRangeRequest();
  protobuf_rpc_2eproto::InitDefaultsPutRequest();
  protobuf_rpc_2eproto::InitDefaultsDeleteRangeRequest();
  protobuf_rpc_2eproto::InitDefaultsCompare();
  {
    void* ptr = &::etcdserverpb::_RequestOp_default_instance_;
    new (ptr) ::etcdserverpb::RequestOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::etcdserverpb::_TxnRequest_default_instance_;
    new (ptr) ::etcdserverpb::TxnRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::RequestOp::InitAsDefaultInstance();
  ::etcdserverpb::TxnRequest::InitAsDefaultInstance();
}

void InitDefaultsRequestOp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestOpImpl);
}

void InitDefaultsResponseOpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsRangeResponse();
  protobuf_rpc_2eproto::InitDefaultsPutResponse();
  protobuf_rpc_2eproto::InitDefaultsDeleteRangeResponse();
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_ResponseOp_default_instance_;
    new (ptr) ::etcdserverpb::ResponseOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::etcdserverpb::_TxnResponse_default_instance_;
    new (ptr) ::etcdserverpb::TxnResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::ResponseOp::InitAsDefaultInstance();
  ::etcdserverpb::TxnResponse::InitAsDefaultInstance();
}

void InitDefaultsResponseOp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseOpImpl);
}

void InitDefaultsCompareImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_Compare_default_instance_;
    new (ptr) ::etcdserverpb::Compare();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::Compare::InitAsDefaultInstance();
}

void InitDefaultsCompare() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCompareImpl);
}

void InitDefaultsCompactionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_CompactionRequest_default_instance_;
    new (ptr) ::etcdserverpb::CompactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::CompactionRequest::InitAsDefaultInstance();
}

void InitDefaultsCompactionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCompactionRequestImpl);
}

void InitDefaultsCompactionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_CompactionResponse_default_instance_;
    new (ptr) ::etcdserverpb::CompactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::CompactionResponse::InitAsDefaultInstance();
}

void InitDefaultsCompactionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCompactionResponseImpl);
}

void InitDefaultsHashRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_HashRequest_default_instance_;
    new (ptr) ::etcdserverpb::HashRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::HashRequest::InitAsDefaultInstance();
}

void InitDefaultsHashRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHashRequestImpl);
}

void InitDefaultsHashKVRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_HashKVRequest_default_instance_;
    new (ptr) ::etcdserverpb::HashKVRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::HashKVRequest::InitAsDefaultInstance();
}

void InitDefaultsHashKVRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHashKVRequestImpl);
}

void InitDefaultsHashKVResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_HashKVResponse_default_instance_;
    new (ptr) ::etcdserverpb::HashKVResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::HashKVResponse::InitAsDefaultInstance();
}

void InitDefaultsHashKVResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHashKVResponseImpl);
}

void InitDefaultsHashResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_HashResponse_default_instance_;
    new (ptr) ::etcdserverpb::HashResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::HashResponse::InitAsDefaultInstance();
}

void InitDefaultsHashResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHashResponseImpl);
}

void InitDefaultsSnapshotRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_SnapshotRequest_default_instance_;
    new (ptr) ::etcdserverpb::SnapshotRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::SnapshotRequest::InitAsDefaultInstance();
}

void InitDefaultsSnapshotRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapshotRequestImpl);
}

void InitDefaultsSnapshotResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_SnapshotResponse_default_instance_;
    new (ptr) ::etcdserverpb::SnapshotResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::SnapshotResponse::InitAsDefaultInstance();
}

void InitDefaultsSnapshotResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapshotResponseImpl);
}

void InitDefaultsWatchRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsWatchCreateRequest();
  protobuf_rpc_2eproto::InitDefaultsWatchCancelRequest();
  {
    void* ptr = &::etcdserverpb::_WatchRequest_default_instance_;
    new (ptr) ::etcdserverpb::WatchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::WatchRequest::InitAsDefaultInstance();
}

void InitDefaultsWatchRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchRequestImpl);
}

void InitDefaultsWatchCreateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_WatchCreateRequest_default_instance_;
    new (ptr) ::etcdserverpb::WatchCreateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::WatchCreateRequest::InitAsDefaultInstance();
}

void InitDefaultsWatchCreateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchCreateRequestImpl);
}

void InitDefaultsWatchCancelRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_WatchCancelRequest_default_instance_;
    new (ptr) ::etcdserverpb::WatchCancelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::WatchCancelRequest::InitAsDefaultInstance();
}

void InitDefaultsWatchCancelRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchCancelRequestImpl);
}

void InitDefaultsWatchResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_kv_2eproto::InitDefaultsEvent();
  {
    void* ptr = &::etcdserverpb::_WatchResponse_default_instance_;
    new (ptr) ::etcdserverpb::WatchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::WatchResponse::InitAsDefaultInstance();
}

void InitDefaultsWatchResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchResponseImpl);
}

void InitDefaultsLeaseGrantRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_LeaseGrantRequest_default_instance_;
    new (ptr) ::etcdserverpb::LeaseGrantRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseGrantRequest::InitAsDefaultInstance();
}

void InitDefaultsLeaseGrantRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseGrantRequestImpl);
}

void InitDefaultsLeaseGrantResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_LeaseGrantResponse_default_instance_;
    new (ptr) ::etcdserverpb::LeaseGrantResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseGrantResponse::InitAsDefaultInstance();
}

void InitDefaultsLeaseGrantResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseGrantResponseImpl);
}

void InitDefaultsLeaseRevokeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_LeaseRevokeRequest_default_instance_;
    new (ptr) ::etcdserverpb::LeaseRevokeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseRevokeRequest::InitAsDefaultInstance();
}

void InitDefaultsLeaseRevokeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseRevokeRequestImpl);
}

void InitDefaultsLeaseRevokeResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_LeaseRevokeResponse_default_instance_;
    new (ptr) ::etcdserverpb::LeaseRevokeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseRevokeResponse::InitAsDefaultInstance();
}

void InitDefaultsLeaseRevokeResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseRevokeResponseImpl);
}

void InitDefaultsLeaseKeepAliveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_LeaseKeepAliveRequest_default_instance_;
    new (ptr) ::etcdserverpb::LeaseKeepAliveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseKeepAliveRequest::InitAsDefaultInstance();
}

void InitDefaultsLeaseKeepAliveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseKeepAliveRequestImpl);
}

void InitDefaultsLeaseKeepAliveResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_LeaseKeepAliveResponse_default_instance_;
    new (ptr) ::etcdserverpb::LeaseKeepAliveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseKeepAliveResponse::InitAsDefaultInstance();
}

void InitDefaultsLeaseKeepAliveResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseKeepAliveResponseImpl);
}

void InitDefaultsLeaseTimeToLiveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_LeaseTimeToLiveRequest_default_instance_;
    new (ptr) ::etcdserverpb::LeaseTimeToLiveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseTimeToLiveRequest::InitAsDefaultInstance();
}

void InitDefaultsLeaseTimeToLiveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseTimeToLiveRequestImpl);
}

void InitDefaultsLeaseTimeToLiveResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_LeaseTimeToLiveResponse_default_instance_;
    new (ptr) ::etcdserverpb::LeaseTimeToLiveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseTimeToLiveResponse::InitAsDefaultInstance();
}

void InitDefaultsLeaseTimeToLiveResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseTimeToLiveResponseImpl);
}

void InitDefaultsLeaseLeasesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_LeaseLeasesRequest_default_instance_;
    new (ptr) ::etcdserverpb::LeaseLeasesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseLeasesRequest::InitAsDefaultInstance();
}

void InitDefaultsLeaseLeasesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseLeasesRequestImpl);
}

void InitDefaultsLeaseStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_LeaseStatus_default_instance_;
    new (ptr) ::etcdserverpb::LeaseStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseStatus::InitAsDefaultInstance();
}

void InitDefaultsLeaseStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseStatusImpl);
}

void InitDefaultsLeaseLeasesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_rpc_2eproto::InitDefaultsLeaseStatus();
  {
    void* ptr = &::etcdserverpb::_LeaseLeasesResponse_default_instance_;
    new (ptr) ::etcdserverpb::LeaseLeasesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::LeaseLeasesResponse::InitAsDefaultInstance();
}

void InitDefaultsLeaseLeasesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaseLeasesResponseImpl);
}

void InitDefaultsMemberImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_Member_default_instance_;
    new (ptr) ::etcdserverpb::Member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::Member::InitAsDefaultInstance();
}

void InitDefaultsMember() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberImpl);
}

void InitDefaultsMemberAddRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_MemberAddRequest_default_instance_;
    new (ptr) ::etcdserverpb::MemberAddRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MemberAddRequest::InitAsDefaultInstance();
}

void InitDefaultsMemberAddRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberAddRequestImpl);
}

void InitDefaultsMemberAddResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_rpc_2eproto::InitDefaultsMember();
  {
    void* ptr = &::etcdserverpb::_MemberAddResponse_default_instance_;
    new (ptr) ::etcdserverpb::MemberAddResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MemberAddResponse::InitAsDefaultInstance();
}

void InitDefaultsMemberAddResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberAddResponseImpl);
}

void InitDefaultsMemberRemoveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_MemberRemoveRequest_default_instance_;
    new (ptr) ::etcdserverpb::MemberRemoveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MemberRemoveRequest::InitAsDefaultInstance();
}

void InitDefaultsMemberRemoveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberRemoveRequestImpl);
}

void InitDefaultsMemberRemoveResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_rpc_2eproto::InitDefaultsMember();
  {
    void* ptr = &::etcdserverpb::_MemberRemoveResponse_default_instance_;
    new (ptr) ::etcdserverpb::MemberRemoveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MemberRemoveResponse::InitAsDefaultInstance();
}

void InitDefaultsMemberRemoveResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberRemoveResponseImpl);
}

void InitDefaultsMemberUpdateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_MemberUpdateRequest_default_instance_;
    new (ptr) ::etcdserverpb::MemberUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MemberUpdateRequest::InitAsDefaultInstance();
}

void InitDefaultsMemberUpdateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberUpdateRequestImpl);
}

void InitDefaultsMemberUpdateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_rpc_2eproto::InitDefaultsMember();
  {
    void* ptr = &::etcdserverpb::_MemberUpdateResponse_default_instance_;
    new (ptr) ::etcdserverpb::MemberUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MemberUpdateResponse::InitAsDefaultInstance();
}

void InitDefaultsMemberUpdateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberUpdateResponseImpl);
}

void InitDefaultsMemberListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_MemberListRequest_default_instance_;
    new (ptr) ::etcdserverpb::MemberListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MemberListRequest::InitAsDefaultInstance();
}

void InitDefaultsMemberListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberListRequestImpl);
}

void InitDefaultsMemberListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_rpc_2eproto::InitDefaultsMember();
  {
    void* ptr = &::etcdserverpb::_MemberListResponse_default_instance_;
    new (ptr) ::etcdserverpb::MemberListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MemberListResponse::InitAsDefaultInstance();
}

void InitDefaultsMemberListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberListResponseImpl);
}

void InitDefaultsDefragmentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_DefragmentRequest_default_instance_;
    new (ptr) ::etcdserverpb::DefragmentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::DefragmentRequest::InitAsDefaultInstance();
}

void InitDefaultsDefragmentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDefragmentRequestImpl);
}

void InitDefaultsDefragmentResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_DefragmentResponse_default_instance_;
    new (ptr) ::etcdserverpb::DefragmentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::DefragmentResponse::InitAsDefaultInstance();
}

void InitDefaultsDefragmentResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDefragmentResponseImpl);
}

void InitDefaultsMoveLeaderRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_MoveLeaderRequest_default_instance_;
    new (ptr) ::etcdserverpb::MoveLeaderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MoveLeaderRequest::InitAsDefaultInstance();
}

void InitDefaultsMoveLeaderRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMoveLeaderRequestImpl);
}

void InitDefaultsMoveLeaderResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_MoveLeaderResponse_default_instance_;
    new (ptr) ::etcdserverpb::MoveLeaderResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::MoveLeaderResponse::InitAsDefaultInstance();
}

void InitDefaultsMoveLeaderResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMoveLeaderResponseImpl);
}

void InitDefaultsAlarmRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AlarmRequest_default_instance_;
    new (ptr) ::etcdserverpb::AlarmRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AlarmRequest::InitAsDefaultInstance();
}

void InitDefaultsAlarmRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAlarmRequestImpl);
}

void InitDefaultsAlarmMemberImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AlarmMember_default_instance_;
    new (ptr) ::etcdserverpb::AlarmMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AlarmMember::InitAsDefaultInstance();
}

void InitDefaultsAlarmMember() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAlarmMemberImpl);
}

void InitDefaultsAlarmResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_rpc_2eproto::InitDefaultsAlarmMember();
  {
    void* ptr = &::etcdserverpb::_AlarmResponse_default_instance_;
    new (ptr) ::etcdserverpb::AlarmResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AlarmResponse::InitAsDefaultInstance();
}

void InitDefaultsAlarmResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAlarmResponseImpl);
}

void InitDefaultsStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_StatusRequest_default_instance_;
    new (ptr) ::etcdserverpb::StatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::StatusRequest::InitAsDefaultInstance();
}

void InitDefaultsStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatusRequestImpl);
}

void InitDefaultsStatusResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_StatusResponse_default_instance_;
    new (ptr) ::etcdserverpb::StatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::StatusResponse::InitAsDefaultInstance();
}

void InitDefaultsStatusResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatusResponseImpl);
}

void InitDefaultsAuthEnableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthEnableRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthEnableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthEnableRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthEnableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthEnableRequestImpl);
}

void InitDefaultsAuthDisableRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthDisableRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthDisableRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthDisableRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthDisableRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthDisableRequestImpl);
}

void InitDefaultsAuthenticateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthenticateRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthenticateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthenticateRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthenticateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthenticateRequestImpl);
}

void InitDefaultsAuthUserAddRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthUserAddRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserAddRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserAddRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthUserAddRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserAddRequestImpl);
}

void InitDefaultsAuthUserGetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthUserGetRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserGetRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthUserGetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserGetRequestImpl);
}

void InitDefaultsAuthUserDeleteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthUserDeleteRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserDeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserDeleteRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthUserDeleteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserDeleteRequestImpl);
}

void InitDefaultsAuthUserChangePasswordRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthUserChangePasswordRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserChangePasswordRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserChangePasswordRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthUserChangePasswordRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserChangePasswordRequestImpl);
}

void InitDefaultsAuthUserGrantRoleRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthUserGrantRoleRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserGrantRoleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserGrantRoleRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthUserGrantRoleRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserGrantRoleRequestImpl);
}

void InitDefaultsAuthUserRevokeRoleRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthUserRevokeRoleRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserRevokeRoleRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserRevokeRoleRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthUserRevokeRoleRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserRevokeRoleRequestImpl);
}

void InitDefaultsAuthRoleAddRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthRoleAddRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleAddRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleAddRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleAddRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleAddRequestImpl);
}

void InitDefaultsAuthRoleGetRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthRoleGetRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleGetRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleGetRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleGetRequestImpl);
}

void InitDefaultsAuthUserListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthUserListRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserListRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthUserListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserListRequestImpl);
}

void InitDefaultsAuthRoleListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthRoleListRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleListRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleListRequestImpl);
}

void InitDefaultsAuthRoleDeleteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthRoleDeleteRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleDeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleDeleteRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleDeleteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleDeleteRequestImpl);
}

void InitDefaultsAuthRoleGrantPermissionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_auth_2eproto::InitDefaultsPermission();
  {
    void* ptr = &::etcdserverpb::_AuthRoleGrantPermissionRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleGrantPermissionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleGrantPermissionRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleGrantPermissionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleGrantPermissionRequestImpl);
}

void InitDefaultsAuthRoleRevokePermissionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::etcdserverpb::_AuthRoleRevokePermissionRequest_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleRevokePermissionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleRevokePermissionRequest::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleRevokePermissionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleRevokePermissionRequestImpl);
}

void InitDefaultsAuthEnableResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthEnableResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthEnableResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthEnableResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthEnableResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthEnableResponseImpl);
}

void InitDefaultsAuthDisableResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthDisableResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthDisableResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthDisableResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthDisableResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthDisableResponseImpl);
}

void InitDefaultsAuthenticateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthenticateResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthenticateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthenticateResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthenticateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthenticateResponseImpl);
}

void InitDefaultsAuthUserAddResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthUserAddResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserAddResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserAddResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthUserAddResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserAddResponseImpl);
}

void InitDefaultsAuthUserGetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthUserGetResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserGetResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthUserGetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserGetResponseImpl);
}

void InitDefaultsAuthUserDeleteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthUserDeleteResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserDeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserDeleteResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthUserDeleteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserDeleteResponseImpl);
}

void InitDefaultsAuthUserChangePasswordResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthUserChangePasswordResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserChangePasswordResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserChangePasswordResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthUserChangePasswordResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserChangePasswordResponseImpl);
}

void InitDefaultsAuthUserGrantRoleResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthUserGrantRoleResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserGrantRoleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserGrantRoleResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthUserGrantRoleResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserGrantRoleResponseImpl);
}

void InitDefaultsAuthUserRevokeRoleResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthUserRevokeRoleResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserRevokeRoleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserRevokeRoleResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthUserRevokeRoleResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserRevokeRoleResponseImpl);
}

void InitDefaultsAuthRoleAddResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthRoleAddResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleAddResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleAddResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleAddResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleAddResponseImpl);
}

void InitDefaultsAuthRoleGetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  protobuf_auth_2eproto::InitDefaultsPermission();
  {
    void* ptr = &::etcdserverpb::_AuthRoleGetResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleGetResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleGetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleGetResponseImpl);
}

void InitDefaultsAuthRoleListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthRoleListResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleListResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleListResponseImpl);
}

void InitDefaultsAuthUserListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthUserListResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthUserListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthUserListResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthUserListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthUserListResponseImpl);
}

void InitDefaultsAuthRoleDeleteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthRoleDeleteResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleDeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleDeleteResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleDeleteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleDeleteResponseImpl);
}

void InitDefaultsAuthRoleGrantPermissionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthRoleGrantPermissionResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleGrantPermissionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleGrantPermissionResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleGrantPermissionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleGrantPermissionResponseImpl);
}

void InitDefaultsAuthRoleRevokePermissionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  {
    void* ptr = &::etcdserverpb::_AuthRoleRevokePermissionResponse_default_instance_;
    new (ptr) ::etcdserverpb::AuthRoleRevokePermissionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::AuthRoleRevokePermissionResponse::InitAsDefaultInstance();
}

void InitDefaultsAuthRoleRevokePermissionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthRoleRevokePermissionResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[85];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::ResponseHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::ResponseHeader, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::ResponseHeader, member_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::ResponseHeader, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::ResponseHeader, raft_term_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, range_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, sort_order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, sort_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, serializable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, keys_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, count_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, min_mod_revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, max_mod_revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, min_create_revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeRequest, max_create_revision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeResponse, kvs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeResponse, more_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RangeResponse, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutRequest, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutRequest, lease_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutRequest, prev_kv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutRequest, ignore_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutRequest, ignore_lease_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::PutResponse, prev_kv_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DeleteRangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DeleteRangeRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DeleteRangeRequest, range_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DeleteRangeRequest, prev_kv_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DeleteRangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DeleteRangeResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DeleteRangeResponse, deleted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DeleteRangeResponse, prev_kvs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RequestOp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RequestOp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::etcdserverpb::RequestOpDefaultTypeInternal, request_range_),
  offsetof(::etcdserverpb::RequestOpDefaultTypeInternal, request_put_),
  offsetof(::etcdserverpb::RequestOpDefaultTypeInternal, request_delete_range_),
  offsetof(::etcdserverpb::RequestOpDefaultTypeInternal, request_txn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::RequestOp, request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::ResponseOp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::ResponseOp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::etcdserverpb::ResponseOpDefaultTypeInternal, response_range_),
  offsetof(::etcdserverpb::ResponseOpDefaultTypeInternal, response_put_),
  offsetof(::etcdserverpb::ResponseOpDefaultTypeInternal, response_delete_range_),
  offsetof(::etcdserverpb::ResponseOpDefaultTypeInternal, response_txn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::ResponseOp, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Compare, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Compare, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Compare, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Compare, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Compare, key_),
  offsetof(::etcdserverpb::CompareDefaultTypeInternal, version_),
  offsetof(::etcdserverpb::CompareDefaultTypeInternal, create_revision_),
  offsetof(::etcdserverpb::CompareDefaultTypeInternal, mod_revision_),
  offsetof(::etcdserverpb::CompareDefaultTypeInternal, value_),
  offsetof(::etcdserverpb::CompareDefaultTypeInternal, lease_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Compare, range_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Compare, target_union_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::TxnRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::TxnRequest, compare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::TxnRequest, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::TxnRequest, failure_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::TxnResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::TxnResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::TxnResponse, succeeded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::TxnResponse, responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::CompactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::CompactionRequest, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::CompactionRequest, physical_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::CompactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::CompactionResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashKVRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashKVRequest, revision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashKVResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashKVResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashKVResponse, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashKVResponse, compact_revision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::HashResponse, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::SnapshotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::SnapshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::SnapshotResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::SnapshotResponse, remaining_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::SnapshotResponse, blob_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::etcdserverpb::WatchRequestDefaultTypeInternal, create_request_),
  offsetof(::etcdserverpb::WatchRequestDefaultTypeInternal, cancel_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchRequest, request_union_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, range_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, start_revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, progress_notify_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, filters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, prev_kv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCreateRequest, watch_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchCancelRequest, watch_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchResponse, watch_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchResponse, created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchResponse, canceled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchResponse, compact_revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchResponse, cancel_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::WatchResponse, events_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseGrantRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseGrantRequest, ttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseGrantRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, ttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseGrantResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseRevokeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseRevokeRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseRevokeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseRevokeResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseKeepAliveResponse, ttl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveRequest, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, ttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, grantedttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseTimeToLiveResponse, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseLeasesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseStatus, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseLeasesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseLeasesResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::LeaseLeasesResponse, leases_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Member, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Member, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Member, peerurls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::Member, clienturls_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberAddRequest, peerurls_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberAddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberAddResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberAddResponse, member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberAddResponse, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberRemoveRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberRemoveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberRemoveResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberRemoveResponse, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberUpdateRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberUpdateRequest, peerurls_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberUpdateResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberUpdateResponse, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberListResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MemberListResponse, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DefragmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DefragmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::DefragmentResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MoveLeaderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MoveLeaderRequest, targetid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MoveLeaderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::MoveLeaderResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmRequest, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmRequest, memberid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmRequest, alarm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmMember, memberid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmMember, alarm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AlarmResponse, alarms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, dbsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, leader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, raftindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, raftterm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, raftappliedindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::StatusResponse, dbsizeinuse_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthEnableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthDisableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthenticateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthenticateRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthenticateRequest, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserAddRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserAddRequest, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGetRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserDeleteRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserChangePasswordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserChangePasswordRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserChangePasswordRequest, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGrantRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGrantRoleRequest, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGrantRoleRequest, role_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserRevokeRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserRevokeRoleRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserRevokeRoleRequest, role_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleAddRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGetRequest, role_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleDeleteRequest, role_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGrantPermissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGrantPermissionRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGrantPermissionRequest, perm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleRevokePermissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleRevokePermissionRequest, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleRevokePermissionRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleRevokePermissionRequest, range_end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthEnableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthEnableResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthDisableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthDisableResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthenticateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthenticateResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthenticateResponse, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserAddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserAddResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGetResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGetResponse, roles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserDeleteResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserChangePasswordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserChangePasswordResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGrantRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserGrantRoleResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserRevokeRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserRevokeRoleResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleAddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleAddResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGetResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGetResponse, perm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleListResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleListResponse, roles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserListResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthUserListResponse, users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleDeleteResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGrantPermissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleGrantPermissionResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleRevokePermissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::etcdserverpb::AuthRoleRevokePermissionResponse, header_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::etcdserverpb::ResponseHeader)},
  { 9, -1, sizeof(::etcdserverpb::RangeRequest)},
  { 27, -1, sizeof(::etcdserverpb::RangeResponse)},
  { 36, -1, sizeof(::etcdserverpb::PutRequest)},
  { 47, -1, sizeof(::etcdserverpb::PutResponse)},
  { 54, -1, sizeof(::etcdserverpb::DeleteRangeRequest)},
  { 62, -1, sizeof(::etcdserverpb::DeleteRangeResponse)},
  { 70, -1, sizeof(::etcdserverpb::RequestOp)},
  { 80, -1, sizeof(::etcdserverpb::ResponseOp)},
  { 90, -1, sizeof(::etcdserverpb::Compare)},
  { 105, -1, sizeof(::etcdserverpb::TxnRequest)},
  { 113, -1, sizeof(::etcdserverpb::TxnResponse)},
  { 121, -1, sizeof(::etcdserverpb::CompactionRequest)},
  { 128, -1, sizeof(::etcdserverpb::CompactionResponse)},
  { 134, -1, sizeof(::etcdserverpb::HashRequest)},
  { 139, -1, sizeof(::etcdserverpb::HashKVRequest)},
  { 145, -1, sizeof(::etcdserverpb::HashKVResponse)},
  { 153, -1, sizeof(::etcdserverpb::HashResponse)},
  { 160, -1, sizeof(::etcdserverpb::SnapshotRequest)},
  { 165, -1, sizeof(::etcdserverpb::SnapshotResponse)},
  { 173, -1, sizeof(::etcdserverpb::WatchRequest)},
  { 181, -1, sizeof(::etcdserverpb::WatchCreateRequest)},
  { 193, -1, sizeof(::etcdserverpb::WatchCancelRequest)},
  { 199, -1, sizeof(::etcdserverpb::WatchResponse)},
  { 211, -1, sizeof(::etcdserverpb::LeaseGrantRequest)},
  { 218, -1, sizeof(::etcdserverpb::LeaseGrantResponse)},
  { 227, -1, sizeof(::etcdserverpb::LeaseRevokeRequest)},
  { 233, -1, sizeof(::etcdserverpb::LeaseRevokeResponse)},
  { 239, -1, sizeof(::etcdserverpb::LeaseKeepAliveRequest)},
  { 245, -1, sizeof(::etcdserverpb::LeaseKeepAliveResponse)},
  { 253, -1, sizeof(::etcdserverpb::LeaseTimeToLiveRequest)},
  { 260, -1, sizeof(::etcdserverpb::LeaseTimeToLiveResponse)},
  { 270, -1, sizeof(::etcdserverpb::LeaseLeasesRequest)},
  { 275, -1, sizeof(::etcdserverpb::LeaseStatus)},
  { 281, -1, sizeof(::etcdserverpb::LeaseLeasesResponse)},
  { 288, -1, sizeof(::etcdserverpb::Member)},
  { 297, -1, sizeof(::etcdserverpb::MemberAddRequest)},
  { 303, -1, sizeof(::etcdserverpb::MemberAddResponse)},
  { 311, -1, sizeof(::etcdserverpb::MemberRemoveRequest)},
  { 317, -1, sizeof(::etcdserverpb::MemberRemoveResponse)},
  { 324, -1, sizeof(::etcdserverpb::MemberUpdateRequest)},
  { 331, -1, sizeof(::etcdserverpb::MemberUpdateResponse)},
  { 338, -1, sizeof(::etcdserverpb::MemberListRequest)},
  { 343, -1, sizeof(::etcdserverpb::MemberListResponse)},
  { 350, -1, sizeof(::etcdserverpb::DefragmentRequest)},
  { 355, -1, sizeof(::etcdserverpb::DefragmentResponse)},
  { 361, -1, sizeof(::etcdserverpb::MoveLeaderRequest)},
  { 367, -1, sizeof(::etcdserverpb::MoveLeaderResponse)},
  { 373, -1, sizeof(::etcdserverpb::AlarmRequest)},
  { 381, -1, sizeof(::etcdserverpb::AlarmMember)},
  { 388, -1, sizeof(::etcdserverpb::AlarmResponse)},
  { 395, -1, sizeof(::etcdserverpb::StatusRequest)},
  { 400, -1, sizeof(::etcdserverpb::StatusResponse)},
  { 414, -1, sizeof(::etcdserverpb::AuthEnableRequest)},
  { 419, -1, sizeof(::etcdserverpb::AuthDisableRequest)},
  { 424, -1, sizeof(::etcdserverpb::AuthenticateRequest)},
  { 431, -1, sizeof(::etcdserverpb::AuthUserAddRequest)},
  { 438, -1, sizeof(::etcdserverpb::AuthUserGetRequest)},
  { 444, -1, sizeof(::etcdserverpb::AuthUserDeleteRequest)},
  { 450, -1, sizeof(::etcdserverpb::AuthUserChangePasswordRequest)},
  { 457, -1, sizeof(::etcdserverpb::AuthUserGrantRoleRequest)},
  { 464, -1, sizeof(::etcdserverpb::AuthUserRevokeRoleRequest)},
  { 471, -1, sizeof(::etcdserverpb::AuthRoleAddRequest)},
  { 477, -1, sizeof(::etcdserverpb::AuthRoleGetRequest)},
  { 483, -1, sizeof(::etcdserverpb::AuthUserListRequest)},
  { 488, -1, sizeof(::etcdserverpb::AuthRoleListRequest)},
  { 493, -1, sizeof(::etcdserverpb::AuthRoleDeleteRequest)},
  { 499, -1, sizeof(::etcdserverpb::AuthRoleGrantPermissionRequest)},
  { 506, -1, sizeof(::etcdserverpb::AuthRoleRevokePermissionRequest)},
  { 514, -1, sizeof(::etcdserverpb::AuthEnableResponse)},
  { 520, -1, sizeof(::etcdserverpb::AuthDisableResponse)},
  { 526, -1, sizeof(::etcdserverpb::AuthenticateResponse)},
  { 533, -1, sizeof(::etcdserverpb::AuthUserAddResponse)},
  { 539, -1, sizeof(::etcdserverpb::AuthUserGetResponse)},
  { 546, -1, sizeof(::etcdserverpb::AuthUserDeleteResponse)},
  { 552, -1, sizeof(::etcdserverpb::AuthUserChangePasswordResponse)},
  { 558, -1, sizeof(::etcdserverpb::AuthUserGrantRoleResponse)},
  { 564, -1, sizeof(::etcdserverpb::AuthUserRevokeRoleResponse)},
  { 570, -1, sizeof(::etcdserverpb::AuthRoleAddResponse)},
  { 576, -1, sizeof(::etcdserverpb::AuthRoleGetResponse)},
  { 583, -1, sizeof(::etcdserverpb::AuthRoleListResponse)},
  { 590, -1, sizeof(::etcdserverpb::AuthUserListResponse)},
  { 597, -1, sizeof(::etcdserverpb::AuthRoleDeleteResponse)},
  { 603, -1, sizeof(::etcdserverpb::AuthRoleGrantPermissionResponse)},
  { 609, -1, sizeof(::etcdserverpb::AuthRoleRevokePermissionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_ResponseHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_RangeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_RangeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_PutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_PutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_DeleteRangeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_DeleteRangeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_RequestOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_ResponseOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_Compare_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_TxnRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_TxnResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_CompactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_CompactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_HashRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_HashKVRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_HashKVResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_HashResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_SnapshotRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_SnapshotResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_WatchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_WatchCreateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_WatchCancelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_WatchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseGrantRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseGrantResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseRevokeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseRevokeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseKeepAliveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseKeepAliveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseTimeToLiveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseTimeToLiveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseLeasesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_LeaseLeasesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MemberAddRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MemberAddResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MemberRemoveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MemberRemoveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MemberUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MemberUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MemberListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MemberListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_DefragmentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_DefragmentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MoveLeaderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_MoveLeaderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AlarmRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AlarmMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AlarmResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_StatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_StatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthEnableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthDisableRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthenticateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserAddRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserDeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserChangePasswordRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserGrantRoleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserRevokeRoleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleAddRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleDeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleGrantPermissionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleRevokePermissionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthEnableResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthDisableResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthenticateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserAddResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserDeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserChangePasswordResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserGrantRoleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserRevokeRoleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleAddResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthUserListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleDeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleGrantPermissionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::etcdserverpb::_AuthRoleRevokePermissionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 85);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\trpc.proto\022\014etcdserverpb\032\010kv.proto\032\naut"
      "h.proto\"\\\n\016ResponseHeader\022\022\n\ncluster_id\030"
      "\001 \001(\004\022\021\n\tmember_id\030\002 \001(\004\022\020\n\010revision\030\003 \001"
      "(\003\022\021\n\traft_term\030\004 \001(\004\"\344\003\n\014RangeRequest\022\013"
      "\n\003key\030\001 \001(\014\022\021\n\trange_end\030\002 \001(\014\022\r\n\005limit\030"
      "\003 \001(\003\022\020\n\010revision\030\004 \001(\003\0228\n\nsort_order\030\005 "
      "\001(\0162$.etcdserverpb.RangeRequest.SortOrde"
      "r\022:\n\013sort_target\030\006 \001(\0162%.etcdserverpb.Ra"
      "ngeRequest.SortTarget\022\024\n\014serializable\030\007 "
      "\001(\010\022\021\n\tkeys_only\030\010 \001(\010\022\022\n\ncount_only\030\t \001"
      "(\010\022\030\n\020min_mod_revision\030\n \001(\003\022\030\n\020max_mod_"
      "revision\030\013 \001(\003\022\033\n\023min_create_revision\030\014 "
      "\001(\003\022\033\n\023max_create_revision\030\r \001(\003\".\n\tSort"
      "Order\022\010\n\004NONE\020\000\022\n\n\006ASCEND\020\001\022\013\n\007DESCEND\020\002"
      "\"B\n\nSortTarget\022\007\n\003KEY\020\000\022\013\n\007VERSION\020\001\022\n\n\006"
      "CREATE\020\002\022\007\n\003MOD\020\003\022\t\n\005VALUE\020\004\"y\n\rRangeRes"
      "ponse\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Res"
      "ponseHeader\022\035\n\003kvs\030\002 \003(\0132\020.mvccpb.KeyVal"
      "ue\022\014\n\004more\030\003 \001(\010\022\r\n\005count\030\004 \001(\003\"t\n\nPutRe"
      "quest\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\022\r\n\005lea"
      "se\030\003 \001(\003\022\017\n\007prev_kv\030\004 \001(\010\022\024\n\014ignore_valu"
      "e\030\005 \001(\010\022\024\n\014ignore_lease\030\006 \001(\010\"^\n\013PutResp"
      "onse\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Resp"
      "onseHeader\022!\n\007prev_kv\030\002 \001(\0132\020.mvccpb.Key"
      "Value\"E\n\022DeleteRangeRequest\022\013\n\003key\030\001 \001(\014"
      "\022\021\n\trange_end\030\002 \001(\014\022\017\n\007prev_kv\030\003 \001(\010\"x\n\023"
      "DeleteRangeResponse\022,\n\006header\030\001 \001(\0132\034.et"
      "cdserverpb.ResponseHeader\022\017\n\007deleted\030\002 \001"
      "(\003\022\"\n\010prev_kvs\030\003 \003(\0132\020.mvccpb.KeyValue\"\357"
      "\001\n\tRequestOp\0223\n\rrequest_range\030\001 \001(\0132\032.et"
      "cdserverpb.RangeRequestH\000\022/\n\013request_put"
      "\030\002 \001(\0132\030.etcdserverpb.PutRequestH\000\022@\n\024re"
      "quest_delete_range\030\003 \001(\0132 .etcdserverpb."
      "DeleteRangeRequestH\000\022/\n\013request_txn\030\004 \001("
      "\0132\030.etcdserverpb.TxnRequestH\000B\t\n\007request"
      "\"\371\001\n\nResponseOp\0225\n\016response_range\030\001 \001(\0132"
      "\033.etcdserverpb.RangeResponseH\000\0221\n\014respon"
      "se_put\030\002 \001(\0132\031.etcdserverpb.PutResponseH"
      "\000\022B\n\025response_delete_range\030\003 \001(\0132!.etcds"
      "erverpb.DeleteRangeResponseH\000\0221\n\014respons"
      "e_txn\030\004 \001(\0132\031.etcdserverpb.TxnResponseH\000"
      "B\n\n\010response\"\226\003\n\007Compare\0223\n\006result\030\001 \001(\016"
      "2#.etcdserverpb.Compare.CompareResult\0223\n"
      "\006target\030\002 \001(\0162#.etcdserverpb.Compare.Com"
      "pareTarget\022\013\n\003key\030\003 \001(\014\022\021\n\007version\030\004 \001(\003"
      "H\000\022\031\n\017create_revision\030\005 \001(\003H\000\022\026\n\014mod_rev"
      "ision\030\006 \001(\003H\000\022\017\n\005value\030\007 \001(\014H\000\022\017\n\005lease\030"
      "\010 \001(\003H\000\022\021\n\trange_end\030@ \001(\014\"@\n\rCompareRes"
      "ult\022\t\n\005EQUAL\020\000\022\013\n\007GREATER\020\001\022\010\n\004LESS\020\002\022\r\n"
      "\tNOT_EQUAL\020\003\"G\n\rCompareTarget\022\013\n\007VERSION"
      "\020\000\022\n\n\006CREATE\020\001\022\007\n\003MOD\020\002\022\t\n\005VALUE\020\003\022\t\n\005LE"
      "ASE\020\004B\016\n\014target_union\"\210\001\n\nTxnRequest\022&\n\007"
      "compare\030\001 \003(\0132\025.etcdserverpb.Compare\022(\n\007"
      "success\030\002 \003(\0132\027.etcdserverpb.RequestOp\022("
      "\n\007failure\030\003 \003(\0132\027.etcdserverpb.RequestOp"
      "\"{\n\013TxnResponse\022,\n\006header\030\001 \001(\0132\034.etcdse"
      "rverpb.ResponseHeader\022\021\n\tsucceeded\030\002 \001(\010"
      "\022+\n\tresponses\030\003 \003(\0132\030.etcdserverpb.Respo"
      "nseOp\"7\n\021CompactionRequest\022\020\n\010revision\030\001"
      " \001(\003\022\020\n\010physical\030\002 \001(\010\"B\n\022CompactionResp"
      "onse\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Resp"
      "onseHeader\"\r\n\013HashRequest\"!\n\rHashKVReque"
      "st\022\020\n\010revision\030\001 \001(\003\"f\n\016HashKVResponse\022,"
      "\n\006header\030\001 \001(\0132\034.etcdserverpb.ResponseHe"
      "ader\022\014\n\004hash\030\002 \001(\r\022\030\n\020compact_revision\030\003"
      " \001(\003\"J\n\014HashResponse\022,\n\006header\030\001 \001(\0132\034.e"
      "tcdserverpb.ResponseHeader\022\014\n\004hash\030\002 \001(\r"
      "\"\021\n\017SnapshotRequest\"g\n\020SnapshotResponse\022"
      ",\n\006header\030\001 \001(\0132\034.etcdserverpb.ResponseH"
      "eader\022\027\n\017remaining_bytes\030\002 \001(\004\022\014\n\004blob\030\003"
      " \001(\014\"\227\001\n\014WatchRequest\022:\n\016create_request\030"
      "\001 \001(\0132 .etcdserverpb.WatchCreateRequestH"
      "\000\022:\n\016cancel_request\030\002 \001(\0132 .etcdserverpb"
      ".WatchCancelRequestH\000B\017\n\rrequest_union\"\355"
      "\001\n\022WatchCreateRequest\022\013\n\003key\030\001 \001(\014\022\021\n\tra"
      "nge_end\030\002 \001(\014\022\026\n\016start_revision\030\003 \001(\003\022\027\n"
      "\017progress_notify\030\004 \001(\010\022<\n\007filters\030\005 \003(\0162"
      "+.etcdserverpb.WatchCreateRequest.Filter"
      "Type\022\017\n\007prev_kv\030\006 \001(\010\022\020\n\010watch_id\030\007 \001(\003\""
      "%\n\nFilterType\022\t\n\005NOPUT\020\000\022\014\n\010NODELETE\020\001\"&"
      "\n\022WatchCancelRequest\022\020\n\010watch_id\030\001 \001(\003\"\302"
      "\001\n\rWatchResponse\022,\n\006header\030\001 \001(\0132\034.etcds"
      "erverpb.ResponseHeader\022\020\n\010watch_id\030\002 \001(\003"
      "\022\017\n\007created\030\003 \001(\010\022\020\n\010canceled\030\004 \001(\010\022\030\n\020c"
      "ompact_revision\030\005 \001(\003\022\025\n\rcancel_reason\030\006"
      " \001(\t\022\035\n\006events\030\013 \003(\0132\r.mvccpb.Event\",\n\021L"
      "easeGrantRequest\022\013\n\003TTL\030\001 \001(\003\022\n\n\002ID\030\002 \001("
      "\003\"j\n\022LeaseGrantResponse\022,\n\006header\030\001 \001(\0132"
      "\034.etcdserverpb.ResponseHeader\022\n\n\002ID\030\002 \001("
      "\003\022\013\n\003TTL\030\003 \001(\003\022\r\n\005error\030\004 \001(\t\" \n\022LeaseRe"
      "vokeRequest\022\n\n\002ID\030\001 \001(\003\"C\n\023LeaseRevokeRe"
      "sponse\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Re"
      "sponseHeader\"#\n\025LeaseKeepAliveRequest\022\n\n"
      "\002ID\030\001 \001(\003\"_\n\026LeaseKeepAliveResponse\022,\n\006h"
      "eader\030\001 \001(\0132\034.etcdserverpb.ResponseHeade"
      "r\022\n\n\002ID\030\002 \001(\003\022\013\n\003TTL\030\003 \001(\003\"2\n\026LeaseTimeT"
      "oLiveRequest\022\n\n\002ID\030\001 \001(\003\022\014\n\004keys\030\002 \001(\010\"\202"
      "\001\n\027LeaseTimeToLiveResponse\022,\n\006header\030\001 \001"
      "(\0132\034.etcdserverpb.ResponseHeader\022\n\n\002ID\030\002"
      " \001(\003\022\013\n\003TTL\030\003 \001(\003\022\022\n\ngrantedTTL\030\004 \001(\003\022\014\n"
      "\004keys\030\005 \003(\014\"\024\n\022LeaseLeasesRequest\"\031\n\013Lea"
      "seStatus\022\n\n\002ID\030\001 \001(\003\"n\n\023LeaseLeasesRespo"
      "nse\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Respo"
      "nseHeader\022)\n\006leases\030\002 \003(\0132\031.etcdserverpb"
      ".LeaseStatus\"H\n\006Member\022\n\n\002ID\030\001 \001(\004\022\014\n\004na"
      "me\030\002 \001(\t\022\020\n\010peerURLs\030\003 \003(\t\022\022\n\nclientURLs"
      "\030\004 \003(\t\"$\n\020MemberAddRequest\022\020\n\010peerURLs\030\001"
      " \003(\t\"\216\001\n\021MemberAddResponse\022,\n\006header\030\001 \001"
      "(\0132\034.etcdserverpb.ResponseHeader\022$\n\006memb"
      "er\030\002 \001(\0132\024.etcdserverpb.Member\022%\n\007member"
      "s\030\003 \003(\0132\024.etcdserverpb.Member\"!\n\023MemberR"
      "emoveRequest\022\n\n\002ID\030\001 \001(\004\"k\n\024MemberRemove"
      "Response\022,\n\006header\030\001 \001(\0132\034.etcdserverpb."
      "ResponseHeader\022%\n\007members\030\002 \003(\0132\024.etcdse"
      "rverpb.Member\"3\n\023MemberUpdateRequest\022\n\n\002"
      "ID\030\001 \001(\004\022\020\n\010peerURLs\030\002 \003(\t\"k\n\024MemberUpda"
      "teResponse\022,\n\006header\030\001 \001(\0132\034.etcdserverp"
      "b.ResponseHeader\022%\n\007members\030\002 \003(\0132\024.etcd"
      "serverpb.Member\"\023\n\021MemberListRequest\"i\n\022"
      "MemberListResponse\022,\n\006header\030\001 \001(\0132\034.etc"
      "dserverpb.ResponseHeader\022%\n\007members\030\002 \003("
      "\0132\024.etcdserverpb.Member\"\023\n\021DefragmentReq"
      "uest\"B\n\022DefragmentResponse\022,\n\006header\030\001 \001"
      "(\0132\034.etcdserverpb.ResponseHeader\"%\n\021Move"
      "LeaderRequest\022\020\n\010targetID\030\001 \001(\004\"B\n\022MoveL"
      "eaderResponse\022,\n\006header\030\001 \001(\0132\034.etcdserv"
      "erpb.ResponseHeader\"\266\001\n\014AlarmRequest\0226\n\006"
      "action\030\001 \001(\0162&.etcdserverpb.AlarmRequest"
      ".AlarmAction\022\020\n\010memberID\030\002 \001(\004\022&\n\005alarm\030"
      "\003 \001(\0162\027.etcdserverpb.AlarmType\"4\n\013AlarmA"
      "ction\022\007\n\003GET\020\000\022\014\n\010ACTIVATE\020\001\022\016\n\nDEACTIVA"
      "TE\020\002\"G\n\013AlarmMember\022\020\n\010memberID\030\001 \001(\004\022&\n"
      "\005alarm\030\002 \001(\0162\027.etcdserverpb.AlarmType\"h\n"
      "\rAlarmResponse\022,\n\006header\030\001 \001(\0132\034.etcdser"
      "verpb.ResponseHeader\022)\n\006alarms\030\002 \003(\0132\031.e"
      "tcdserverpb.AlarmMember\"\017\n\rStatusRequest"
      "\"\323\001\n\016StatusResponse\022,\n\006header\030\001 \001(\0132\034.et"
      "cdserverpb.ResponseHeader\022\017\n\007version\030\002 \001"
      "(\t\022\016\n\006dbSize\030\003 \001(\003\022\016\n\006leader\030\004 \001(\004\022\021\n\tra"
      "ftIndex\030\005 \001(\004\022\020\n\010raftTerm\030\006 \001(\004\022\030\n\020raftA"
      "ppliedIndex\030\007 \001(\004\022\016\n\006errors\030\010 \003(\t\022\023\n\013dbS"
      "izeInUse\030\t \001(\003\"\023\n\021AuthEnableRequest\"\024\n\022A"
      "uthDisableRequest\"5\n\023AuthenticateRequest"
      "\022\014\n\004name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"4\n\022Auth"
      "UserAddRequest\022\014\n\004name\030\001 \001(\t\022\020\n\010password"
      "\030\002 \001(\t\"\"\n\022AuthUserGetRequest\022\014\n\004name\030\001 \001"
      "(\t\"%\n\025AuthUserDeleteRequest\022\014\n\004name\030\001 \001("
      "\t\"\?\n\035AuthUserChangePasswordRequest\022\014\n\004na"
      "me\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"6\n\030AuthUserGr"
      "antRoleRequest\022\014\n\004user\030\001 \001(\t\022\014\n\004role\030\002 \001"
      "(\t\"7\n\031AuthUserRevokeRoleRequest\022\014\n\004name\030"
      "\001 \001(\t\022\014\n\004role\030\002 \001(\t\"\"\n\022AuthRoleAddReques"
      "t\022\014\n\004name\030\001 \001(\t\"\"\n\022AuthRoleGetRequest\022\014\n"
      "\004role\030\001 \001(\t\"\025\n\023AuthUserListRequest\"\025\n\023Au"
      "thRoleListRequest\"%\n\025AuthRoleDeleteReque"
      "st\022\014\n\004role\030\001 \001(\t\"P\n\036AuthRoleGrantPermiss"
      "ionRequest\022\014\n\004name\030\001 \001(\t\022 \n\004perm\030\002 \001(\0132\022"
      ".authpb.Permission\"O\n\037AuthRoleRevokePerm"
      "issionRequest\022\014\n\004role\030\001 \001(\t\022\013\n\003key\030\002 \001(\t"
      "\022\021\n\trange_end\030\003 \001(\t\"B\n\022AuthEnableRespons"
      "e\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Respons"
      "eHeader\"C\n\023AuthDisableResponse\022,\n\006header"
      "\030\001 \001(\0132\034.etcdserverpb.ResponseHeader\"S\n\024"
      "AuthenticateResponse\022,\n\006header\030\001 \001(\0132\034.e"
      "tcdserverpb.ResponseHeader\022\r\n\005token\030\002 \001("
      "\t\"C\n\023AuthUserAddResponse\022,\n\006header\030\001 \001(\013"
      "2\034.etcdserverpb.ResponseHeader\"R\n\023AuthUs"
      "erGetResponse\022,\n\006header\030\001 \001(\0132\034.etcdserv"
      "erpb.ResponseHeader\022\r\n\005roles\030\002 \003(\t\"F\n\026Au"
      "thUserDeleteResponse\022,\n\006header\030\001 \001(\0132\034.e"
      "tcdserverpb.ResponseHeader\"N\n\036AuthUserCh"
      "angePasswordResponse\022,\n\006header\030\001 \001(\0132\034.e"
      "tcdserverpb.ResponseHeader\"I\n\031AuthUserGr"
      "antRoleResponse\022,\n\006header\030\001 \001(\0132\034.etcdse"
      "rverpb.ResponseHeader\"J\n\032AuthUserRevokeR"
      "oleResponse\022,\n\006header\030\001 \001(\0132\034.etcdserver"
      "pb.ResponseHeader\"C\n\023AuthRoleAddResponse"
      "\022,\n\006header\030\001 \001(\0132\034.etcdserverpb.Response"
      "Header\"e\n\023AuthRoleGetResponse\022,\n\006header\030"
      "\001 \001(\0132\034.etcdserverpb.ResponseHeader\022 \n\004p"
      "erm\030\002 \003(\0132\022.authpb.Permission\"S\n\024AuthRol"
      "eListResponse\022,\n\006header\030\001 \001(\0132\034.etcdserv"
      "erpb.ResponseHeader\022\r\n\005roles\030\002 \003(\t\"S\n\024Au"
      "thUserListResponse\022,\n\006header\030\001 \001(\0132\034.etc"
      "dserverpb.ResponseHeader\022\r\n\005users\030\002 \003(\t\""
      "F\n\026AuthRoleDeleteResponse\022,\n\006header\030\001 \001("
      "\0132\034.etcdserverpb.ResponseHeader\"O\n\037AuthR"
      "oleGrantPermissionResponse\022,\n\006header\030\001 \001"
      "(\0132\034.etcdserverpb.ResponseHeader\"P\n Auth"
      "RoleRevokePermissionResponse\022,\n\006header\030\001"
      " \001(\0132\034.etcdserverpb.ResponseHeader*/\n\tAl"
      "armType\022\010\n\004NONE\020\000\022\013\n\007NOSPACE\020\001\022\013\n\007CORRUP"
      "T\020\0022\352\002\n\002KV\022B\n\005Range\022\032.etcdserverpb.Range"
      "Request\032\033.etcdserverpb.RangeResponse\"\000\022<"
      "\n\003Put\022\030.etcdserverpb.PutRequest\032\031.etcdse"
      "rverpb.PutResponse\"\000\022T\n\013DeleteRange\022 .et"
      "cdserverpb.DeleteRangeRequest\032!.etcdserv"
      "erpb.DeleteRangeResponse\"\000\022<\n\003Txn\022\030.etcd"
      "serverpb.TxnRequest\032\031.etcdserverpb.TxnRe"
      "sponse\"\000\022N\n\007Compact\022\037.etcdserverpb.Compa"
      "ctionRequest\032 .etcdserverpb.CompactionRe"
      "sponse\"\0002O\n\005Watch\022F\n\005Watch\022\032.etcdserverp"
      "b.WatchRequest\032\033.etcdserverpb.WatchRespo"
      "nse\"\000(\0010\0012\313\003\n\005Lease\022Q\n\nLeaseGrant\022\037.etcd"
      "serverpb.LeaseGrantRequest\032 .etcdserverp"
      "b.LeaseGrantResponse\"\000\022T\n\013LeaseRevoke\022 ."
      "etcdserverpb.LeaseRevokeRequest\032!.etcdse"
      "rverpb.LeaseRevokeResponse\"\000\022a\n\016LeaseKee"
      "pAlive\022#.etcdserverpb.LeaseKeepAliveRequ"
      "est\032$.etcdserverpb.LeaseKeepAliveRespons"
      "e\"\000(\0010\001\022`\n\017LeaseTimeToLive\022$.etcdserverp"
      "b.LeaseTimeToLiveRequest\032%.etcdserverpb."
      "LeaseTimeToLiveResponse\"\000\022T\n\013LeaseLeases"
      "\022 .etcdserverpb.LeaseLeasesRequest\032!.etc"
      "dserverpb.LeaseLeasesResponse\"\0002\336\002\n\007Clus"
      "ter\022N\n\tMemberAdd\022\036.etcdserverpb.MemberAd"
      "dRequest\032\037.etcdserverpb.MemberAddRespons"
      "e\"\000\022W\n\014MemberRemove\022!.etcdserverpb.Membe"
      "rRemoveRequest\032\".etcdserverpb.MemberRemo"
      "veResponse\"\000\022W\n\014MemberUpdate\022!.etcdserve"
      "rpb.MemberUpdateRequest\032\".etcdserverpb.M"
      "emberUpdateResponse\"\000\022Q\n\nMemberList\022\037.et"
      "cdserverpb.MemberListRequest\032 .etcdserve"
      "rpb.MemberListResponse\"\0002\225\004\n\013Maintenance"
      "\022B\n\005Alarm\022\032.etcdserverpb.AlarmRequest\032\033."
      "etcdserverpb.AlarmResponse\"\000\022E\n\006Status\022\033"
      ".etcdserverpb.StatusRequest\032\034.etcdserver"
      "pb.StatusResponse\"\000\022Q\n\nDefragment\022\037.etcd"
      "serverpb.DefragmentRequest\032 .etcdserverp"
      "b.DefragmentResponse\"\000\022\?\n\004Hash\022\031.etcdser"
      "verpb.HashRequest\032\032.etcdserverpb.HashRes"
      "ponse\"\000\022E\n\006HashKV\022\033.etcdserverpb.HashKVR"
      "equest\032\034.etcdserverpb.HashKVResponse\"\000\022M"
      "\n\010Snapshot\022\035.etcdserverpb.SnapshotReques"
      "t\032\036.etcdserverpb.SnapshotResponse\"\0000\001\022Q\n"
      "\nMoveLeader\022\037.etcdserverpb.MoveLeaderReq"
      "uest\032 .etcdserverpb.MoveLeaderResponse\"\000"
      "2\335\013\n\004Auth\022Q\n\nAuthEnable\022\037.etcdserverpb.A"
      "uthEnableRequest\032 .etcdserverpb.AuthEnab"
      "leResponse\"\000\022T\n\013AuthDisable\022 .etcdserver"
      "pb.AuthDisableRequest\032!.etcdserverpb.Aut"
      "hDisableResponse\"\000\022W\n\014Authenticate\022!.etc"
      "dserverpb.AuthenticateRequest\032\".etcdserv"
      "erpb.AuthenticateResponse\"\000\022P\n\007UserAdd\022 "
      ".etcdserverpb.AuthUserAddRequest\032!.etcds"
      "erverpb.AuthUserAddResponse\"\000\022P\n\007UserGet"
      "\022 .etcdserverpb.AuthUserGetRequest\032!.etc"
      "dserverpb.AuthUserGetResponse\"\000\022S\n\010UserL"
      "ist\022!.etcdserverpb.AuthUserListRequest\032\""
      ".etcdserverpb.AuthUserListResponse\"\000\022Y\n\n"
      "UserDelete\022#.etcdserverpb.AuthUserDelete"
      "Request\032$.etcdserverpb.AuthUserDeleteRes"
      "ponse\"\000\022q\n\022UserChangePassword\022+.etcdserv"
      "erpb.AuthUserChangePasswordRequest\032,.etc"
      "dserverpb.AuthUserChangePasswordResponse"
      "\"\000\022b\n\rUserGrantRole\022&.etcdserverpb.AuthU"
      "serGrantRoleRequest\032\'.etcdserverpb.AuthU"
      "serGrantRoleResponse\"\000\022e\n\016UserRevokeRole"
      "\022\'.etcdserverpb.AuthUserRevokeRoleReques"
      "t\032(.etcdserverpb.AuthUserRevokeRoleRespo"
      "nse\"\000\022P\n\007RoleAdd\022 .etcdserverpb.AuthRole"
      "AddRequest\032!.etcdserverpb.AuthRoleAddRes"
      "ponse\"\000\022P\n\007RoleGet\022 .etcdserverpb.AuthRo"
      "leGetRequest\032!.etcdserverpb.AuthRoleGetR"
      "esponse\"\000\022S\n\010RoleList\022!.etcdserverpb.Aut"
      "hRoleListRequest\032\".etcdserverpb.AuthRole"
      "ListResponse\"\000\022Y\n\nRoleDelete\022#.etcdserve"
      "rpb.AuthRoleDeleteRequest\032$.etcdserverpb"
      ".AuthRoleDeleteResponse\"\000\022t\n\023RoleGrantPe"
      "rmission\022,.etcdserverpb.AuthRoleGrantPer"
      "missionRequest\032-.etcdserverpb.AuthRoleGr"
      "antPermissionResponse\"\000\022w\n\024RoleRevokePer"
      "mission\022-.etcdserverpb.AuthRoleRevokePer"
      "missionRequest\032..etcdserverpb.AuthRoleRe"
      "vokePermissionResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 10992);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc.proto", &protobuf_RegisterTypes);
  ::protobuf_kv_2eproto::AddDescriptors();
  ::protobuf_auth_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rpc_2eproto
namespace etcdserverpb {
const ::google::protobuf::EnumDescriptor* RangeRequest_SortOrder_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[0];
}
bool RangeRequest_SortOrder_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RangeRequest_SortOrder RangeRequest::NONE;
const RangeRequest_SortOrder RangeRequest::ASCEND;
const RangeRequest_SortOrder RangeRequest::DESCEND;
const RangeRequest_SortOrder RangeRequest::SortOrder_MIN;
const RangeRequest_SortOrder RangeRequest::SortOrder_MAX;
const int RangeRequest::SortOrder_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RangeRequest_SortTarget_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[1];
}
bool RangeRequest_SortTarget_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RangeRequest_SortTarget RangeRequest::KEY;
const RangeRequest_SortTarget RangeRequest::VERSION;
const RangeRequest_SortTarget RangeRequest::CREATE;
const RangeRequest_SortTarget RangeRequest::MOD;
const RangeRequest_SortTarget RangeRequest::VALUE;
const RangeRequest_SortTarget RangeRequest::SortTarget_MIN;
const RangeRequest_SortTarget RangeRequest::SortTarget_MAX;
const int RangeRequest::SortTarget_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Compare_CompareResult_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[2];
}
bool Compare_CompareResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Compare_CompareResult Compare::EQUAL;
const Compare_CompareResult Compare::GREATER;
const Compare_CompareResult Compare::LESS;
const Compare_CompareResult Compare::NOT_EQUAL;
const Compare_CompareResult Compare::CompareResult_MIN;
const Compare_CompareResult Compare::CompareResult_MAX;
const int Compare::CompareResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Compare_CompareTarget_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[3];
}
bool Compare_CompareTarget_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Compare_CompareTarget Compare::VERSION;
const Compare_CompareTarget Compare::CREATE;
const Compare_CompareTarget Compare::MOD;
const Compare_CompareTarget Compare::VALUE;
const Compare_CompareTarget Compare::LEASE;
const Compare_CompareTarget Compare::CompareTarget_MIN;
const Compare_CompareTarget Compare::CompareTarget_MAX;
const int Compare::CompareTarget_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WatchCreateRequest_FilterType_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[4];
}
bool WatchCreateRequest_FilterType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WatchCreateRequest_FilterType WatchCreateRequest::NOPUT;
const WatchCreateRequest_FilterType WatchCreateRequest::NODELETE;
const WatchCreateRequest_FilterType WatchCreateRequest::FilterType_MIN;
const WatchCreateRequest_FilterType WatchCreateRequest::FilterType_MAX;
const int WatchCreateRequest::FilterType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AlarmRequest_AlarmAction_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[5];
}
bool AlarmRequest_AlarmAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AlarmRequest_AlarmAction AlarmRequest::GET;
const AlarmRequest_AlarmAction AlarmRequest::ACTIVATE;
const AlarmRequest_AlarmAction AlarmRequest::DEACTIVATE;
const AlarmRequest_AlarmAction AlarmRequest::AlarmAction_MIN;
const AlarmRequest_AlarmAction AlarmRequest::AlarmAction_MAX;
const int AlarmRequest::AlarmAction_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AlarmType_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[6];
}
bool AlarmType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ResponseHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseHeader::kClusterIdFieldNumber;
const int ResponseHeader::kMemberIdFieldNumber;
const int ResponseHeader::kRevisionFieldNumber;
const int ResponseHeader::kRaftTermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseHeader::ResponseHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.ResponseHeader)
}
ResponseHeader::ResponseHeader(const ResponseHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cluster_id_, &from.cluster_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&raft_term_) -
    reinterpret_cast<char*>(&cluster_id_)) + sizeof(raft_term_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.ResponseHeader)
}

void ResponseHeader::SharedCtor() {
  ::memset(&cluster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&raft_term_) -
      reinterpret_cast<char*>(&cluster_id_)) + sizeof(raft_term_));
  _cached_size_ = 0;
}

ResponseHeader::~ResponseHeader() {
  // @@protoc_insertion_point(destructor:etcdserverpb.ResponseHeader)
  SharedDtor();
}

void ResponseHeader::SharedDtor() {
}

void ResponseHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseHeader::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseHeader& ResponseHeader::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsResponseHeader();
  return *internal_default_instance();
}

ResponseHeader* ResponseHeader::New(::google::protobuf::Arena* arena) const {
  ResponseHeader* n = new ResponseHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cluster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&raft_term_) -
      reinterpret_cast<char*>(&cluster_id_)) + sizeof(raft_term_));
  _internal_metadata_.Clear();
}

bool ResponseHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.ResponseHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 cluster_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 member_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &member_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 revision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 raft_term = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &raft_term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.ResponseHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.ResponseHeader)
  return false;
#undef DO_
}

void ResponseHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cluster_id = 1;
  if (this->cluster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cluster_id(), output);
  }

  // uint64 member_id = 2;
  if (this->member_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->member_id(), output);
  }

  // int64 revision = 3;
  if (this->revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->revision(), output);
  }

  // uint64 raft_term = 4;
  if (this->raft_term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->raft_term(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.ResponseHeader)
}

::google::protobuf::uint8* ResponseHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cluster_id = 1;
  if (this->cluster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cluster_id(), target);
  }

  // uint64 member_id = 2;
  if (this->member_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->member_id(), target);
  }

  // int64 revision = 3;
  if (this->revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->revision(), target);
  }

  // uint64 raft_term = 4;
  if (this->raft_term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->raft_term(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.ResponseHeader)
  return target;
}

size_t ResponseHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.ResponseHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 cluster_id = 1;
  if (this->cluster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cluster_id());
  }

  // uint64 member_id = 2;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->member_id());
  }

  // int64 revision = 3;
  if (this->revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->revision());
  }

  // uint64 raft_term = 4;
  if (this->raft_term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->raft_term());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.ResponseHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.ResponseHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.ResponseHeader)
    MergeFrom(*source);
  }
}

void ResponseHeader::MergeFrom(const ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.ResponseHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cluster_id() != 0) {
    set_cluster_id(from.cluster_id());
  }
  if (from.member_id() != 0) {
    set_member_id(from.member_id());
  }
  if (from.revision() != 0) {
    set_revision(from.revision());
  }
  if (from.raft_term() != 0) {
    set_raft_term(from.raft_term());
  }
}

void ResponseHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseHeader::CopyFrom(const ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseHeader::IsInitialized() const {
  return true;
}

void ResponseHeader::Swap(ResponseHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseHeader::InternalSwap(ResponseHeader* other) {
  using std::swap;
  swap(cluster_id_, other->cluster_id_);
  swap(member_id_, other->member_id_);
  swap(revision_, other->revision_);
  swap(raft_term_, other->raft_term_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseHeader::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RangeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RangeRequest::kKeyFieldNumber;
const int RangeRequest::kRangeEndFieldNumber;
const int RangeRequest::kLimitFieldNumber;
const int RangeRequest::kRevisionFieldNumber;
const int RangeRequest::kSortOrderFieldNumber;
const int RangeRequest::kSortTargetFieldNumber;
const int RangeRequest::kSerializableFieldNumber;
const int RangeRequest::kKeysOnlyFieldNumber;
const int RangeRequest::kCountOnlyFieldNumber;
const int RangeRequest::kMinModRevisionFieldNumber;
const int RangeRequest::kMaxModRevisionFieldNumber;
const int RangeRequest::kMinCreateRevisionFieldNumber;
const int RangeRequest::kMaxCreateRevisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RangeRequest::RangeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsRangeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.RangeRequest)
}
RangeRequest::RangeRequest(const RangeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.range_end().size() > 0) {
    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_only_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(count_only_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.RangeRequest)
}

void RangeRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_only_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(count_only_));
  _cached_size_ = 0;
}

RangeRequest::~RangeRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.RangeRequest)
  SharedDtor();
}

void RangeRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RangeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RangeRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RangeRequest& RangeRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsRangeRequest();
  return *internal_default_instance();
}

RangeRequest* RangeRequest::New(::google::protobuf::Arena* arena) const {
  RangeRequest* n = new RangeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.RangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_only_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(count_only_));
  _internal_metadata_.Clear();
}

bool RangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.RangeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes range_end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_range_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 revision = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sort_order(static_cast< ::etcdserverpb::RangeRequest_SortOrder >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sort_target(static_cast< ::etcdserverpb::RangeRequest_SortTarget >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool serializable = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &serializable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool keys_only = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keys_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool count_only = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &count_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 min_mod_revision = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &min_mod_revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_mod_revision = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_mod_revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 min_create_revision = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &min_create_revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_create_revision = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_create_revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.RangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.RangeRequest)
  return false;
#undef DO_
}

void RangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.RangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->range_end(), output);
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->limit(), output);
  }

  // int64 revision = 4;
  if (this->revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->revision(), output);
  }

  // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
  if (this->sort_order() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->sort_order(), output);
  }

  // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
  if (this->sort_target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->sort_target(), output);
  }

  // bool serializable = 7;
  if (this->serializable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->serializable(), output);
  }

  // bool keys_only = 8;
  if (this->keys_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->keys_only(), output);
  }

  // bool count_only = 9;
  if (this->count_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->count_only(), output);
  }

  // int64 min_mod_revision = 10;
  if (this->min_mod_revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->min_mod_revision(), output);
  }

  // int64 max_mod_revision = 11;
  if (this->max_mod_revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->max_mod_revision(), output);
  }

  // int64 min_create_revision = 12;
  if (this->min_create_revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->min_create_revision(), output);
  }

  // int64 max_create_revision = 13;
  if (this->max_create_revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->max_create_revision(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.RangeRequest)
}

::google::protobuf::uint8* RangeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.RangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->range_end(), target);
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->limit(), target);
  }

  // int64 revision = 4;
  if (this->revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->revision(), target);
  }

  // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
  if (this->sort_order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->sort_order(), target);
  }

  // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
  if (this->sort_target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->sort_target(), target);
  }

  // bool serializable = 7;
  if (this->serializable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->serializable(), target);
  }

  // bool keys_only = 8;
  if (this->keys_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->keys_only(), target);
  }

  // bool count_only = 9;
  if (this->count_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->count_only(), target);
  }

  // int64 min_mod_revision = 10;
  if (this->min_mod_revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->min_mod_revision(), target);
  }

  // int64 max_mod_revision = 11;
  if (this->max_mod_revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->max_mod_revision(), target);
  }

  // int64 min_create_revision = 12;
  if (this->min_create_revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->min_create_revision(), target);
  }

  // int64 max_create_revision = 13;
  if (this->max_create_revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->max_create_revision(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.RangeRequest)
  return target;
}

size_t RangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.RangeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->range_end());
  }

  // int64 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->limit());
  }

  // int64 revision = 4;
  if (this->revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->revision());
  }

  // .etcdserverpb.RangeRequest.SortOrder sort_order = 5;
  if (this->sort_order() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sort_order());
  }

  // .etcdserverpb.RangeRequest.SortTarget sort_target = 6;
  if (this->sort_target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sort_target());
  }

  // int64 min_mod_revision = 10;
  if (this->min_mod_revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->min_mod_revision());
  }

  // int64 max_mod_revision = 11;
  if (this->max_mod_revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_mod_revision());
  }

  // int64 min_create_revision = 12;
  if (this->min_create_revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->min_create_revision());
  }

  // int64 max_create_revision = 13;
  if (this->max_create_revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_create_revision());
  }

  // bool serializable = 7;
  if (this->serializable() != 0) {
    total_size += 1 + 1;
  }

  // bool keys_only = 8;
  if (this->keys_only() != 0) {
    total_size += 1 + 1;
  }

  // bool count_only = 9;
  if (this->count_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.RangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RangeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RangeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.RangeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.RangeRequest)
    MergeFrom(*source);
  }
}

void RangeRequest::MergeFrom(const RangeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.RangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.range_end().size() > 0) {

    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.revision() != 0) {
    set_revision(from.revision());
  }
  if (from.sort_order() != 0) {
    set_sort_order(from.sort_order());
  }
  if (from.sort_target() != 0) {
    set_sort_target(from.sort_target());
  }
  if (from.min_mod_revision() != 0) {
    set_min_mod_revision(from.min_mod_revision());
  }
  if (from.max_mod_revision() != 0) {
    set_max_mod_revision(from.max_mod_revision());
  }
  if (from.min_create_revision() != 0) {
    set_min_create_revision(from.min_create_revision());
  }
  if (from.max_create_revision() != 0) {
    set_max_create_revision(from.max_create_revision());
  }
  if (from.serializable() != 0) {
    set_serializable(from.serializable());
  }
  if (from.keys_only() != 0) {
    set_keys_only(from.keys_only());
  }
  if (from.count_only() != 0) {
    set_count_only(from.count_only());
  }
}

void RangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.RangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RangeRequest::CopyFrom(const RangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.RangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RangeRequest::IsInitialized() const {
  return true;
}

void RangeRequest::Swap(RangeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RangeRequest::InternalSwap(RangeRequest* other) {
  using std::swap;
  key_.Swap(&other->key_);
  range_end_.Swap(&other->range_end_);
  swap(limit_, other->limit_);
  swap(revision_, other->revision_);
  swap(sort_order_, other->sort_order_);
  swap(sort_target_, other->sort_target_);
  swap(min_mod_revision_, other->min_mod_revision_);
  swap(max_mod_revision_, other->max_mod_revision_);
  swap(min_create_revision_, other->min_create_revision_);
  swap(max_create_revision_, other->max_create_revision_);
  swap(serializable_, other->serializable_);
  swap(keys_only_, other->keys_only_);
  swap(count_only_, other->count_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RangeRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RangeResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_RangeResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
void RangeResponse::clear_kvs() {
  kvs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RangeResponse::kHeaderFieldNumber;
const int RangeResponse::kKvsFieldNumber;
const int RangeResponse::kMoreFieldNumber;
const int RangeResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RangeResponse::RangeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsRangeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.RangeResponse)
}
RangeResponse::RangeResponse(const RangeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kvs_(from.kvs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&more_) -
    reinterpret_cast<char*>(&count_)) + sizeof(more_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.RangeResponse)
}

void RangeResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&more_) -
      reinterpret_cast<char*>(&header_)) + sizeof(more_));
  _cached_size_ = 0;
}

RangeResponse::~RangeResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.RangeResponse)
  SharedDtor();
}

void RangeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void RangeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RangeResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RangeResponse& RangeResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsRangeResponse();
  return *internal_default_instance();
}

RangeResponse* RangeResponse::New(::google::protobuf::Arena* arena) const {
  RangeResponse* n = new RangeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.RangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kvs_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&more_) -
      reinterpret_cast<char*>(&count_)) + sizeof(more_));
  _internal_metadata_.Clear();
}

bool RangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.RangeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mvccpb.KeyValue kvs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_kvs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool more = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &more_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.RangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.RangeResponse)
  return false;
#undef DO_
}

void RangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.RangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .mvccpb.KeyValue kvs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->kvs(static_cast<int>(i)), output);
  }

  // bool more = 3;
  if (this->more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->more(), output);
  }

  // int64 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.RangeResponse)
}

::google::protobuf::uint8* RangeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.RangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .mvccpb.KeyValue kvs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->kvs(static_cast<int>(i)), deterministic, target);
  }

  // bool more = 3;
  if (this->more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->more(), target);
  }

  // int64 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.RangeResponse)
  return target;
}

size_t RangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.RangeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mvccpb.KeyValue kvs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->kvs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kvs(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int64 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // bool more = 3;
  if (this->more() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.RangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RangeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RangeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.RangeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.RangeResponse)
    MergeFrom(*source);
  }
}

void RangeResponse::MergeFrom(const RangeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.RangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kvs_.MergeFrom(from.kvs_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.more() != 0) {
    set_more(from.more());
  }
}

void RangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.RangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RangeResponse::CopyFrom(const RangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.RangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RangeResponse::IsInitialized() const {
  return true;
}

void RangeResponse::Swap(RangeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RangeResponse::InternalSwap(RangeResponse* other) {
  using std::swap;
  kvs_.InternalSwap(&other->kvs_);
  swap(header_, other->header_);
  swap(count_, other->count_);
  swap(more_, other->more_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RangeResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutRequest::kKeyFieldNumber;
const int PutRequest::kValueFieldNumber;
const int PutRequest::kLeaseFieldNumber;
const int PutRequest::kPrevKvFieldNumber;
const int PutRequest::kIgnoreValueFieldNumber;
const int PutRequest::kIgnoreLeaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutRequest::PutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsPutRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.PutRequest)
}
PutRequest::PutRequest(const PutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&lease_, &from.lease_,
    static_cast<size_t>(reinterpret_cast<char*>(&ignore_lease_) -
    reinterpret_cast<char*>(&lease_)) + sizeof(ignore_lease_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.PutRequest)
}

void PutRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lease_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ignore_lease_) -
      reinterpret_cast<char*>(&lease_)) + sizeof(ignore_lease_));
  _cached_size_ = 0;
}

PutRequest::~PutRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.PutRequest)
  SharedDtor();
}

void PutRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutRequest& PutRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsPutRequest();
  return *internal_default_instance();
}

PutRequest* PutRequest::New(::google::protobuf::Arena* arena) const {
  PutRequest* n = new PutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lease_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ignore_lease_) -
      reinterpret_cast<char*>(&lease_)) + sizeof(ignore_lease_));
  _internal_metadata_.Clear();
}

bool PutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.PutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 lease = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool prev_kv = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prev_kv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ignore_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ignore_lease = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_lease_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.PutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.PutRequest)
  return false;
#undef DO_
}

void PutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // int64 lease = 3;
  if (this->lease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->lease(), output);
  }

  // bool prev_kv = 4;
  if (this->prev_kv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->prev_kv(), output);
  }

  // bool ignore_value = 5;
  if (this->ignore_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ignore_value(), output);
  }

  // bool ignore_lease = 6;
  if (this->ignore_lease() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->ignore_lease(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.PutRequest)
}

::google::protobuf::uint8* PutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // int64 lease = 3;
  if (this->lease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->lease(), target);
  }

  // bool prev_kv = 4;
  if (this->prev_kv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->prev_kv(), target);
  }

  // bool ignore_value = 5;
  if (this->ignore_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ignore_value(), target);
  }

  // bool ignore_lease = 6;
  if (this->ignore_lease() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->ignore_lease(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.PutRequest)
  return target;
}

size_t PutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.PutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int64 lease = 3;
  if (this->lease() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lease());
  }

  // bool prev_kv = 4;
  if (this->prev_kv() != 0) {
    total_size += 1 + 1;
  }

  // bool ignore_value = 5;
  if (this->ignore_value() != 0) {
    total_size += 1 + 1;
  }

  // bool ignore_lease = 6;
  if (this->ignore_lease() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.PutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.PutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.PutRequest)
    MergeFrom(*source);
  }
}

void PutRequest::MergeFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.PutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.lease() != 0) {
    set_lease(from.lease());
  }
  if (from.prev_kv() != 0) {
    set_prev_kv(from.prev_kv());
  }
  if (from.ignore_value() != 0) {
    set_ignore_value(from.ignore_value());
  }
  if (from.ignore_lease() != 0) {
    set_ignore_lease(from.ignore_lease());
  }
}

void PutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutRequest::CopyFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutRequest::IsInitialized() const {
  return true;
}

void PutRequest::Swap(PutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutRequest::InternalSwap(PutRequest* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(lease_, other->lease_);
  swap(prev_kv_, other->prev_kv_);
  swap(ignore_value_, other->ignore_value_);
  swap(ignore_lease_, other->ignore_lease_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_PutResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
  ::etcdserverpb::_PutResponse_default_instance_._instance.get_mutable()->prev_kv_ = const_cast< ::mvccpb::KeyValue*>(
      ::mvccpb::KeyValue::internal_default_instance());
}
void PutResponse::clear_prev_kv() {
  if (GetArenaNoVirtual() == NULL && prev_kv_ != NULL) {
    delete prev_kv_;
  }
  prev_kv_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutResponse::kHeaderFieldNumber;
const int PutResponse::kPrevKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutResponse::PutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsPutResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.PutResponse)
}
PutResponse::PutResponse(const PutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_prev_kv()) {
    prev_kv_ = new ::mvccpb::KeyValue(*from.prev_kv_);
  } else {
    prev_kv_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.PutResponse)
}

void PutResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prev_kv_) -
      reinterpret_cast<char*>(&header_)) + sizeof(prev_kv_));
  _cached_size_ = 0;
}

PutResponse::~PutResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.PutResponse)
  SharedDtor();
}

void PutResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete prev_kv_;
}

void PutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutResponse& PutResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsPutResponse();
  return *internal_default_instance();
}

PutResponse* PutResponse::New(::google::protobuf::Arena* arena) const {
  PutResponse* n = new PutResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && prev_kv_ != NULL) {
    delete prev_kv_;
  }
  prev_kv_ = NULL;
  _internal_metadata_.Clear();
}

bool PutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.PutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mvccpb.KeyValue prev_kv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prev_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.PutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.PutResponse)
  return false;
#undef DO_
}

void PutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .mvccpb.KeyValue prev_kv = 2;
  if (this->has_prev_kv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->prev_kv_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.PutResponse)
}

::google::protobuf::uint8* PutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .mvccpb.KeyValue prev_kv = 2;
  if (this->has_prev_kv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->prev_kv_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.PutResponse)
  return target;
}

size_t PutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.PutResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .mvccpb.KeyValue prev_kv = 2;
  if (this->has_prev_kv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->prev_kv_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.PutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.PutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.PutResponse)
    MergeFrom(*source);
  }
}

void PutResponse::MergeFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.PutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.has_prev_kv()) {
    mutable_prev_kv()->::mvccpb::KeyValue::MergeFrom(from.prev_kv());
  }
}

void PutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutResponse::CopyFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutResponse::IsInitialized() const {
  return true;
}

void PutResponse::Swap(PutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutResponse::InternalSwap(PutResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(prev_kv_, other->prev_kv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRangeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRangeRequest::kKeyFieldNumber;
const int DeleteRangeRequest::kRangeEndFieldNumber;
const int DeleteRangeRequest::kPrevKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRangeRequest::DeleteRangeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsDeleteRangeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.DeleteRangeRequest)
}
DeleteRangeRequest::DeleteRangeRequest(const DeleteRangeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.range_end().size() > 0) {
    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  prev_kv_ = from.prev_kv_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.DeleteRangeRequest)
}

void DeleteRangeRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_kv_ = false;
  _cached_size_ = 0;
}

DeleteRangeRequest::~DeleteRangeRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.DeleteRangeRequest)
  SharedDtor();
}

void DeleteRangeRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteRangeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRangeRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRangeRequest& DeleteRangeRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsDeleteRangeRequest();
  return *internal_default_instance();
}

DeleteRangeRequest* DeleteRangeRequest::New(::google::protobuf::Arena* arena) const {
  DeleteRangeRequest* n = new DeleteRangeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.DeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_kv_ = false;
  _internal_metadata_.Clear();
}

bool DeleteRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.DeleteRangeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes range_end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_range_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool prev_kv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prev_kv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.DeleteRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.DeleteRangeRequest)
  return false;
#undef DO_
}

void DeleteRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.DeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->range_end(), output);
  }

  // bool prev_kv = 3;
  if (this->prev_kv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->prev_kv(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.DeleteRangeRequest)
}

::google::protobuf::uint8* DeleteRangeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.DeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->range_end(), target);
  }

  // bool prev_kv = 3;
  if (this->prev_kv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->prev_kv(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.DeleteRangeRequest)
  return target;
}

size_t DeleteRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.DeleteRangeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->range_end());
  }

  // bool prev_kv = 3;
  if (this->prev_kv() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.DeleteRangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRangeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRangeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.DeleteRangeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.DeleteRangeRequest)
    MergeFrom(*source);
  }
}

void DeleteRangeRequest::MergeFrom(const DeleteRangeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.DeleteRangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.range_end().size() > 0) {

    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  if (from.prev_kv() != 0) {
    set_prev_kv(from.prev_kv());
  }
}

void DeleteRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.DeleteRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRangeRequest::CopyFrom(const DeleteRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.DeleteRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRangeRequest::IsInitialized() const {
  return true;
}

void DeleteRangeRequest::Swap(DeleteRangeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRangeRequest::InternalSwap(DeleteRangeRequest* other) {
  using std::swap;
  key_.Swap(&other->key_);
  range_end_.Swap(&other->range_end_);
  swap(prev_kv_, other->prev_kv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteRangeRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRangeResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_DeleteRangeResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
void DeleteRangeResponse::clear_prev_kvs() {
  prev_kvs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRangeResponse::kHeaderFieldNumber;
const int DeleteRangeResponse::kDeletedFieldNumber;
const int DeleteRangeResponse::kPrevKvsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRangeResponse::DeleteRangeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsDeleteRangeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.DeleteRangeResponse)
}
DeleteRangeResponse::DeleteRangeResponse(const DeleteRangeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prev_kvs_(from.prev_kvs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  deleted_ = from.deleted_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.DeleteRangeResponse)
}

void DeleteRangeResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deleted_) -
      reinterpret_cast<char*>(&header_)) + sizeof(deleted_));
  _cached_size_ = 0;
}

DeleteRangeResponse::~DeleteRangeResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.DeleteRangeResponse)
  SharedDtor();
}

void DeleteRangeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void DeleteRangeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRangeResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRangeResponse& DeleteRangeResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsDeleteRangeResponse();
  return *internal_default_instance();
}

DeleteRangeResponse* DeleteRangeResponse::New(::google::protobuf::Arena* arena) const {
  DeleteRangeResponse* n = new DeleteRangeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.DeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prev_kvs_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  deleted_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool DeleteRangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.DeleteRangeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 deleted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mvccpb.KeyValue prev_kvs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_prev_kvs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.DeleteRangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.DeleteRangeResponse)
  return false;
#undef DO_
}

void DeleteRangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.DeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int64 deleted = 2;
  if (this->deleted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->deleted(), output);
  }

  // repeated .mvccpb.KeyValue prev_kvs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prev_kvs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prev_kvs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.DeleteRangeResponse)
}

::google::protobuf::uint8* DeleteRangeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.DeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int64 deleted = 2;
  if (this->deleted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->deleted(), target);
  }

  // repeated .mvccpb.KeyValue prev_kvs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prev_kvs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->prev_kvs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.DeleteRangeResponse)
  return target;
}

size_t DeleteRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.DeleteRangeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mvccpb.KeyValue prev_kvs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->prev_kvs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->prev_kvs(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int64 deleted = 2;
  if (this->deleted() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->deleted());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.DeleteRangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRangeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRangeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.DeleteRangeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.DeleteRangeResponse)
    MergeFrom(*source);
  }
}

void DeleteRangeResponse::MergeFrom(const DeleteRangeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.DeleteRangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prev_kvs_.MergeFrom(from.prev_kvs_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.deleted() != 0) {
    set_deleted(from.deleted());
  }
}

void DeleteRangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.DeleteRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRangeResponse::CopyFrom(const DeleteRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.DeleteRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRangeResponse::IsInitialized() const {
  return true;
}

void DeleteRangeResponse::Swap(DeleteRangeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRangeResponse::InternalSwap(DeleteRangeResponse* other) {
  using std::swap;
  prev_kvs_.InternalSwap(&other->prev_kvs_);
  swap(header_, other->header_);
  swap(deleted_, other->deleted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteRangeResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestOp::InitAsDefaultInstance() {
  ::etcdserverpb::_RequestOp_default_instance_.request_range_ = const_cast< ::etcdserverpb::RangeRequest*>(
      ::etcdserverpb::RangeRequest::internal_default_instance());
  ::etcdserverpb::_RequestOp_default_instance_.request_put_ = const_cast< ::etcdserverpb::PutRequest*>(
      ::etcdserverpb::PutRequest::internal_default_instance());
  ::etcdserverpb::_RequestOp_default_instance_.request_delete_range_ = const_cast< ::etcdserverpb::DeleteRangeRequest*>(
      ::etcdserverpb::DeleteRangeRequest::internal_default_instance());
  ::etcdserverpb::_RequestOp_default_instance_.request_txn_ = const_cast< ::etcdserverpb::TxnRequest*>(
      ::etcdserverpb::TxnRequest::internal_default_instance());
}
void RequestOp::set_allocated_request_range(::etcdserverpb::RangeRequest* request_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (request_range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_range, submessage_arena);
    }
    set_has_request_range();
    request_.request_range_ = request_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_range)
}
void RequestOp::set_allocated_request_put(::etcdserverpb::PutRequest* request_put) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (request_put) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request_put = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_put, submessage_arena);
    }
    set_has_request_put();
    request_.request_put_ = request_put;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_put)
}
void RequestOp::set_allocated_request_delete_range(::etcdserverpb::DeleteRangeRequest* request_delete_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (request_delete_range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request_delete_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_delete_range, submessage_arena);
    }
    set_has_request_delete_range();
    request_.request_delete_range_ = request_delete_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_delete_range)
}
void RequestOp::set_allocated_request_txn(::etcdserverpb::TxnRequest* request_txn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (request_txn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request_txn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_txn, submessage_arena);
    }
    set_has_request_txn();
    request_.request_txn_ = request_txn;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.RequestOp.request_txn)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestOp::kRequestRangeFieldNumber;
const int RequestOp::kRequestPutFieldNumber;
const int RequestOp::kRequestDeleteRangeFieldNumber;
const int RequestOp::kRequestTxnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestOp::RequestOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsRequestOp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.RequestOp)
}
RequestOp::RequestOp(const RequestOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_request();
  switch (from.request_case()) {
    case kRequestRange: {
      mutable_request_range()->::etcdserverpb::RangeRequest::MergeFrom(from.request_range());
      break;
    }
    case kRequestPut: {
      mutable_request_put()->::etcdserverpb::PutRequest::MergeFrom(from.request_put());
      break;
    }
    case kRequestDeleteRange: {
      mutable_request_delete_range()->::etcdserverpb::DeleteRangeRequest::MergeFrom(from.request_delete_range());
      break;
    }
    case kRequestTxn: {
      mutable_request_txn()->::etcdserverpb::TxnRequest::MergeFrom(from.request_txn());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.RequestOp)
}

void RequestOp::SharedCtor() {
  clear_has_request();
  _cached_size_ = 0;
}

RequestOp::~RequestOp() {
  // @@protoc_insertion_point(destructor:etcdserverpb.RequestOp)
  SharedDtor();
}

void RequestOp::SharedDtor() {
  if (has_request()) {
    clear_request();
  }
}

void RequestOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestOp::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestOp& RequestOp::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsRequestOp();
  return *internal_default_instance();
}

RequestOp* RequestOp::New(::google::protobuf::Arena* arena) const {
  RequestOp* n = new RequestOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestOp::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:etcdserverpb.RequestOp)
  switch (request_case()) {
    case kRequestRange: {
      delete request_.request_range_;
      break;
    }
    case kRequestPut: {
      delete request_.request_put_;
      break;
    }
    case kRequestDeleteRange: {
      delete request_.request_delete_range_;
      break;
    }
    case kRequestTxn: {
      delete request_.request_txn_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void RequestOp::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.RequestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request();
  _internal_metadata_.Clear();
}

bool RequestOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.RequestOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.RangeRequest request_range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.PutRequest request_put = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_put()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_delete_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.TxnRequest request_txn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request_txn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.RequestOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.RequestOp)
  return false;
#undef DO_
}

void RequestOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.RequestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.RangeRequest request_range = 1;
  if (has_request_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *request_.request_range_, output);
  }

  // .etcdserverpb.PutRequest request_put = 2;
  if (has_request_put()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *request_.request_put_, output);
  }

  // .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
  if (has_request_delete_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *request_.request_delete_range_, output);
  }

  // .etcdserverpb.TxnRequest request_txn = 4;
  if (has_request_txn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *request_.request_txn_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.RequestOp)
}

::google::protobuf::uint8* RequestOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.RequestOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.RangeRequest request_range = 1;
  if (has_request_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *request_.request_range_, deterministic, target);
  }

  // .etcdserverpb.PutRequest request_put = 2;
  if (has_request_put()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *request_.request_put_, deterministic, target);
  }

  // .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
  if (has_request_delete_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *request_.request_delete_range_, deterministic, target);
  }

  // .etcdserverpb.TxnRequest request_txn = 4;
  if (has_request_txn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *request_.request_txn_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.RequestOp)
  return target;
}

size_t RequestOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.RequestOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (request_case()) {
    // .etcdserverpb.RangeRequest request_range = 1;
    case kRequestRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.request_range_);
      break;
    }
    // .etcdserverpb.PutRequest request_put = 2;
    case kRequestPut: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.request_put_);
      break;
    }
    // .etcdserverpb.DeleteRangeRequest request_delete_range = 3;
    case kRequestDeleteRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.request_delete_range_);
      break;
    }
    // .etcdserverpb.TxnRequest request_txn = 4;
    case kRequestTxn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.request_txn_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.RequestOp)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.RequestOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.RequestOp)
    MergeFrom(*source);
  }
}

void RequestOp::MergeFrom(const RequestOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.RequestOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_case()) {
    case kRequestRange: {
      mutable_request_range()->::etcdserverpb::RangeRequest::MergeFrom(from.request_range());
      break;
    }
    case kRequestPut: {
      mutable_request_put()->::etcdserverpb::PutRequest::MergeFrom(from.request_put());
      break;
    }
    case kRequestDeleteRange: {
      mutable_request_delete_range()->::etcdserverpb::DeleteRangeRequest::MergeFrom(from.request_delete_range());
      break;
    }
    case kRequestTxn: {
      mutable_request_txn()->::etcdserverpb::TxnRequest::MergeFrom(from.request_txn());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void RequestOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.RequestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestOp::CopyFrom(const RequestOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.RequestOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestOp::IsInitialized() const {
  return true;
}

void RequestOp::Swap(RequestOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestOp::InternalSwap(RequestOp* other) {
  using std::swap;
  swap(request_, other->request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestOp::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResponseOp::InitAsDefaultInstance() {
  ::etcdserverpb::_ResponseOp_default_instance_.response_range_ = const_cast< ::etcdserverpb::RangeResponse*>(
      ::etcdserverpb::RangeResponse::internal_default_instance());
  ::etcdserverpb::_ResponseOp_default_instance_.response_put_ = const_cast< ::etcdserverpb::PutResponse*>(
      ::etcdserverpb::PutResponse::internal_default_instance());
  ::etcdserverpb::_ResponseOp_default_instance_.response_delete_range_ = const_cast< ::etcdserverpb::DeleteRangeResponse*>(
      ::etcdserverpb::DeleteRangeResponse::internal_default_instance());
  ::etcdserverpb::_ResponseOp_default_instance_.response_txn_ = const_cast< ::etcdserverpb::TxnResponse*>(
      ::etcdserverpb::TxnResponse::internal_default_instance());
}
void ResponseOp::set_allocated_response_range(::etcdserverpb::RangeResponse* response_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (response_range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response_range, submessage_arena);
    }
    set_has_response_range();
    response_.response_range_ = response_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_range)
}
void ResponseOp::set_allocated_response_put(::etcdserverpb::PutResponse* response_put) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (response_put) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response_put = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response_put, submessage_arena);
    }
    set_has_response_put();
    response_.response_put_ = response_put;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_put)
}
void ResponseOp::set_allocated_response_delete_range(::etcdserverpb::DeleteRangeResponse* response_delete_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (response_delete_range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response_delete_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response_delete_range, submessage_arena);
    }
    set_has_response_delete_range();
    response_.response_delete_range_ = response_delete_range;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_delete_range)
}
void ResponseOp::set_allocated_response_txn(::etcdserverpb::TxnResponse* response_txn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (response_txn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response_txn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response_txn, submessage_arena);
    }
    set_has_response_txn();
    response_.response_txn_ = response_txn;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.ResponseOp.response_txn)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseOp::kResponseRangeFieldNumber;
const int ResponseOp::kResponsePutFieldNumber;
const int ResponseOp::kResponseDeleteRangeFieldNumber;
const int ResponseOp::kResponseTxnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseOp::ResponseOp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsResponseOp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.ResponseOp)
}
ResponseOp::ResponseOp(const ResponseOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kResponseRange: {
      mutable_response_range()->::etcdserverpb::RangeResponse::MergeFrom(from.response_range());
      break;
    }
    case kResponsePut: {
      mutable_response_put()->::etcdserverpb::PutResponse::MergeFrom(from.response_put());
      break;
    }
    case kResponseDeleteRange: {
      mutable_response_delete_range()->::etcdserverpb::DeleteRangeResponse::MergeFrom(from.response_delete_range());
      break;
    }
    case kResponseTxn: {
      mutable_response_txn()->::etcdserverpb::TxnResponse::MergeFrom(from.response_txn());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.ResponseOp)
}

void ResponseOp::SharedCtor() {
  clear_has_response();
  _cached_size_ = 0;
}

ResponseOp::~ResponseOp() {
  // @@protoc_insertion_point(destructor:etcdserverpb.ResponseOp)
  SharedDtor();
}

void ResponseOp::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void ResponseOp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseOp::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseOp& ResponseOp::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsResponseOp();
  return *internal_default_instance();
}

ResponseOp* ResponseOp::New(::google::protobuf::Arena* arena) const {
  ResponseOp* n = new ResponseOp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseOp::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:etcdserverpb.ResponseOp)
  switch (response_case()) {
    case kResponseRange: {
      delete response_.response_range_;
      break;
    }
    case kResponsePut: {
      delete response_.response_put_;
      break;
    }
    case kResponseDeleteRange: {
      delete response_.response_delete_range_;
      break;
    }
    case kResponseTxn: {
      delete response_.response_txn_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void ResponseOp::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.ResponseOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear();
}

bool ResponseOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.ResponseOp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.RangeResponse response_range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.PutResponse response_put = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response_put()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response_delete_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.TxnResponse response_txn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response_txn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.ResponseOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.ResponseOp)
  return false;
#undef DO_
}

void ResponseOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.ResponseOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.RangeResponse response_range = 1;
  if (has_response_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *response_.response_range_, output);
  }

  // .etcdserverpb.PutResponse response_put = 2;
  if (has_response_put()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *response_.response_put_, output);
  }

  // .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
  if (has_response_delete_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *response_.response_delete_range_, output);
  }

  // .etcdserverpb.TxnResponse response_txn = 4;
  if (has_response_txn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *response_.response_txn_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.ResponseOp)
}

::google::protobuf::uint8* ResponseOp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.ResponseOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.RangeResponse response_range = 1;
  if (has_response_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *response_.response_range_, deterministic, target);
  }

  // .etcdserverpb.PutResponse response_put = 2;
  if (has_response_put()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *response_.response_put_, deterministic, target);
  }

  // .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
  if (has_response_delete_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *response_.response_delete_range_, deterministic, target);
  }

  // .etcdserverpb.TxnResponse response_txn = 4;
  if (has_response_txn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *response_.response_txn_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.ResponseOp)
  return target;
}

size_t ResponseOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.ResponseOp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (response_case()) {
    // .etcdserverpb.RangeResponse response_range = 1;
    case kResponseRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.response_range_);
      break;
    }
    // .etcdserverpb.PutResponse response_put = 2;
    case kResponsePut: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.response_put_);
      break;
    }
    // .etcdserverpb.DeleteRangeResponse response_delete_range = 3;
    case kResponseDeleteRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.response_delete_range_);
      break;
    }
    // .etcdserverpb.TxnResponse response_txn = 4;
    case kResponseTxn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.response_txn_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.ResponseOp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseOp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseOp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.ResponseOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.ResponseOp)
    MergeFrom(*source);
  }
}

void ResponseOp::MergeFrom(const ResponseOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.ResponseOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kResponseRange: {
      mutable_response_range()->::etcdserverpb::RangeResponse::MergeFrom(from.response_range());
      break;
    }
    case kResponsePut: {
      mutable_response_put()->::etcdserverpb::PutResponse::MergeFrom(from.response_put());
      break;
    }
    case kResponseDeleteRange: {
      mutable_response_delete_range()->::etcdserverpb::DeleteRangeResponse::MergeFrom(from.response_delete_range());
      break;
    }
    case kResponseTxn: {
      mutable_response_txn()->::etcdserverpb::TxnResponse::MergeFrom(from.response_txn());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void ResponseOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.ResponseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseOp::CopyFrom(const ResponseOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.ResponseOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseOp::IsInitialized() const {
  return true;
}

void ResponseOp::Swap(ResponseOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseOp::InternalSwap(ResponseOp* other) {
  using std::swap;
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseOp::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Compare::InitAsDefaultInstance() {
  ::etcdserverpb::_Compare_default_instance_.version_ = GOOGLE_LONGLONG(0);
  ::etcdserverpb::_Compare_default_instance_.create_revision_ = GOOGLE_LONGLONG(0);
  ::etcdserverpb::_Compare_default_instance_.mod_revision_ = GOOGLE_LONGLONG(0);
  ::etcdserverpb::_Compare_default_instance_.value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::etcdserverpb::_Compare_default_instance_.lease_ = GOOGLE_LONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Compare::kResultFieldNumber;
const int Compare::kTargetFieldNumber;
const int Compare::kKeyFieldNumber;
const int Compare::kVersionFieldNumber;
const int Compare::kCreateRevisionFieldNumber;
const int Compare::kModRevisionFieldNumber;
const int Compare::kValueFieldNumber;
const int Compare::kLeaseFieldNumber;
const int Compare::kRangeEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Compare::Compare()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsCompare();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.Compare)
}
Compare::Compare(const Compare& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.range_end().size() > 0) {
    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_) -
    reinterpret_cast<char*>(&result_)) + sizeof(target_));
  clear_has_target_union();
  switch (from.target_union_case()) {
    case kVersion: {
      set_version(from.version());
      break;
    }
    case kCreateRevision: {
      set_create_revision(from.create_revision());
      break;
    }
    case kModRevision: {
      set_mod_revision(from.mod_revision());
      break;
    }
    case kValue: {
      set_value(from.value());
      break;
    }
    case kLease: {
      set_lease(from.lease());
      break;
    }
    case TARGET_UNION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.Compare)
}

void Compare::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&result_)) + sizeof(target_));
  clear_has_target_union();
  _cached_size_ = 0;
}

Compare::~Compare() {
  // @@protoc_insertion_point(destructor:etcdserverpb.Compare)
  SharedDtor();
}

void Compare::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_target_union()) {
    clear_target_union();
  }
}

void Compare::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Compare::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Compare& Compare::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsCompare();
  return *internal_default_instance();
}

Compare* Compare::New(::google::protobuf::Arena* arena) const {
  Compare* n = new Compare;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Compare::clear_target_union() {
// @@protoc_insertion_point(one_of_clear_start:etcdserverpb.Compare)
  switch (target_union_case()) {
    case kVersion: {
      // No need to clear
      break;
    }
    case kCreateRevision: {
      // No need to clear
      break;
    }
    case kModRevision: {
      // No need to clear
      break;
    }
    case kValue: {
      target_union_.value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kLease: {
      // No need to clear
      break;
    }
    case TARGET_UNION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_UNION_NOT_SET;
}


void Compare::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.Compare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_) -
      reinterpret_cast<char*>(&result_)) + sizeof(target_));
  clear_target_union();
  _internal_metadata_.Clear();
}

bool Compare::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.Compare)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.Compare.CompareResult result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::etcdserverpb::Compare_CompareResult >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.Compare.CompareTarget target = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_target(static_cast< ::etcdserverpb::Compare_CompareTarget >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_target_union();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_union_.version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_revision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_target_union();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_union_.create_revision_)));
          set_has_create_revision();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 mod_revision = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_target_union();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_union_.mod_revision_)));
          set_has_mod_revision();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 lease = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_target_union();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_union_.lease_)));
          set_has_lease();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes range_end = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_range_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.Compare)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.Compare)
  return false;
#undef DO_
}

void Compare::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.Compare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.Compare.CompareResult result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // .etcdserverpb.Compare.CompareTarget target = 2;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->target(), output);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  // int64 version = 4;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->version(), output);
  }

  // int64 create_revision = 5;
  if (has_create_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->create_revision(), output);
  }

  // int64 mod_revision = 6;
  if (has_mod_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->mod_revision(), output);
  }

  // bytes value = 7;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->value(), output);
  }

  // int64 lease = 8;
  if (has_lease()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->lease(), output);
  }

  // bytes range_end = 64;
  if (this->range_end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      64, this->range_end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.Compare)
}

::google::protobuf::uint8* Compare::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.Compare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.Compare.CompareResult result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // .etcdserverpb.Compare.CompareTarget target = 2;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->target(), target);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  // int64 version = 4;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->version(), target);
  }

  // int64 create_revision = 5;
  if (has_create_revision()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->create_revision(), target);
  }

  // int64 mod_revision = 6;
  if (has_mod_revision()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->mod_revision(), target);
  }

  // bytes value = 7;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->value(), target);
  }

  // int64 lease = 8;
  if (has_lease()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->lease(), target);
  }

  // bytes range_end = 64;
  if (this->range_end().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        64, this->range_end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.Compare)
  return target;
}

size_t Compare::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.Compare)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes range_end = 64;
  if (this->range_end().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->range_end());
  }

  // .etcdserverpb.Compare.CompareResult result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // .etcdserverpb.Compare.CompareTarget target = 2;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->target());
  }

  switch (target_union_case()) {
    // int64 version = 4;
    case kVersion: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->version());
      break;
    }
    // int64 create_revision = 5;
    case kCreateRevision: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->create_revision());
      break;
    }
    // int64 mod_revision = 6;
    case kModRevision: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mod_revision());
      break;
    }
    // bytes value = 7;
    case kValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
      break;
    }
    // int64 lease = 8;
    case kLease: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lease());
      break;
    }
    case TARGET_UNION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Compare::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.Compare)
  GOOGLE_DCHECK_NE(&from, this);
  const Compare* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Compare>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.Compare)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.Compare)
    MergeFrom(*source);
  }
}

void Compare::MergeFrom(const Compare& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.Compare)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.range_end().size() > 0) {

    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
  switch (from.target_union_case()) {
    case kVersion: {
      set_version(from.version());
      break;
    }
    case kCreateRevision: {
      set_create_revision(from.create_revision());
      break;
    }
    case kModRevision: {
      set_mod_revision(from.mod_revision());
      break;
    }
    case kValue: {
      set_value(from.value());
      break;
    }
    case kLease: {
      set_lease(from.lease());
      break;
    }
    case TARGET_UNION_NOT_SET: {
      break;
    }
  }
}

void Compare::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.Compare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Compare::CopyFrom(const Compare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.Compare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Compare::IsInitialized() const {
  return true;
}

void Compare::Swap(Compare* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Compare::InternalSwap(Compare* other) {
  using std::swap;
  key_.Swap(&other->key_);
  range_end_.Swap(&other->range_end_);
  swap(result_, other->result_);
  swap(target_, other->target_);
  swap(target_union_, other->target_union_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Compare::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxnRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxnRequest::kCompareFieldNumber;
const int TxnRequest::kSuccessFieldNumber;
const int TxnRequest::kFailureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxnRequest::TxnRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsRequestOp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.TxnRequest)
}
TxnRequest::TxnRequest(const TxnRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      compare_(from.compare_),
      success_(from.success_),
      failure_(from.failure_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.TxnRequest)
}

void TxnRequest::SharedCtor() {
  _cached_size_ = 0;
}

TxnRequest::~TxnRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.TxnRequest)
  SharedDtor();
}

void TxnRequest::SharedDtor() {
}

void TxnRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxnRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxnRequest& TxnRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsRequestOp();
  return *internal_default_instance();
}

TxnRequest* TxnRequest::New(::google::protobuf::Arena* arena) const {
  TxnRequest* n = new TxnRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxnRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.TxnRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compare_.Clear();
  success_.Clear();
  failure_.Clear();
  _internal_metadata_.Clear();
}

bool TxnRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.TxnRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .etcdserverpb.Compare compare = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_compare()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.RequestOp success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_success()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.RequestOp failure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.TxnRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.TxnRequest)
  return false;
#undef DO_
}

void TxnRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.TxnRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .etcdserverpb.Compare compare = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compare_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->compare(static_cast<int>(i)), output);
  }

  // repeated .etcdserverpb.RequestOp success = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->success_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->success(static_cast<int>(i)), output);
  }

  // repeated .etcdserverpb.RequestOp failure = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failure_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->failure(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.TxnRequest)
}

::google::protobuf::uint8* TxnRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.TxnRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .etcdserverpb.Compare compare = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compare_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->compare(static_cast<int>(i)), deterministic, target);
  }

  // repeated .etcdserverpb.RequestOp success = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->success_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->success(static_cast<int>(i)), deterministic, target);
  }

  // repeated .etcdserverpb.RequestOp failure = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failure_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->failure(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.TxnRequest)
  return target;
}

size_t TxnRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.TxnRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.Compare compare = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->compare_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->compare(static_cast<int>(i)));
    }
  }

  // repeated .etcdserverpb.RequestOp success = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->success_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->success(static_cast<int>(i)));
    }
  }

  // repeated .etcdserverpb.RequestOp failure = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->failure_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->failure(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxnRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.TxnRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TxnRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxnRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.TxnRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.TxnRequest)
    MergeFrom(*source);
  }
}

void TxnRequest::MergeFrom(const TxnRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.TxnRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  compare_.MergeFrom(from.compare_);
  success_.MergeFrom(from.success_);
  failure_.MergeFrom(from.failure_);
}

void TxnRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.TxnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxnRequest::CopyFrom(const TxnRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.TxnRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxnRequest::IsInitialized() const {
  return true;
}

void TxnRequest::Swap(TxnRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxnRequest::InternalSwap(TxnRequest* other) {
  using std::swap;
  compare_.InternalSwap(&other->compare_);
  success_.InternalSwap(&other->success_);
  failure_.InternalSwap(&other->failure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxnRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxnResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_TxnResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxnResponse::kHeaderFieldNumber;
const int TxnResponse::kSucceededFieldNumber;
const int TxnResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxnResponse::TxnResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsResponseOp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.TxnResponse)
}
TxnResponse::TxnResponse(const TxnResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  succeeded_ = from.succeeded_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.TxnResponse)
}

void TxnResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&succeeded_) -
      reinterpret_cast<char*>(&header_)) + sizeof(succeeded_));
  _cached_size_ = 0;
}

TxnResponse::~TxnResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.TxnResponse)
  SharedDtor();
}

void TxnResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void TxnResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxnResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxnResponse& TxnResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsResponseOp();
  return *internal_default_instance();
}

TxnResponse* TxnResponse::New(::google::protobuf::Arena* arena) const {
  TxnResponse* n = new TxnResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxnResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.TxnResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  succeeded_ = false;
  _internal_metadata_.Clear();
}

bool TxnResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.TxnResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool succeeded = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &succeeded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.ResponseOp responses = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.TxnResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.TxnResponse)
  return false;
#undef DO_
}

void TxnResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.TxnResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->succeeded(), output);
  }

  // repeated .etcdserverpb.ResponseOp responses = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->responses(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.TxnResponse)
}

::google::protobuf::uint8* TxnResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.TxnResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->succeeded(), target);
  }

  // repeated .etcdserverpb.ResponseOp responses = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.TxnResponse)
  return target;
}

size_t TxnResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.TxnResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.ResponseOp responses = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // bool succeeded = 2;
  if (this->succeeded() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxnResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.TxnResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TxnResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxnResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.TxnResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.TxnResponse)
    MergeFrom(*source);
  }
}

void TxnResponse::MergeFrom(const TxnResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.TxnResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.succeeded() != 0) {
    set_succeeded(from.succeeded());
  }
}

void TxnResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.TxnResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxnResponse::CopyFrom(const TxnResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.TxnResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxnResponse::IsInitialized() const {
  return true;
}

void TxnResponse::Swap(TxnResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxnResponse::InternalSwap(TxnResponse* other) {
  using std::swap;
  responses_.InternalSwap(&other->responses_);
  swap(header_, other->header_);
  swap(succeeded_, other->succeeded_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxnResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactionRequest::kRevisionFieldNumber;
const int CompactionRequest::kPhysicalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactionRequest::CompactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsCompactionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.CompactionRequest)
}
CompactionRequest::CompactionRequest(const CompactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&revision_, &from.revision_,
    static_cast<size_t>(reinterpret_cast<char*>(&physical_) -
    reinterpret_cast<char*>(&revision_)) + sizeof(physical_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.CompactionRequest)
}

void CompactionRequest::SharedCtor() {
  ::memset(&revision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&physical_) -
      reinterpret_cast<char*>(&revision_)) + sizeof(physical_));
  _cached_size_ = 0;
}

CompactionRequest::~CompactionRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.CompactionRequest)
  SharedDtor();
}

void CompactionRequest::SharedDtor() {
}

void CompactionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactionRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompactionRequest& CompactionRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsCompactionRequest();
  return *internal_default_instance();
}

CompactionRequest* CompactionRequest::New(::google::protobuf::Arena* arena) const {
  CompactionRequest* n = new CompactionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.CompactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&revision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&physical_) -
      reinterpret_cast<char*>(&revision_)) + sizeof(physical_));
  _internal_metadata_.Clear();
}

bool CompactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.CompactionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 revision = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool physical = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &physical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.CompactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.CompactionRequest)
  return false;
#undef DO_
}

void CompactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.CompactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 revision = 1;
  if (this->revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->revision(), output);
  }

  // bool physical = 2;
  if (this->physical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->physical(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.CompactionRequest)
}

::google::protobuf::uint8* CompactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.CompactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 revision = 1;
  if (this->revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->revision(), target);
  }

  // bool physical = 2;
  if (this->physical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->physical(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.CompactionRequest)
  return target;
}

size_t CompactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.CompactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 revision = 1;
  if (this->revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->revision());
  }

  // bool physical = 2;
  if (this->physical() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.CompactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.CompactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.CompactionRequest)
    MergeFrom(*source);
  }
}

void CompactionRequest::MergeFrom(const CompactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.CompactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.revision() != 0) {
    set_revision(from.revision());
  }
  if (from.physical() != 0) {
    set_physical(from.physical());
  }
}

void CompactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.CompactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactionRequest::CopyFrom(const CompactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.CompactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactionRequest::IsInitialized() const {
  return true;
}

void CompactionRequest::Swap(CompactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactionRequest::InternalSwap(CompactionRequest* other) {
  using std::swap;
  swap(revision_, other->revision_);
  swap(physical_, other->physical_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactionRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompactionResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_CompactionResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactionResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactionResponse::CompactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsCompactionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.CompactionResponse)
}
CompactionResponse::CompactionResponse(const CompactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.CompactionResponse)
}

void CompactionResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

CompactionResponse::~CompactionResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.CompactionResponse)
  SharedDtor();
}

void CompactionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void CompactionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactionResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompactionResponse& CompactionResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsCompactionResponse();
  return *internal_default_instance();
}

CompactionResponse* CompactionResponse::New(::google::protobuf::Arena* arena) const {
  CompactionResponse* n = new CompactionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.CompactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool CompactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.CompactionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.CompactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.CompactionResponse)
  return false;
#undef DO_
}

void CompactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.CompactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.CompactionResponse)
}

::google::protobuf::uint8* CompactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.CompactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.CompactionResponse)
  return target;
}

size_t CompactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.CompactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.CompactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CompactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.CompactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.CompactionResponse)
    MergeFrom(*source);
  }
}

void CompactionResponse::MergeFrom(const CompactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.CompactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void CompactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.CompactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactionResponse::CopyFrom(const CompactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.CompactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactionResponse::IsInitialized() const {
  return true;
}

void CompactionResponse::Swap(CompactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactionResponse::InternalSwap(CompactionResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactionResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HashRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HashRequest::HashRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsHashRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.HashRequest)
}
HashRequest::HashRequest(const HashRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.HashRequest)
}

void HashRequest::SharedCtor() {
  _cached_size_ = 0;
}

HashRequest::~HashRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.HashRequest)
  SharedDtor();
}

void HashRequest::SharedDtor() {
}

void HashRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HashRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HashRequest& HashRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsHashRequest();
  return *internal_default_instance();
}

HashRequest* HashRequest::New(::google::protobuf::Arena* arena) const {
  HashRequest* n = new HashRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HashRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.HashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HashRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.HashRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.HashRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.HashRequest)
  return false;
#undef DO_
}

void HashRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.HashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.HashRequest)
}

::google::protobuf::uint8* HashRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.HashRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.HashRequest)
  return target;
}

size_t HashRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.HashRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HashRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.HashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HashRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HashRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.HashRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.HashRequest)
    MergeFrom(*source);
  }
}

void HashRequest::MergeFrom(const HashRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.HashRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HashRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.HashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HashRequest::CopyFrom(const HashRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.HashRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashRequest::IsInitialized() const {
  return true;
}

void HashRequest::Swap(HashRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HashRequest::InternalSwap(HashRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HashRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HashKVRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HashKVRequest::kRevisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HashKVRequest::HashKVRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsHashKVRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.HashKVRequest)
}
HashKVRequest::HashKVRequest(const HashKVRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  revision_ = from.revision_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.HashKVRequest)
}

void HashKVRequest::SharedCtor() {
  revision_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

HashKVRequest::~HashKVRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.HashKVRequest)
  SharedDtor();
}

void HashKVRequest::SharedDtor() {
}

void HashKVRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HashKVRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HashKVRequest& HashKVRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsHashKVRequest();
  return *internal_default_instance();
}

HashKVRequest* HashKVRequest::New(::google::protobuf::Arena* arena) const {
  HashKVRequest* n = new HashKVRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HashKVRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.HashKVRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  revision_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool HashKVRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.HashKVRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 revision = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.HashKVRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.HashKVRequest)
  return false;
#undef DO_
}

void HashKVRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.HashKVRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 revision = 1;
  if (this->revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->revision(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.HashKVRequest)
}

::google::protobuf::uint8* HashKVRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.HashKVRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 revision = 1;
  if (this->revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->revision(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.HashKVRequest)
  return target;
}

size_t HashKVRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.HashKVRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 revision = 1;
  if (this->revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->revision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HashKVRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.HashKVRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HashKVRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HashKVRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.HashKVRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.HashKVRequest)
    MergeFrom(*source);
  }
}

void HashKVRequest::MergeFrom(const HashKVRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.HashKVRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.revision() != 0) {
    set_revision(from.revision());
  }
}

void HashKVRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.HashKVRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HashKVRequest::CopyFrom(const HashKVRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.HashKVRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashKVRequest::IsInitialized() const {
  return true;
}

void HashKVRequest::Swap(HashKVRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HashKVRequest::InternalSwap(HashKVRequest* other) {
  using std::swap;
  swap(revision_, other->revision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HashKVRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HashKVResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_HashKVResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HashKVResponse::kHeaderFieldNumber;
const int HashKVResponse::kHashFieldNumber;
const int HashKVResponse::kCompactRevisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HashKVResponse::HashKVResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsHashKVResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.HashKVResponse)
}
HashKVResponse::HashKVResponse(const HashKVResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&compact_revision_, &from.compact_revision_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&compact_revision_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.HashKVResponse)
}

void HashKVResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&header_)) + sizeof(hash_));
  _cached_size_ = 0;
}

HashKVResponse::~HashKVResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.HashKVResponse)
  SharedDtor();
}

void HashKVResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void HashKVResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HashKVResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HashKVResponse& HashKVResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsHashKVResponse();
  return *internal_default_instance();
}

HashKVResponse* HashKVResponse::New(::google::protobuf::Arena* arena) const {
  HashKVResponse* n = new HashKVResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HashKVResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.HashKVResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&compact_revision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&compact_revision_)) + sizeof(hash_));
  _internal_metadata_.Clear();
}

bool HashKVResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.HashKVResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compact_revision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compact_revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.HashKVResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.HashKVResponse)
  return false;
#undef DO_
}

void HashKVResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.HashKVResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // uint32 hash = 2;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hash(), output);
  }

  // int64 compact_revision = 3;
  if (this->compact_revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->compact_revision(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.HashKVResponse)
}

::google::protobuf::uint8* HashKVResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.HashKVResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // uint32 hash = 2;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hash(), target);
  }

  // int64 compact_revision = 3;
  if (this->compact_revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->compact_revision(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.HashKVResponse)
  return target;
}

size_t HashKVResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.HashKVResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int64 compact_revision = 3;
  if (this->compact_revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compact_revision());
  }

  // uint32 hash = 2;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HashKVResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.HashKVResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HashKVResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HashKVResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.HashKVResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.HashKVResponse)
    MergeFrom(*source);
  }
}

void HashKVResponse::MergeFrom(const HashKVResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.HashKVResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.compact_revision() != 0) {
    set_compact_revision(from.compact_revision());
  }
  if (from.hash() != 0) {
    set_hash(from.hash());
  }
}

void HashKVResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.HashKVResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HashKVResponse::CopyFrom(const HashKVResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.HashKVResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashKVResponse::IsInitialized() const {
  return true;
}

void HashKVResponse::Swap(HashKVResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HashKVResponse::InternalSwap(HashKVResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(compact_revision_, other->compact_revision_);
  swap(hash_, other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HashKVResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HashResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_HashResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HashResponse::kHeaderFieldNumber;
const int HashResponse::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HashResponse::HashResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsHashResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.HashResponse)
}
HashResponse::HashResponse(const HashResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.HashResponse)
}

void HashResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&header_)) + sizeof(hash_));
  _cached_size_ = 0;
}

HashResponse::~HashResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.HashResponse)
  SharedDtor();
}

void HashResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void HashResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HashResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HashResponse& HashResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsHashResponse();
  return *internal_default_instance();
}

HashResponse* HashResponse::New(::google::protobuf::Arena* arena) const {
  HashResponse* n = new HashResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HashResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.HashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  hash_ = 0u;
  _internal_metadata_.Clear();
}

bool HashResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.HashResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.HashResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.HashResponse)
  return false;
#undef DO_
}

void HashResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.HashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // uint32 hash = 2;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.HashResponse)
}

::google::protobuf::uint8* HashResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.HashResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // uint32 hash = 2;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.HashResponse)
  return target;
}

size_t HashResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.HashResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // uint32 hash = 2;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HashResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.HashResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HashResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HashResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.HashResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.HashResponse)
    MergeFrom(*source);
  }
}

void HashResponse::MergeFrom(const HashResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.HashResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.hash() != 0) {
    set_hash(from.hash());
  }
}

void HashResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.HashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HashResponse::CopyFrom(const HashResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.HashResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashResponse::IsInitialized() const {
  return true;
}

void HashResponse::Swap(HashResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HashResponse::InternalSwap(HashResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(hash_, other->hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HashResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotRequest::SnapshotRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSnapshotRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.SnapshotRequest)
}
SnapshotRequest::SnapshotRequest(const SnapshotRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.SnapshotRequest)
}

void SnapshotRequest::SharedCtor() {
  _cached_size_ = 0;
}

SnapshotRequest::~SnapshotRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.SnapshotRequest)
  SharedDtor();
}

void SnapshotRequest::SharedDtor() {
}

void SnapshotRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnapshotRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotRequest& SnapshotRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSnapshotRequest();
  return *internal_default_instance();
}

SnapshotRequest* SnapshotRequest::New(::google::protobuf::Arena* arena) const {
  SnapshotRequest* n = new SnapshotRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.SnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SnapshotRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.SnapshotRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.SnapshotRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.SnapshotRequest)
  return false;
#undef DO_
}

void SnapshotRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.SnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.SnapshotRequest)
}

::google::protobuf::uint8* SnapshotRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.SnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.SnapshotRequest)
  return target;
}

size_t SnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.SnapshotRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapshotRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.SnapshotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.SnapshotRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.SnapshotRequest)
    MergeFrom(*source);
  }
}

void SnapshotRequest::MergeFrom(const SnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.SnapshotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SnapshotRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.SnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotRequest::CopyFrom(const SnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.SnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotRequest::IsInitialized() const {
  return true;
}

void SnapshotRequest::Swap(SnapshotRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotRequest::InternalSwap(SnapshotRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnapshotRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_SnapshotResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotResponse::kHeaderFieldNumber;
const int SnapshotResponse::kRemainingBytesFieldNumber;
const int SnapshotResponse::kBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotResponse::SnapshotResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsSnapshotResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.SnapshotResponse)
}
SnapshotResponse::SnapshotResponse(const SnapshotResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.blob().size() > 0) {
    blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
  }
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  remaining_bytes_ = from.remaining_bytes_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.SnapshotResponse)
}

void SnapshotResponse::SharedCtor() {
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remaining_bytes_) -
      reinterpret_cast<char*>(&header_)) + sizeof(remaining_bytes_));
  _cached_size_ = 0;
}

SnapshotResponse::~SnapshotResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.SnapshotResponse)
  SharedDtor();
}

void SnapshotResponse::SharedDtor() {
  blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void SnapshotResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnapshotResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotResponse& SnapshotResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsSnapshotResponse();
  return *internal_default_instance();
}

SnapshotResponse* SnapshotResponse::New(::google::protobuf::Arena* arena) const {
  SnapshotResponse* n = new SnapshotResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.SnapshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  remaining_bytes_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SnapshotResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.SnapshotResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 remaining_bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &remaining_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes blob = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.SnapshotResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.SnapshotResponse)
  return false;
#undef DO_
}

void SnapshotResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.SnapshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // uint64 remaining_bytes = 2;
  if (this->remaining_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->remaining_bytes(), output);
  }

  // bytes blob = 3;
  if (this->blob().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->blob(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.SnapshotResponse)
}

::google::protobuf::uint8* SnapshotResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.SnapshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // uint64 remaining_bytes = 2;
  if (this->remaining_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->remaining_bytes(), target);
  }

  // bytes blob = 3;
  if (this->blob().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->blob(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.SnapshotResponse)
  return target;
}

size_t SnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.SnapshotResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes blob = 3;
  if (this->blob().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->blob());
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // uint64 remaining_bytes = 2;
  if (this->remaining_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->remaining_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapshotResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.SnapshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.SnapshotResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.SnapshotResponse)
    MergeFrom(*source);
  }
}

void SnapshotResponse::MergeFrom(const SnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.SnapshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blob().size() > 0) {

    blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
  }
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.remaining_bytes() != 0) {
    set_remaining_bytes(from.remaining_bytes());
  }
}

void SnapshotResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.SnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotResponse::CopyFrom(const SnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.SnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotResponse::IsInitialized() const {
  return true;
}

void SnapshotResponse::Swap(SnapshotResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotResponse::InternalSwap(SnapshotResponse* other) {
  using std::swap;
  blob_.Swap(&other->blob_);
  swap(header_, other->header_);
  swap(remaining_bytes_, other->remaining_bytes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnapshotResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchRequest::InitAsDefaultInstance() {
  ::etcdserverpb::_WatchRequest_default_instance_.create_request_ = const_cast< ::etcdserverpb::WatchCreateRequest*>(
      ::etcdserverpb::WatchCreateRequest::internal_default_instance());
  ::etcdserverpb::_WatchRequest_default_instance_.cancel_request_ = const_cast< ::etcdserverpb::WatchCancelRequest*>(
      ::etcdserverpb::WatchCancelRequest::internal_default_instance());
}
void WatchRequest::set_allocated_create_request(::etcdserverpb::WatchCreateRequest* create_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request_union();
  if (create_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      create_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_request, submessage_arena);
    }
    set_has_create_request();
    request_union_.create_request_ = create_request;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchRequest.create_request)
}
void WatchRequest::set_allocated_cancel_request(::etcdserverpb::WatchCancelRequest* cancel_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request_union();
  if (cancel_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cancel_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cancel_request, submessage_arena);
    }
    set_has_cancel_request();
    request_union_.cancel_request_ = cancel_request;
  }
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.WatchRequest.cancel_request)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchRequest::kCreateRequestFieldNumber;
const int WatchRequest::kCancelRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchRequest::WatchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsWatchRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.WatchRequest)
}
WatchRequest::WatchRequest(const WatchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_request_union();
  switch (from.request_union_case()) {
    case kCreateRequest: {
      mutable_create_request()->::etcdserverpb::WatchCreateRequest::MergeFrom(from.create_request());
      break;
    }
    case kCancelRequest: {
      mutable_cancel_request()->::etcdserverpb::WatchCancelRequest::MergeFrom(from.cancel_request());
      break;
    }
    case REQUEST_UNION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.WatchRequest)
}

void WatchRequest::SharedCtor() {
  clear_has_request_union();
  _cached_size_ = 0;
}

WatchRequest::~WatchRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.WatchRequest)
  SharedDtor();
}

void WatchRequest::SharedDtor() {
  if (has_request_union()) {
    clear_request_union();
  }
}

void WatchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchRequest& WatchRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsWatchRequest();
  return *internal_default_instance();
}

WatchRequest* WatchRequest::New(::google::protobuf::Arena* arena) const {
  WatchRequest* n = new WatchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchRequest::clear_request_union() {
// @@protoc_insertion_point(one_of_clear_start:etcdserverpb.WatchRequest)
  switch (request_union_case()) {
    case kCreateRequest: {
      delete request_union_.create_request_;
      break;
    }
    case kCancelRequest: {
      delete request_union_.cancel_request_;
      break;
    }
    case REQUEST_UNION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_UNION_NOT_SET;
}


void WatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.WatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_union();
  _internal_metadata_.Clear();
}

bool WatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.WatchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.WatchCreateRequest create_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.WatchCancelRequest cancel_request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cancel_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.WatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.WatchRequest)
  return false;
#undef DO_
}

void WatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.WatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.WatchCreateRequest create_request = 1;
  if (has_create_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *request_union_.create_request_, output);
  }

  // .etcdserverpb.WatchCancelRequest cancel_request = 2;
  if (has_cancel_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *request_union_.cancel_request_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.WatchRequest)
}

::google::protobuf::uint8* WatchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.WatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.WatchCreateRequest create_request = 1;
  if (has_create_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *request_union_.create_request_, deterministic, target);
  }

  // .etcdserverpb.WatchCancelRequest cancel_request = 2;
  if (has_cancel_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *request_union_.cancel_request_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.WatchRequest)
  return target;
}

size_t WatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.WatchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (request_union_case()) {
    // .etcdserverpb.WatchCreateRequest create_request = 1;
    case kCreateRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_union_.create_request_);
      break;
    }
    // .etcdserverpb.WatchCancelRequest cancel_request = 2;
    case kCancelRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_union_.cancel_request_);
      break;
    }
    case REQUEST_UNION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.WatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.WatchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.WatchRequest)
    MergeFrom(*source);
  }
}

void WatchRequest::MergeFrom(const WatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.WatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_union_case()) {
    case kCreateRequest: {
      mutable_create_request()->::etcdserverpb::WatchCreateRequest::MergeFrom(from.create_request());
      break;
    }
    case kCancelRequest: {
      mutable_cancel_request()->::etcdserverpb::WatchCancelRequest::MergeFrom(from.cancel_request());
      break;
    }
    case REQUEST_UNION_NOT_SET: {
      break;
    }
  }
}

void WatchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.WatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchRequest::CopyFrom(const WatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.WatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchRequest::IsInitialized() const {
  return true;
}

void WatchRequest::Swap(WatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchRequest::InternalSwap(WatchRequest* other) {
  using std::swap;
  swap(request_union_, other->request_union_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchCreateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchCreateRequest::kKeyFieldNumber;
const int WatchCreateRequest::kRangeEndFieldNumber;
const int WatchCreateRequest::kStartRevisionFieldNumber;
const int WatchCreateRequest::kProgressNotifyFieldNumber;
const int WatchCreateRequest::kFiltersFieldNumber;
const int WatchCreateRequest::kPrevKvFieldNumber;
const int WatchCreateRequest::kWatchIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchCreateRequest::WatchCreateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsWatchCreateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.WatchCreateRequest)
}
WatchCreateRequest::WatchCreateRequest(const WatchCreateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filters_(from.filters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.range_end().size() > 0) {
    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  ::memcpy(&start_revision_, &from.start_revision_,
    static_cast<size_t>(reinterpret_cast<char*>(&prev_kv_) -
    reinterpret_cast<char*>(&start_revision_)) + sizeof(prev_kv_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.WatchCreateRequest)
}

void WatchCreateRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_revision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prev_kv_) -
      reinterpret_cast<char*>(&start_revision_)) + sizeof(prev_kv_));
  _cached_size_ = 0;
}

WatchCreateRequest::~WatchCreateRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.WatchCreateRequest)
  SharedDtor();
}

void WatchCreateRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WatchCreateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchCreateRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchCreateRequest& WatchCreateRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsWatchCreateRequest();
  return *internal_default_instance();
}

WatchCreateRequest* WatchCreateRequest::New(::google::protobuf::Arena* arena) const {
  WatchCreateRequest* n = new WatchCreateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.WatchCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filters_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_revision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prev_kv_) -
      reinterpret_cast<char*>(&start_revision_)) + sizeof(prev_kv_));
  _internal_metadata_.Clear();
}

bool WatchCreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.WatchCreateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes range_end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_range_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 start_revision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool progress_notify = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &progress_notify_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_filters(static_cast< ::etcdserverpb::WatchCreateRequest_FilterType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_filters(static_cast< ::etcdserverpb::WatchCreateRequest_FilterType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool prev_kv = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prev_kv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 watch_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &watch_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.WatchCreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.WatchCreateRequest)
  return false;
#undef DO_
}

void WatchCreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.WatchCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->range_end(), output);
  }

  // int64 start_revision = 3;
  if (this->start_revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_revision(), output);
  }

  // bool progress_notify = 4;
  if (this->progress_notify() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->progress_notify(), output);
  }

  // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5;
  if (this->filters_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_filters_cached_byte_size_));
  }
  for (int i = 0, n = this->filters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->filters(i), output);
  }

  // bool prev_kv = 6;
  if (this->prev_kv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->prev_kv(), output);
  }

  // int64 watch_id = 7;
  if (this->watch_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->watch_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.WatchCreateRequest)
}

::google::protobuf::uint8* WatchCreateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.WatchCreateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->range_end(), target);
  }

  // int64 start_revision = 3;
  if (this->start_revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_revision(), target);
  }

  // bool progress_notify = 4;
  if (this->progress_notify() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->progress_notify(), target);
  }

  // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5;
  if (this->filters_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _filters_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->filters_, target);
  }

  // bool prev_kv = 6;
  if (this->prev_kv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->prev_kv(), target);
  }

  // int64 watch_id = 7;
  if (this->watch_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->watch_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.WatchCreateRequest)
  return target;
}

size_t WatchCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.WatchCreateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.WatchCreateRequest.FilterType filters = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->filters_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->filters(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _filters_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes range_end = 2;
  if (this->range_end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->range_end());
  }

  // int64 start_revision = 3;
  if (this->start_revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_revision());
  }

  // int64 watch_id = 7;
  if (this->watch_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->watch_id());
  }

  // bool progress_notify = 4;
  if (this->progress_notify() != 0) {
    total_size += 1 + 1;
  }

  // bool prev_kv = 6;
  if (this->prev_kv() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchCreateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.WatchCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchCreateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchCreateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.WatchCreateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.WatchCreateRequest)
    MergeFrom(*source);
  }
}

void WatchCreateRequest::MergeFrom(const WatchCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.WatchCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filters_.MergeFrom(from.filters_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.range_end().size() > 0) {

    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  if (from.start_revision() != 0) {
    set_start_revision(from.start_revision());
  }
  if (from.watch_id() != 0) {
    set_watch_id(from.watch_id());
  }
  if (from.progress_notify() != 0) {
    set_progress_notify(from.progress_notify());
  }
  if (from.prev_kv() != 0) {
    set_prev_kv(from.prev_kv());
  }
}

void WatchCreateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.WatchCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchCreateRequest::CopyFrom(const WatchCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.WatchCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchCreateRequest::IsInitialized() const {
  return true;
}

void WatchCreateRequest::Swap(WatchCreateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchCreateRequest::InternalSwap(WatchCreateRequest* other) {
  using std::swap;
  filters_.InternalSwap(&other->filters_);
  key_.Swap(&other->key_);
  range_end_.Swap(&other->range_end_);
  swap(start_revision_, other->start_revision_);
  swap(watch_id_, other->watch_id_);
  swap(progress_notify_, other->progress_notify_);
  swap(prev_kv_, other->prev_kv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchCreateRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchCancelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchCancelRequest::kWatchIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchCancelRequest::WatchCancelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsWatchCancelRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.WatchCancelRequest)
}
WatchCancelRequest::WatchCancelRequest(const WatchCancelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  watch_id_ = from.watch_id_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.WatchCancelRequest)
}

void WatchCancelRequest::SharedCtor() {
  watch_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

WatchCancelRequest::~WatchCancelRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.WatchCancelRequest)
  SharedDtor();
}

void WatchCancelRequest::SharedDtor() {
}

void WatchCancelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchCancelRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchCancelRequest& WatchCancelRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsWatchCancelRequest();
  return *internal_default_instance();
}

WatchCancelRequest* WatchCancelRequest::New(::google::protobuf::Arena* arena) const {
  WatchCancelRequest* n = new WatchCancelRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.WatchCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  watch_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool WatchCancelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.WatchCancelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 watch_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &watch_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.WatchCancelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.WatchCancelRequest)
  return false;
#undef DO_
}

void WatchCancelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.WatchCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 watch_id = 1;
  if (this->watch_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->watch_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.WatchCancelRequest)
}

::google::protobuf::uint8* WatchCancelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.WatchCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 watch_id = 1;
  if (this->watch_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->watch_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.WatchCancelRequest)
  return target;
}

size_t WatchCancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.WatchCancelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 watch_id = 1;
  if (this->watch_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->watch_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchCancelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.WatchCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchCancelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchCancelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.WatchCancelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.WatchCancelRequest)
    MergeFrom(*source);
  }
}

void WatchCancelRequest::MergeFrom(const WatchCancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.WatchCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.watch_id() != 0) {
    set_watch_id(from.watch_id());
  }
}

void WatchCancelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.WatchCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchCancelRequest::CopyFrom(const WatchCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.WatchCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchCancelRequest::IsInitialized() const {
  return true;
}

void WatchCancelRequest::Swap(WatchCancelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchCancelRequest::InternalSwap(WatchCancelRequest* other) {
  using std::swap;
  swap(watch_id_, other->watch_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchCancelRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_WatchResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
void WatchResponse::clear_events() {
  events_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchResponse::kHeaderFieldNumber;
const int WatchResponse::kWatchIdFieldNumber;
const int WatchResponse::kCreatedFieldNumber;
const int WatchResponse::kCanceledFieldNumber;
const int WatchResponse::kCompactRevisionFieldNumber;
const int WatchResponse::kCancelReasonFieldNumber;
const int WatchResponse::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchResponse::WatchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsWatchResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.WatchResponse)
}
WatchResponse::WatchResponse(const WatchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      events_(from.events_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cancel_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cancel_reason().size() > 0) {
    cancel_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cancel_reason_);
  }
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&watch_id_, &from.watch_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&canceled_) -
    reinterpret_cast<char*>(&watch_id_)) + sizeof(canceled_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.WatchResponse)
}

void WatchResponse::SharedCtor() {
  cancel_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&canceled_) -
      reinterpret_cast<char*>(&header_)) + sizeof(canceled_));
  _cached_size_ = 0;
}

WatchResponse::~WatchResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.WatchResponse)
  SharedDtor();
}

void WatchResponse::SharedDtor() {
  cancel_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void WatchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchResponse& WatchResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsWatchResponse();
  return *internal_default_instance();
}

WatchResponse* WatchResponse::New(::google::protobuf::Arena* arena) const {
  WatchResponse* n = new WatchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.WatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  cancel_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&watch_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&canceled_) -
      reinterpret_cast<char*>(&watch_id_)) + sizeof(canceled_));
  _internal_metadata_.Clear();
}

bool WatchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.WatchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 watch_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &watch_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool created = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool canceled = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canceled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compact_revision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compact_revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cancel_reason = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cancel_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cancel_reason().data(), static_cast<int>(this->cancel_reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.WatchResponse.cancel_reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .mvccpb.Event events = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.WatchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.WatchResponse)
  return false;
#undef DO_
}

void WatchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.WatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int64 watch_id = 2;
  if (this->watch_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->watch_id(), output);
  }

  // bool created = 3;
  if (this->created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->created(), output);
  }

  // bool canceled = 4;
  if (this->canceled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->canceled(), output);
  }

  // int64 compact_revision = 5;
  if (this->compact_revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->compact_revision(), output);
  }

  // string cancel_reason = 6;
  if (this->cancel_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cancel_reason().data(), static_cast<int>(this->cancel_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.WatchResponse.cancel_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cancel_reason(), output);
  }

  // repeated .mvccpb.Event events = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->events(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.WatchResponse)
}

::google::protobuf::uint8* WatchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.WatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int64 watch_id = 2;
  if (this->watch_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->watch_id(), target);
  }

  // bool created = 3;
  if (this->created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->created(), target);
  }

  // bool canceled = 4;
  if (this->canceled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->canceled(), target);
  }

  // int64 compact_revision = 5;
  if (this->compact_revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->compact_revision(), target);
  }

  // string cancel_reason = 6;
  if (this->cancel_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cancel_reason().data(), static_cast<int>(this->cancel_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.WatchResponse.cancel_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cancel_reason(), target);
  }

  // repeated .mvccpb.Event events = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->events(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.WatchResponse)
  return target;
}

size_t WatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.WatchResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mvccpb.Event events = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // string cancel_reason = 6;
  if (this->cancel_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cancel_reason());
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int64 watch_id = 2;
  if (this->watch_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->watch_id());
  }

  // int64 compact_revision = 5;
  if (this->compact_revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compact_revision());
  }

  // bool created = 3;
  if (this->created() != 0) {
    total_size += 1 + 1;
  }

  // bool canceled = 4;
  if (this->canceled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.WatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.WatchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.WatchResponse)
    MergeFrom(*source);
  }
}

void WatchResponse::MergeFrom(const WatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.WatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  if (from.cancel_reason().size() > 0) {

    cancel_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cancel_reason_);
  }
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.watch_id() != 0) {
    set_watch_id(from.watch_id());
  }
  if (from.compact_revision() != 0) {
    set_compact_revision(from.compact_revision());
  }
  if (from.created() != 0) {
    set_created(from.created());
  }
  if (from.canceled() != 0) {
    set_canceled(from.canceled());
  }
}

void WatchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.WatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchResponse::CopyFrom(const WatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.WatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchResponse::IsInitialized() const {
  return true;
}

void WatchResponse::Swap(WatchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchResponse::InternalSwap(WatchResponse* other) {
  using std::swap;
  events_.InternalSwap(&other->events_);
  cancel_reason_.Swap(&other->cancel_reason_);
  swap(header_, other->header_);
  swap(watch_id_, other->watch_id_);
  swap(compact_revision_, other->compact_revision_);
  swap(created_, other->created_);
  swap(canceled_, other->canceled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseGrantRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseGrantRequest::kTTLFieldNumber;
const int LeaseGrantRequest::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseGrantRequest::LeaseGrantRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseGrantRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseGrantRequest)
}
LeaseGrantRequest::LeaseGrantRequest(const LeaseGrantRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ttl_, &from.ttl_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&ttl_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseGrantRequest)
}

void LeaseGrantRequest::SharedCtor() {
  ::memset(&ttl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&ttl_)) + sizeof(id_));
  _cached_size_ = 0;
}

LeaseGrantRequest::~LeaseGrantRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseGrantRequest)
  SharedDtor();
}

void LeaseGrantRequest::SharedDtor() {
}

void LeaseGrantRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseGrantRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseGrantRequest& LeaseGrantRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseGrantRequest();
  return *internal_default_instance();
}

LeaseGrantRequest* LeaseGrantRequest::New(::google::protobuf::Arena* arena) const {
  LeaseGrantRequest* n = new LeaseGrantRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseGrantRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseGrantRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ttl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&ttl_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool LeaseGrantRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseGrantRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 TTL = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseGrantRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseGrantRequest)
  return false;
#undef DO_
}

void LeaseGrantRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseGrantRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 TTL = 1;
  if (this->ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ttl(), output);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseGrantRequest)
}

::google::protobuf::uint8* LeaseGrantRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseGrantRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 TTL = 1;
  if (this->ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ttl(), target);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseGrantRequest)
  return target;
}

size_t LeaseGrantRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseGrantRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 TTL = 1;
  if (this->ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ttl());
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseGrantRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseGrantRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseGrantRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseGrantRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseGrantRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseGrantRequest)
    MergeFrom(*source);
  }
}

void LeaseGrantRequest::MergeFrom(const LeaseGrantRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseGrantRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ttl() != 0) {
    set_ttl(from.ttl());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void LeaseGrantRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseGrantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseGrantRequest::CopyFrom(const LeaseGrantRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseGrantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseGrantRequest::IsInitialized() const {
  return true;
}

void LeaseGrantRequest::Swap(LeaseGrantRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseGrantRequest::InternalSwap(LeaseGrantRequest* other) {
  using std::swap;
  swap(ttl_, other->ttl_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseGrantRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseGrantResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_LeaseGrantResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseGrantResponse::kHeaderFieldNumber;
const int LeaseGrantResponse::kIDFieldNumber;
const int LeaseGrantResponse::kTTLFieldNumber;
const int LeaseGrantResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseGrantResponse::LeaseGrantResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseGrantResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseGrantResponse)
}
LeaseGrantResponse::LeaseGrantResponse(const LeaseGrantResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ttl_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ttl_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseGrantResponse)
}

void LeaseGrantResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ttl_) -
      reinterpret_cast<char*>(&header_)) + sizeof(ttl_));
  _cached_size_ = 0;
}

LeaseGrantResponse::~LeaseGrantResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseGrantResponse)
  SharedDtor();
}

void LeaseGrantResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void LeaseGrantResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseGrantResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseGrantResponse& LeaseGrantResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseGrantResponse();
  return *internal_default_instance();
}

LeaseGrantResponse* LeaseGrantResponse::New(::google::protobuf::Arena* arena) const {
  LeaseGrantResponse* n = new LeaseGrantResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseGrantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseGrantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ttl_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ttl_));
  _internal_metadata_.Clear();
}

bool LeaseGrantResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseGrantResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TTL = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.LeaseGrantResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseGrantResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseGrantResponse)
  return false;
#undef DO_
}

void LeaseGrantResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseGrantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ttl(), output);
  }

  // string error = 4;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.LeaseGrantResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseGrantResponse)
}

::google::protobuf::uint8* LeaseGrantResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseGrantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ttl(), target);
  }

  // string error = 4;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.LeaseGrantResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseGrantResponse)
  return target;
}

size_t LeaseGrantResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseGrantResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 4;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ttl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseGrantResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseGrantResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseGrantResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseGrantResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseGrantResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseGrantResponse)
    MergeFrom(*source);
  }
}

void LeaseGrantResponse::MergeFrom(const LeaseGrantResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseGrantResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.ttl() != 0) {
    set_ttl(from.ttl());
  }
}

void LeaseGrantResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseGrantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseGrantResponse::CopyFrom(const LeaseGrantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseGrantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseGrantResponse::IsInitialized() const {
  return true;
}

void LeaseGrantResponse::Swap(LeaseGrantResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseGrantResponse::InternalSwap(LeaseGrantResponse* other) {
  using std::swap;
  error_.Swap(&other->error_);
  swap(header_, other->header_);
  swap(id_, other->id_);
  swap(ttl_, other->ttl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseGrantResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseRevokeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseRevokeRequest::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseRevokeRequest::LeaseRevokeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseRevokeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseRevokeRequest)
}
LeaseRevokeRequest::LeaseRevokeRequest(const LeaseRevokeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseRevokeRequest)
}

void LeaseRevokeRequest::SharedCtor() {
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

LeaseRevokeRequest::~LeaseRevokeRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseRevokeRequest)
  SharedDtor();
}

void LeaseRevokeRequest::SharedDtor() {
}

void LeaseRevokeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseRevokeRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseRevokeRequest& LeaseRevokeRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseRevokeRequest();
  return *internal_default_instance();
}

LeaseRevokeRequest* LeaseRevokeRequest::New(::google::protobuf::Arena* arena) const {
  LeaseRevokeRequest* n = new LeaseRevokeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseRevokeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseRevokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LeaseRevokeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseRevokeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseRevokeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseRevokeRequest)
  return false;
#undef DO_
}

void LeaseRevokeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseRevokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseRevokeRequest)
}

::google::protobuf::uint8* LeaseRevokeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseRevokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseRevokeRequest)
  return target;
}

size_t LeaseRevokeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseRevokeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseRevokeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseRevokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseRevokeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseRevokeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseRevokeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseRevokeRequest)
    MergeFrom(*source);
  }
}

void LeaseRevokeRequest::MergeFrom(const LeaseRevokeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseRevokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void LeaseRevokeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseRevokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseRevokeRequest::CopyFrom(const LeaseRevokeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseRevokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseRevokeRequest::IsInitialized() const {
  return true;
}

void LeaseRevokeRequest::Swap(LeaseRevokeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseRevokeRequest::InternalSwap(LeaseRevokeRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseRevokeRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseRevokeResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_LeaseRevokeResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseRevokeResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseRevokeResponse::LeaseRevokeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseRevokeResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseRevokeResponse)
}
LeaseRevokeResponse::LeaseRevokeResponse(const LeaseRevokeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseRevokeResponse)
}

void LeaseRevokeResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

LeaseRevokeResponse::~LeaseRevokeResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseRevokeResponse)
  SharedDtor();
}

void LeaseRevokeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void LeaseRevokeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseRevokeResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseRevokeResponse& LeaseRevokeResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseRevokeResponse();
  return *internal_default_instance();
}

LeaseRevokeResponse* LeaseRevokeResponse::New(::google::protobuf::Arena* arena) const {
  LeaseRevokeResponse* n = new LeaseRevokeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseRevokeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseRevokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool LeaseRevokeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseRevokeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseRevokeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseRevokeResponse)
  return false;
#undef DO_
}

void LeaseRevokeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseRevokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseRevokeResponse)
}

::google::protobuf::uint8* LeaseRevokeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseRevokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseRevokeResponse)
  return target;
}

size_t LeaseRevokeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseRevokeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseRevokeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseRevokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseRevokeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseRevokeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseRevokeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseRevokeResponse)
    MergeFrom(*source);
  }
}

void LeaseRevokeResponse::MergeFrom(const LeaseRevokeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseRevokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void LeaseRevokeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseRevokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseRevokeResponse::CopyFrom(const LeaseRevokeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseRevokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseRevokeResponse::IsInitialized() const {
  return true;
}

void LeaseRevokeResponse::Swap(LeaseRevokeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseRevokeResponse::InternalSwap(LeaseRevokeResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseRevokeResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseKeepAliveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseKeepAliveRequest::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseKeepAliveRequest::LeaseKeepAliveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseKeepAliveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseKeepAliveRequest)
}
LeaseKeepAliveRequest::LeaseKeepAliveRequest(const LeaseKeepAliveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseKeepAliveRequest)
}

void LeaseKeepAliveRequest::SharedCtor() {
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

LeaseKeepAliveRequest::~LeaseKeepAliveRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseKeepAliveRequest)
  SharedDtor();
}

void LeaseKeepAliveRequest::SharedDtor() {
}

void LeaseKeepAliveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseKeepAliveRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseKeepAliveRequest& LeaseKeepAliveRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseKeepAliveRequest();
  return *internal_default_instance();
}

LeaseKeepAliveRequest* LeaseKeepAliveRequest::New(::google::protobuf::Arena* arena) const {
  LeaseKeepAliveRequest* n = new LeaseKeepAliveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseKeepAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseKeepAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LeaseKeepAliveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseKeepAliveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseKeepAliveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseKeepAliveRequest)
  return false;
#undef DO_
}

void LeaseKeepAliveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseKeepAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseKeepAliveRequest)
}

::google::protobuf::uint8* LeaseKeepAliveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseKeepAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseKeepAliveRequest)
  return target;
}

size_t LeaseKeepAliveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseKeepAliveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseKeepAliveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseKeepAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseKeepAliveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseKeepAliveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseKeepAliveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseKeepAliveRequest)
    MergeFrom(*source);
  }
}

void LeaseKeepAliveRequest::MergeFrom(const LeaseKeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseKeepAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void LeaseKeepAliveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseKeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseKeepAliveRequest::CopyFrom(const LeaseKeepAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseKeepAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseKeepAliveRequest::IsInitialized() const {
  return true;
}

void LeaseKeepAliveRequest::Swap(LeaseKeepAliveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseKeepAliveRequest::InternalSwap(LeaseKeepAliveRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseKeepAliveRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseKeepAliveResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_LeaseKeepAliveResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseKeepAliveResponse::kHeaderFieldNumber;
const int LeaseKeepAliveResponse::kIDFieldNumber;
const int LeaseKeepAliveResponse::kTTLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseKeepAliveResponse::LeaseKeepAliveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseKeepAliveResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseKeepAliveResponse)
}
LeaseKeepAliveResponse::LeaseKeepAliveResponse(const LeaseKeepAliveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ttl_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ttl_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseKeepAliveResponse)
}

void LeaseKeepAliveResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ttl_) -
      reinterpret_cast<char*>(&header_)) + sizeof(ttl_));
  _cached_size_ = 0;
}

LeaseKeepAliveResponse::~LeaseKeepAliveResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseKeepAliveResponse)
  SharedDtor();
}

void LeaseKeepAliveResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void LeaseKeepAliveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseKeepAliveResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseKeepAliveResponse& LeaseKeepAliveResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseKeepAliveResponse();
  return *internal_default_instance();
}

LeaseKeepAliveResponse* LeaseKeepAliveResponse::New(::google::protobuf::Arena* arena) const {
  LeaseKeepAliveResponse* n = new LeaseKeepAliveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseKeepAliveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseKeepAliveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ttl_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ttl_));
  _internal_metadata_.Clear();
}

bool LeaseKeepAliveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseKeepAliveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TTL = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseKeepAliveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseKeepAliveResponse)
  return false;
#undef DO_
}

void LeaseKeepAliveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseKeepAliveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ttl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseKeepAliveResponse)
}

::google::protobuf::uint8* LeaseKeepAliveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseKeepAliveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ttl(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseKeepAliveResponse)
  return target;
}

size_t LeaseKeepAliveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseKeepAliveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ttl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseKeepAliveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseKeepAliveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseKeepAliveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseKeepAliveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseKeepAliveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseKeepAliveResponse)
    MergeFrom(*source);
  }
}

void LeaseKeepAliveResponse::MergeFrom(const LeaseKeepAliveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseKeepAliveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.ttl() != 0) {
    set_ttl(from.ttl());
  }
}

void LeaseKeepAliveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseKeepAliveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseKeepAliveResponse::CopyFrom(const LeaseKeepAliveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseKeepAliveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseKeepAliveResponse::IsInitialized() const {
  return true;
}

void LeaseKeepAliveResponse::Swap(LeaseKeepAliveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseKeepAliveResponse::InternalSwap(LeaseKeepAliveResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(id_, other->id_);
  swap(ttl_, other->ttl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseKeepAliveResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseTimeToLiveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseTimeToLiveRequest::kIDFieldNumber;
const int LeaseTimeToLiveRequest::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseTimeToLiveRequest::LeaseTimeToLiveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseTimeToLiveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseTimeToLiveRequest)
}
LeaseTimeToLiveRequest::LeaseTimeToLiveRequest(const LeaseTimeToLiveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&keys_) -
    reinterpret_cast<char*>(&id_)) + sizeof(keys_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseTimeToLiveRequest)
}

void LeaseTimeToLiveRequest::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keys_) -
      reinterpret_cast<char*>(&id_)) + sizeof(keys_));
  _cached_size_ = 0;
}

LeaseTimeToLiveRequest::~LeaseTimeToLiveRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseTimeToLiveRequest)
  SharedDtor();
}

void LeaseTimeToLiveRequest::SharedDtor() {
}

void LeaseTimeToLiveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseTimeToLiveRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseTimeToLiveRequest& LeaseTimeToLiveRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseTimeToLiveRequest();
  return *internal_default_instance();
}

LeaseTimeToLiveRequest* LeaseTimeToLiveRequest::New(::google::protobuf::Arena* arena) const {
  LeaseTimeToLiveRequest* n = new LeaseTimeToLiveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseTimeToLiveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseTimeToLiveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keys_) -
      reinterpret_cast<char*>(&id_)) + sizeof(keys_));
  _internal_metadata_.Clear();
}

bool LeaseTimeToLiveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseTimeToLiveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keys_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseTimeToLiveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseTimeToLiveRequest)
  return false;
#undef DO_
}

void LeaseTimeToLiveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseTimeToLiveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // bool keys = 2;
  if (this->keys() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->keys(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseTimeToLiveRequest)
}

::google::protobuf::uint8* LeaseTimeToLiveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseTimeToLiveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // bool keys = 2;
  if (this->keys() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->keys(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseTimeToLiveRequest)
  return target;
}

size_t LeaseTimeToLiveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseTimeToLiveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // bool keys = 2;
  if (this->keys() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseTimeToLiveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseTimeToLiveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseTimeToLiveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseTimeToLiveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseTimeToLiveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseTimeToLiveRequest)
    MergeFrom(*source);
  }
}

void LeaseTimeToLiveRequest::MergeFrom(const LeaseTimeToLiveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseTimeToLiveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.keys() != 0) {
    set_keys(from.keys());
  }
}

void LeaseTimeToLiveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseTimeToLiveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseTimeToLiveRequest::CopyFrom(const LeaseTimeToLiveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseTimeToLiveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseTimeToLiveRequest::IsInitialized() const {
  return true;
}

void LeaseTimeToLiveRequest::Swap(LeaseTimeToLiveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseTimeToLiveRequest::InternalSwap(LeaseTimeToLiveRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(keys_, other->keys_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseTimeToLiveRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseTimeToLiveResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_LeaseTimeToLiveResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseTimeToLiveResponse::kHeaderFieldNumber;
const int LeaseTimeToLiveResponse::kIDFieldNumber;
const int LeaseTimeToLiveResponse::kTTLFieldNumber;
const int LeaseTimeToLiveResponse::kGrantedTTLFieldNumber;
const int LeaseTimeToLiveResponse::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseTimeToLiveResponse::LeaseTimeToLiveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseTimeToLiveResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseTimeToLiveResponse)
}
LeaseTimeToLiveResponse::LeaseTimeToLiveResponse(const LeaseTimeToLiveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&grantedttl_) -
    reinterpret_cast<char*>(&id_)) + sizeof(grantedttl_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseTimeToLiveResponse)
}

void LeaseTimeToLiveResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grantedttl_) -
      reinterpret_cast<char*>(&header_)) + sizeof(grantedttl_));
  _cached_size_ = 0;
}

LeaseTimeToLiveResponse::~LeaseTimeToLiveResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseTimeToLiveResponse)
  SharedDtor();
}

void LeaseTimeToLiveResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void LeaseTimeToLiveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseTimeToLiveResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseTimeToLiveResponse& LeaseTimeToLiveResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseTimeToLiveResponse();
  return *internal_default_instance();
}

LeaseTimeToLiveResponse* LeaseTimeToLiveResponse::New(::google::protobuf::Arena* arena) const {
  LeaseTimeToLiveResponse* n = new LeaseTimeToLiveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseTimeToLiveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseTimeToLiveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grantedttl_) -
      reinterpret_cast<char*>(&id_)) + sizeof(grantedttl_));
  _internal_metadata_.Clear();
}

bool LeaseTimeToLiveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseTimeToLiveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TTL = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 grantedTTL = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &grantedttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseTimeToLiveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseTimeToLiveResponse)
  return false;
#undef DO_
}

void LeaseTimeToLiveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseTimeToLiveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ttl(), output);
  }

  // int64 grantedTTL = 4;
  if (this->grantedttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->grantedttl(), output);
  }

  // repeated bytes keys = 5;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->keys(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseTimeToLiveResponse)
}

::google::protobuf::uint8* LeaseTimeToLiveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseTimeToLiveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ttl(), target);
  }

  // int64 grantedTTL = 4;
  if (this->grantedttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->grantedttl(), target);
  }

  // repeated bytes keys = 5;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(5, this->keys(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseTimeToLiveResponse)
  return target;
}

size_t LeaseTimeToLiveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseTimeToLiveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes keys = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int64 ID = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 TTL = 3;
  if (this->ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ttl());
  }

  // int64 grantedTTL = 4;
  if (this->grantedttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->grantedttl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseTimeToLiveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseTimeToLiveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseTimeToLiveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseTimeToLiveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseTimeToLiveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseTimeToLiveResponse)
    MergeFrom(*source);
  }
}

void LeaseTimeToLiveResponse::MergeFrom(const LeaseTimeToLiveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseTimeToLiveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.ttl() != 0) {
    set_ttl(from.ttl());
  }
  if (from.grantedttl() != 0) {
    set_grantedttl(from.grantedttl());
  }
}

void LeaseTimeToLiveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseTimeToLiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseTimeToLiveResponse::CopyFrom(const LeaseTimeToLiveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseTimeToLiveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseTimeToLiveResponse::IsInitialized() const {
  return true;
}

void LeaseTimeToLiveResponse::Swap(LeaseTimeToLiveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseTimeToLiveResponse::InternalSwap(LeaseTimeToLiveResponse* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  swap(header_, other->header_);
  swap(id_, other->id_);
  swap(ttl_, other->ttl_);
  swap(grantedttl_, other->grantedttl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseTimeToLiveResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseLeasesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseLeasesRequest::LeaseLeasesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseLeasesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseLeasesRequest)
}
LeaseLeasesRequest::LeaseLeasesRequest(const LeaseLeasesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseLeasesRequest)
}

void LeaseLeasesRequest::SharedCtor() {
  _cached_size_ = 0;
}

LeaseLeasesRequest::~LeaseLeasesRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseLeasesRequest)
  SharedDtor();
}

void LeaseLeasesRequest::SharedDtor() {
}

void LeaseLeasesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseLeasesRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseLeasesRequest& LeaseLeasesRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseLeasesRequest();
  return *internal_default_instance();
}

LeaseLeasesRequest* LeaseLeasesRequest::New(::google::protobuf::Arena* arena) const {
  LeaseLeasesRequest* n = new LeaseLeasesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseLeasesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseLeasesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LeaseLeasesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseLeasesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseLeasesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseLeasesRequest)
  return false;
#undef DO_
}

void LeaseLeasesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseLeasesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseLeasesRequest)
}

::google::protobuf::uint8* LeaseLeasesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseLeasesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseLeasesRequest)
  return target;
}

size_t LeaseLeasesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseLeasesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseLeasesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseLeasesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseLeasesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseLeasesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseLeasesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseLeasesRequest)
    MergeFrom(*source);
  }
}

void LeaseLeasesRequest::MergeFrom(const LeaseLeasesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseLeasesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LeaseLeasesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseLeasesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseLeasesRequest::CopyFrom(const LeaseLeasesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseLeasesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseLeasesRequest::IsInitialized() const {
  return true;
}

void LeaseLeasesRequest::Swap(LeaseLeasesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseLeasesRequest::InternalSwap(LeaseLeasesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseLeasesRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseStatus::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseStatus::LeaseStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseStatus)
}
LeaseStatus::LeaseStatus(const LeaseStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseStatus)
}

void LeaseStatus::SharedCtor() {
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

LeaseStatus::~LeaseStatus() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseStatus)
  SharedDtor();
}

void LeaseStatus::SharedDtor() {
}

void LeaseStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseStatus::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseStatus& LeaseStatus::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseStatus();
  return *internal_default_instance();
}

LeaseStatus* LeaseStatus::New(::google::protobuf::Arena* arena) const {
  LeaseStatus* n = new LeaseStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LeaseStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseStatus)
  return false;
#undef DO_
}

void LeaseStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseStatus)
}

::google::protobuf::uint8* LeaseStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseStatus)
  return target;
}

size_t LeaseStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseStatus)
    MergeFrom(*source);
  }
}

void LeaseStatus::MergeFrom(const LeaseStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void LeaseStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseStatus::CopyFrom(const LeaseStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseStatus::IsInitialized() const {
  return true;
}

void LeaseStatus::Swap(LeaseStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseStatus::InternalSwap(LeaseStatus* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseStatus::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaseLeasesResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_LeaseLeasesResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaseLeasesResponse::kHeaderFieldNumber;
const int LeaseLeasesResponse::kLeasesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaseLeasesResponse::LeaseLeasesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsLeaseLeasesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.LeaseLeasesResponse)
}
LeaseLeasesResponse::LeaseLeasesResponse(const LeaseLeasesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      leases_(from.leases_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.LeaseLeasesResponse)
}

void LeaseLeasesResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

LeaseLeasesResponse::~LeaseLeasesResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.LeaseLeasesResponse)
  SharedDtor();
}

void LeaseLeasesResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void LeaseLeasesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaseLeasesResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaseLeasesResponse& LeaseLeasesResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsLeaseLeasesResponse();
  return *internal_default_instance();
}

LeaseLeasesResponse* LeaseLeasesResponse::New(::google::protobuf::Arena* arena) const {
  LeaseLeasesResponse* n = new LeaseLeasesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaseLeasesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.LeaseLeasesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leases_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool LeaseLeasesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.LeaseLeasesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.LeaseStatus leases = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_leases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.LeaseLeasesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.LeaseLeasesResponse)
  return false;
#undef DO_
}

void LeaseLeasesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.LeaseLeasesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .etcdserverpb.LeaseStatus leases = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->leases_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->leases(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.LeaseLeasesResponse)
}

::google::protobuf::uint8* LeaseLeasesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.LeaseLeasesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .etcdserverpb.LeaseStatus leases = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->leases_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->leases(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.LeaseLeasesResponse)
  return target;
}

size_t LeaseLeasesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.LeaseLeasesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.LeaseStatus leases = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->leases_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->leases(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaseLeasesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.LeaseLeasesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaseLeasesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaseLeasesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.LeaseLeasesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.LeaseLeasesResponse)
    MergeFrom(*source);
  }
}

void LeaseLeasesResponse::MergeFrom(const LeaseLeasesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.LeaseLeasesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  leases_.MergeFrom(from.leases_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void LeaseLeasesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.LeaseLeasesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaseLeasesResponse::CopyFrom(const LeaseLeasesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.LeaseLeasesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaseLeasesResponse::IsInitialized() const {
  return true;
}

void LeaseLeasesResponse::Swap(LeaseLeasesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaseLeasesResponse::InternalSwap(LeaseLeasesResponse* other) {
  using std::swap;
  leases_.InternalSwap(&other->leases_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaseLeasesResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Member::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Member::kIDFieldNumber;
const int Member::kNameFieldNumber;
const int Member::kPeerURLsFieldNumber;
const int Member::kClientURLsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Member::Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMember();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.Member)
}
Member::Member(const Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peerurls_(from.peerurls_),
      clienturls_(from.clienturls_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.Member)
}

void Member::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Member::~Member() {
  // @@protoc_insertion_point(destructor:etcdserverpb.Member)
  SharedDtor();
}

void Member::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Member::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Member& Member::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMember();
  return *internal_default_instance();
}

Member* Member::New(::google::protobuf::Arena* arena) const {
  Member* n = new Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Member::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peerurls_.Clear();
  clienturls_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.Member.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string peerURLs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_peerurls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peerurls(this->peerurls_size() - 1).data(),
            static_cast<int>(this->peerurls(this->peerurls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.Member.peerURLs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string clientURLs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_clienturls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clienturls(this->clienturls_size() - 1).data(),
            static_cast<int>(this->clienturls(this->clienturls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.Member.clientURLs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.Member)
  return false;
#undef DO_
}

void Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.Member.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated string peerURLs = 3;
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peerurls(i).data(), static_cast<int>(this->peerurls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.Member.peerURLs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->peerurls(i), output);
  }

  // repeated string clientURLs = 4;
  for (int i = 0, n = this->clienturls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clienturls(i).data(), static_cast<int>(this->clienturls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.Member.clientURLs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->clienturls(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.Member)
}

::google::protobuf::uint8* Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.Member.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated string peerURLs = 3;
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peerurls(i).data(), static_cast<int>(this->peerurls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.Member.peerURLs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->peerurls(i), target);
  }

  // repeated string clientURLs = 4;
  for (int i = 0, n = this->clienturls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clienturls(i).data(), static_cast<int>(this->clienturls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.Member.clientURLs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->clienturls(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.Member)
  return target;
}

size_t Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.Member)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string peerURLs = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->peerurls_size());
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->peerurls(i));
  }

  // repeated string clientURLs = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->clienturls_size());
  for (int i = 0, n = this->clienturls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->clienturls(i));
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.Member)
    MergeFrom(*source);
  }
}

void Member::MergeFrom(const Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peerurls_.MergeFrom(from.peerurls_);
  clienturls_.MergeFrom(from.clienturls_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Member::CopyFrom(const Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Member::IsInitialized() const {
  return true;
}

void Member::Swap(Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Member::InternalSwap(Member* other) {
  using std::swap;
  peerurls_.InternalSwap(&other->peerurls_);
  clienturls_.InternalSwap(&other->clienturls_);
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Member::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberAddRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberAddRequest::kPeerURLsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberAddRequest::MemberAddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMemberAddRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MemberAddRequest)
}
MemberAddRequest::MemberAddRequest(const MemberAddRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peerurls_(from.peerurls_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MemberAddRequest)
}

void MemberAddRequest::SharedCtor() {
  _cached_size_ = 0;
}

MemberAddRequest::~MemberAddRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MemberAddRequest)
  SharedDtor();
}

void MemberAddRequest::SharedDtor() {
}

void MemberAddRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberAddRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberAddRequest& MemberAddRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMemberAddRequest();
  return *internal_default_instance();
}

MemberAddRequest* MemberAddRequest::New(::google::protobuf::Arena* arena) const {
  MemberAddRequest* n = new MemberAddRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MemberAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peerurls_.Clear();
  _internal_metadata_.Clear();
}

bool MemberAddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MemberAddRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string peerURLs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_peerurls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peerurls(this->peerurls_size() - 1).data(),
            static_cast<int>(this->peerurls(this->peerurls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.MemberAddRequest.peerURLs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MemberAddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MemberAddRequest)
  return false;
#undef DO_
}

void MemberAddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MemberAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string peerURLs = 1;
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peerurls(i).data(), static_cast<int>(this->peerurls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.MemberAddRequest.peerURLs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->peerurls(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MemberAddRequest)
}

::google::protobuf::uint8* MemberAddRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MemberAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string peerURLs = 1;
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peerurls(i).data(), static_cast<int>(this->peerurls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.MemberAddRequest.peerURLs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->peerurls(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MemberAddRequest)
  return target;
}

size_t MemberAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MemberAddRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string peerURLs = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->peerurls_size());
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->peerurls(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberAddRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MemberAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberAddRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberAddRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MemberAddRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MemberAddRequest)
    MergeFrom(*source);
  }
}

void MemberAddRequest::MergeFrom(const MemberAddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MemberAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peerurls_.MergeFrom(from.peerurls_);
}

void MemberAddRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MemberAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberAddRequest::CopyFrom(const MemberAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MemberAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberAddRequest::IsInitialized() const {
  return true;
}

void MemberAddRequest::Swap(MemberAddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberAddRequest::InternalSwap(MemberAddRequest* other) {
  using std::swap;
  peerurls_.InternalSwap(&other->peerurls_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberAddRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberAddResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_MemberAddResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
  ::etcdserverpb::_MemberAddResponse_default_instance_._instance.get_mutable()->member_ = const_cast< ::etcdserverpb::Member*>(
      ::etcdserverpb::Member::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberAddResponse::kHeaderFieldNumber;
const int MemberAddResponse::kMemberFieldNumber;
const int MemberAddResponse::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberAddResponse::MemberAddResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMemberAddResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MemberAddResponse)
}
MemberAddResponse::MemberAddResponse(const MemberAddResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_member()) {
    member_ = new ::etcdserverpb::Member(*from.member_);
  } else {
    member_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MemberAddResponse)
}

void MemberAddResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_) -
      reinterpret_cast<char*>(&header_)) + sizeof(member_));
  _cached_size_ = 0;
}

MemberAddResponse::~MemberAddResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MemberAddResponse)
  SharedDtor();
}

void MemberAddResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete member_;
}

void MemberAddResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberAddResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberAddResponse& MemberAddResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMemberAddResponse();
  return *internal_default_instance();
}

MemberAddResponse* MemberAddResponse::New(::google::protobuf::Arena* arena) const {
  MemberAddResponse* n = new MemberAddResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberAddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MemberAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
  _internal_metadata_.Clear();
}

bool MemberAddResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MemberAddResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.Member member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.Member members = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MemberAddResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MemberAddResponse)
  return false;
#undef DO_
}

void MemberAddResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MemberAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .etcdserverpb.Member member = 2;
  if (this->has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->member_, output);
  }

  // repeated .etcdserverpb.Member members = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->members(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MemberAddResponse)
}

::google::protobuf::uint8* MemberAddResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MemberAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .etcdserverpb.Member member = 2;
  if (this->has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->member_, deterministic, target);
  }

  // repeated .etcdserverpb.Member members = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->members(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MemberAddResponse)
  return target;
}

size_t MemberAddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MemberAddResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.Member members = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .etcdserverpb.Member member = 2;
  if (this->has_member()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->member_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberAddResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MemberAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberAddResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberAddResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MemberAddResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MemberAddResponse)
    MergeFrom(*source);
  }
}

void MemberAddResponse::MergeFrom(const MemberAddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MemberAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.has_member()) {
    mutable_member()->::etcdserverpb::Member::MergeFrom(from.member());
  }
}

void MemberAddResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MemberAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberAddResponse::CopyFrom(const MemberAddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MemberAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberAddResponse::IsInitialized() const {
  return true;
}

void MemberAddResponse::Swap(MemberAddResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberAddResponse::InternalSwap(MemberAddResponse* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  swap(header_, other->header_);
  swap(member_, other->member_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberAddResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberRemoveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberRemoveRequest::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberRemoveRequest::MemberRemoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMemberRemoveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MemberRemoveRequest)
}
MemberRemoveRequest::MemberRemoveRequest(const MemberRemoveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MemberRemoveRequest)
}

void MemberRemoveRequest::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

MemberRemoveRequest::~MemberRemoveRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MemberRemoveRequest)
  SharedDtor();
}

void MemberRemoveRequest::SharedDtor() {
}

void MemberRemoveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberRemoveRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberRemoveRequest& MemberRemoveRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMemberRemoveRequest();
  return *internal_default_instance();
}

MemberRemoveRequest* MemberRemoveRequest::New(::google::protobuf::Arena* arena) const {
  MemberRemoveRequest* n = new MemberRemoveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MemberRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MemberRemoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MemberRemoveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MemberRemoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MemberRemoveRequest)
  return false;
#undef DO_
}

void MemberRemoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MemberRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MemberRemoveRequest)
}

::google::protobuf::uint8* MemberRemoveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MemberRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MemberRemoveRequest)
  return target;
}

size_t MemberRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MemberRemoveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberRemoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MemberRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberRemoveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberRemoveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MemberRemoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MemberRemoveRequest)
    MergeFrom(*source);
  }
}

void MemberRemoveRequest::MergeFrom(const MemberRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MemberRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MemberRemoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MemberRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberRemoveRequest::CopyFrom(const MemberRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MemberRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberRemoveRequest::IsInitialized() const {
  return true;
}

void MemberRemoveRequest::Swap(MemberRemoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberRemoveRequest::InternalSwap(MemberRemoveRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberRemoveRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberRemoveResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_MemberRemoveResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberRemoveResponse::kHeaderFieldNumber;
const int MemberRemoveResponse::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberRemoveResponse::MemberRemoveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMemberRemoveResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MemberRemoveResponse)
}
MemberRemoveResponse::MemberRemoveResponse(const MemberRemoveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MemberRemoveResponse)
}

void MemberRemoveResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

MemberRemoveResponse::~MemberRemoveResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MemberRemoveResponse)
  SharedDtor();
}

void MemberRemoveResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void MemberRemoveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberRemoveResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberRemoveResponse& MemberRemoveResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMemberRemoveResponse();
  return *internal_default_instance();
}

MemberRemoveResponse* MemberRemoveResponse::New(::google::protobuf::Arena* arena) const {
  MemberRemoveResponse* n = new MemberRemoveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberRemoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MemberRemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool MemberRemoveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MemberRemoveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.Member members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MemberRemoveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MemberRemoveResponse)
  return false;
#undef DO_
}

void MemberRemoveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MemberRemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .etcdserverpb.Member members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->members(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MemberRemoveResponse)
}

::google::protobuf::uint8* MemberRemoveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MemberRemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .etcdserverpb.Member members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->members(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MemberRemoveResponse)
  return target;
}

size_t MemberRemoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MemberRemoveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.Member members = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberRemoveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MemberRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberRemoveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberRemoveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MemberRemoveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MemberRemoveResponse)
    MergeFrom(*source);
  }
}

void MemberRemoveResponse::MergeFrom(const MemberRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MemberRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void MemberRemoveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MemberRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberRemoveResponse::CopyFrom(const MemberRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MemberRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberRemoveResponse::IsInitialized() const {
  return true;
}

void MemberRemoveResponse::Swap(MemberRemoveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberRemoveResponse::InternalSwap(MemberRemoveResponse* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberRemoveResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberUpdateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberUpdateRequest::kIDFieldNumber;
const int MemberUpdateRequest::kPeerURLsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberUpdateRequest::MemberUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMemberUpdateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MemberUpdateRequest)
}
MemberUpdateRequest::MemberUpdateRequest(const MemberUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peerurls_(from.peerurls_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MemberUpdateRequest)
}

void MemberUpdateRequest::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

MemberUpdateRequest::~MemberUpdateRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MemberUpdateRequest)
  SharedDtor();
}

void MemberUpdateRequest::SharedDtor() {
}

void MemberUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberUpdateRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberUpdateRequest& MemberUpdateRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMemberUpdateRequest();
  return *internal_default_instance();
}

MemberUpdateRequest* MemberUpdateRequest::New(::google::protobuf::Arena* arena) const {
  MemberUpdateRequest* n = new MemberUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MemberUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peerurls_.Clear();
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MemberUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MemberUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string peerURLs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_peerurls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->peerurls(this->peerurls_size() - 1).data(),
            static_cast<int>(this->peerurls(this->peerurls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.MemberUpdateRequest.peerURLs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MemberUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MemberUpdateRequest)
  return false;
#undef DO_
}

void MemberUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MemberUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // repeated string peerURLs = 2;
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peerurls(i).data(), static_cast<int>(this->peerurls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.MemberUpdateRequest.peerURLs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->peerurls(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MemberUpdateRequest)
}

::google::protobuf::uint8* MemberUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MemberUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // repeated string peerURLs = 2;
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->peerurls(i).data(), static_cast<int>(this->peerurls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.MemberUpdateRequest.peerURLs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->peerurls(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MemberUpdateRequest)
  return target;
}

size_t MemberUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MemberUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string peerURLs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->peerurls_size());
  for (int i = 0, n = this->peerurls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->peerurls(i));
  }

  // uint64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MemberUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MemberUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MemberUpdateRequest)
    MergeFrom(*source);
  }
}

void MemberUpdateRequest::MergeFrom(const MemberUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MemberUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peerurls_.MergeFrom(from.peerurls_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MemberUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MemberUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberUpdateRequest::CopyFrom(const MemberUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MemberUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberUpdateRequest::IsInitialized() const {
  return true;
}

void MemberUpdateRequest::Swap(MemberUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberUpdateRequest::InternalSwap(MemberUpdateRequest* other) {
  using std::swap;
  peerurls_.InternalSwap(&other->peerurls_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberUpdateRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberUpdateResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_MemberUpdateResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberUpdateResponse::kHeaderFieldNumber;
const int MemberUpdateResponse::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberUpdateResponse::MemberUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMemberUpdateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MemberUpdateResponse)
}
MemberUpdateResponse::MemberUpdateResponse(const MemberUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MemberUpdateResponse)
}

void MemberUpdateResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

MemberUpdateResponse::~MemberUpdateResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MemberUpdateResponse)
  SharedDtor();
}

void MemberUpdateResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void MemberUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberUpdateResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberUpdateResponse& MemberUpdateResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMemberUpdateResponse();
  return *internal_default_instance();
}

MemberUpdateResponse* MemberUpdateResponse::New(::google::protobuf::Arena* arena) const {
  MemberUpdateResponse* n = new MemberUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MemberUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool MemberUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MemberUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.Member members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MemberUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MemberUpdateResponse)
  return false;
#undef DO_
}

void MemberUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MemberUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .etcdserverpb.Member members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->members(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MemberUpdateResponse)
}

::google::protobuf::uint8* MemberUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MemberUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .etcdserverpb.Member members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->members(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MemberUpdateResponse)
  return target;
}

size_t MemberUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MemberUpdateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.Member members = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MemberUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MemberUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MemberUpdateResponse)
    MergeFrom(*source);
  }
}

void MemberUpdateResponse::MergeFrom(const MemberUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MemberUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void MemberUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MemberUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberUpdateResponse::CopyFrom(const MemberUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MemberUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberUpdateResponse::IsInitialized() const {
  return true;
}

void MemberUpdateResponse::Swap(MemberUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberUpdateResponse::InternalSwap(MemberUpdateResponse* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberUpdateResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberListRequest::MemberListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMemberListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MemberListRequest)
}
MemberListRequest::MemberListRequest(const MemberListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MemberListRequest)
}

void MemberListRequest::SharedCtor() {
  _cached_size_ = 0;
}

MemberListRequest::~MemberListRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MemberListRequest)
  SharedDtor();
}

void MemberListRequest::SharedDtor() {
}

void MemberListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberListRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberListRequest& MemberListRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMemberListRequest();
  return *internal_default_instance();
}

MemberListRequest* MemberListRequest::New(::google::protobuf::Arena* arena) const {
  MemberListRequest* n = new MemberListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MemberListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MemberListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MemberListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MemberListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MemberListRequest)
  return false;
#undef DO_
}

void MemberListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MemberListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MemberListRequest)
}

::google::protobuf::uint8* MemberListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MemberListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MemberListRequest)
  return target;
}

size_t MemberListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MemberListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MemberListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MemberListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MemberListRequest)
    MergeFrom(*source);
  }
}

void MemberListRequest::MergeFrom(const MemberListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MemberListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MemberListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MemberListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberListRequest::CopyFrom(const MemberListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MemberListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberListRequest::IsInitialized() const {
  return true;
}

void MemberListRequest::Swap(MemberListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberListRequest::InternalSwap(MemberListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberListRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberListResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_MemberListResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberListResponse::kHeaderFieldNumber;
const int MemberListResponse::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberListResponse::MemberListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMemberListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MemberListResponse)
}
MemberListResponse::MemberListResponse(const MemberListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MemberListResponse)
}

void MemberListResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

MemberListResponse::~MemberListResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MemberListResponse)
  SharedDtor();
}

void MemberListResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void MemberListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberListResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberListResponse& MemberListResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMemberListResponse();
  return *internal_default_instance();
}

MemberListResponse* MemberListResponse::New(::google::protobuf::Arena* arena) const {
  MemberListResponse* n = new MemberListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemberListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MemberListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool MemberListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MemberListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.Member members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MemberListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MemberListResponse)
  return false;
#undef DO_
}

void MemberListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MemberListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .etcdserverpb.Member members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->members(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MemberListResponse)
}

::google::protobuf::uint8* MemberListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MemberListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .etcdserverpb.Member members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->members(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MemberListResponse)
  return target;
}

size_t MemberListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MemberListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.Member members = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MemberListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MemberListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MemberListResponse)
    MergeFrom(*source);
  }
}

void MemberListResponse::MergeFrom(const MemberListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MemberListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void MemberListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MemberListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberListResponse::CopyFrom(const MemberListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MemberListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberListResponse::IsInitialized() const {
  return true;
}

void MemberListResponse::Swap(MemberListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberListResponse::InternalSwap(MemberListResponse* other) {
  using std::swap;
  members_.InternalSwap(&other->members_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberListResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DefragmentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DefragmentRequest::DefragmentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsDefragmentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.DefragmentRequest)
}
DefragmentRequest::DefragmentRequest(const DefragmentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.DefragmentRequest)
}

void DefragmentRequest::SharedCtor() {
  _cached_size_ = 0;
}

DefragmentRequest::~DefragmentRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.DefragmentRequest)
  SharedDtor();
}

void DefragmentRequest::SharedDtor() {
}

void DefragmentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefragmentRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DefragmentRequest& DefragmentRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsDefragmentRequest();
  return *internal_default_instance();
}

DefragmentRequest* DefragmentRequest::New(::google::protobuf::Arena* arena) const {
  DefragmentRequest* n = new DefragmentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DefragmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.DefragmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DefragmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.DefragmentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.DefragmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.DefragmentRequest)
  return false;
#undef DO_
}

void DefragmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.DefragmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.DefragmentRequest)
}

::google::protobuf::uint8* DefragmentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.DefragmentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.DefragmentRequest)
  return target;
}

size_t DefragmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.DefragmentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefragmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.DefragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DefragmentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DefragmentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.DefragmentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.DefragmentRequest)
    MergeFrom(*source);
  }
}

void DefragmentRequest::MergeFrom(const DefragmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.DefragmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DefragmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.DefragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefragmentRequest::CopyFrom(const DefragmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.DefragmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefragmentRequest::IsInitialized() const {
  return true;
}

void DefragmentRequest::Swap(DefragmentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DefragmentRequest::InternalSwap(DefragmentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DefragmentRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DefragmentResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_DefragmentResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefragmentResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DefragmentResponse::DefragmentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsDefragmentResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.DefragmentResponse)
}
DefragmentResponse::DefragmentResponse(const DefragmentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.DefragmentResponse)
}

void DefragmentResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

DefragmentResponse::~DefragmentResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.DefragmentResponse)
  SharedDtor();
}

void DefragmentResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void DefragmentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DefragmentResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DefragmentResponse& DefragmentResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsDefragmentResponse();
  return *internal_default_instance();
}

DefragmentResponse* DefragmentResponse::New(::google::protobuf::Arena* arena) const {
  DefragmentResponse* n = new DefragmentResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DefragmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.DefragmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool DefragmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.DefragmentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.DefragmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.DefragmentResponse)
  return false;
#undef DO_
}

void DefragmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.DefragmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.DefragmentResponse)
}

::google::protobuf::uint8* DefragmentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.DefragmentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.DefragmentResponse)
  return target;
}

size_t DefragmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.DefragmentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DefragmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.DefragmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DefragmentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DefragmentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.DefragmentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.DefragmentResponse)
    MergeFrom(*source);
  }
}

void DefragmentResponse::MergeFrom(const DefragmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.DefragmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void DefragmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.DefragmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefragmentResponse::CopyFrom(const DefragmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.DefragmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefragmentResponse::IsInitialized() const {
  return true;
}

void DefragmentResponse::Swap(DefragmentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DefragmentResponse::InternalSwap(DefragmentResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DefragmentResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveLeaderRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveLeaderRequest::kTargetIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveLeaderRequest::MoveLeaderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMoveLeaderRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MoveLeaderRequest)
}
MoveLeaderRequest::MoveLeaderRequest(const MoveLeaderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetid_ = from.targetid_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MoveLeaderRequest)
}

void MoveLeaderRequest::SharedCtor() {
  targetid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

MoveLeaderRequest::~MoveLeaderRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MoveLeaderRequest)
  SharedDtor();
}

void MoveLeaderRequest::SharedDtor() {
}

void MoveLeaderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveLeaderRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveLeaderRequest& MoveLeaderRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMoveLeaderRequest();
  return *internal_default_instance();
}

MoveLeaderRequest* MoveLeaderRequest::New(::google::protobuf::Arena* arena) const {
  MoveLeaderRequest* n = new MoveLeaderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MoveLeaderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MoveLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MoveLeaderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MoveLeaderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 targetID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MoveLeaderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MoveLeaderRequest)
  return false;
#undef DO_
}

void MoveLeaderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MoveLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 targetID = 1;
  if (this->targetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->targetid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MoveLeaderRequest)
}

::google::protobuf::uint8* MoveLeaderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MoveLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 targetID = 1;
  if (this->targetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->targetid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MoveLeaderRequest)
  return target;
}

size_t MoveLeaderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MoveLeaderRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 targetID = 1;
  if (this->targetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveLeaderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MoveLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveLeaderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveLeaderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MoveLeaderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MoveLeaderRequest)
    MergeFrom(*source);
  }
}

void MoveLeaderRequest::MergeFrom(const MoveLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MoveLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetid() != 0) {
    set_targetid(from.targetid());
  }
}

void MoveLeaderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MoveLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveLeaderRequest::CopyFrom(const MoveLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MoveLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveLeaderRequest::IsInitialized() const {
  return true;
}

void MoveLeaderRequest::Swap(MoveLeaderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveLeaderRequest::InternalSwap(MoveLeaderRequest* other) {
  using std::swap;
  swap(targetid_, other->targetid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoveLeaderRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveLeaderResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_MoveLeaderResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveLeaderResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveLeaderResponse::MoveLeaderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsMoveLeaderResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.MoveLeaderResponse)
}
MoveLeaderResponse::MoveLeaderResponse(const MoveLeaderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.MoveLeaderResponse)
}

void MoveLeaderResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

MoveLeaderResponse::~MoveLeaderResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.MoveLeaderResponse)
  SharedDtor();
}

void MoveLeaderResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void MoveLeaderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveLeaderResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveLeaderResponse& MoveLeaderResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsMoveLeaderResponse();
  return *internal_default_instance();
}

MoveLeaderResponse* MoveLeaderResponse::New(::google::protobuf::Arena* arena) const {
  MoveLeaderResponse* n = new MoveLeaderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MoveLeaderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.MoveLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool MoveLeaderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.MoveLeaderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.MoveLeaderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.MoveLeaderResponse)
  return false;
#undef DO_
}

void MoveLeaderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.MoveLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.MoveLeaderResponse)
}

::google::protobuf::uint8* MoveLeaderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.MoveLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.MoveLeaderResponse)
  return target;
}

size_t MoveLeaderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.MoveLeaderResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveLeaderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.MoveLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveLeaderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveLeaderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.MoveLeaderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.MoveLeaderResponse)
    MergeFrom(*source);
  }
}

void MoveLeaderResponse::MergeFrom(const MoveLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.MoveLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void MoveLeaderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.MoveLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveLeaderResponse::CopyFrom(const MoveLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.MoveLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveLeaderResponse::IsInitialized() const {
  return true;
}

void MoveLeaderResponse::Swap(MoveLeaderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveLeaderResponse::InternalSwap(MoveLeaderResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoveLeaderResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlarmRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmRequest::kActionFieldNumber;
const int AlarmRequest::kMemberIDFieldNumber;
const int AlarmRequest::kAlarmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmRequest::AlarmRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAlarmRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AlarmRequest)
}
AlarmRequest::AlarmRequest(const AlarmRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&memberid_, &from.memberid_,
    static_cast<size_t>(reinterpret_cast<char*>(&alarm_) -
    reinterpret_cast<char*>(&memberid_)) + sizeof(alarm_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AlarmRequest)
}

void AlarmRequest::SharedCtor() {
  ::memset(&memberid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alarm_) -
      reinterpret_cast<char*>(&memberid_)) + sizeof(alarm_));
  _cached_size_ = 0;
}

AlarmRequest::~AlarmRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AlarmRequest)
  SharedDtor();
}

void AlarmRequest::SharedDtor() {
}

void AlarmRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlarmRequest& AlarmRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAlarmRequest();
  return *internal_default_instance();
}

AlarmRequest* AlarmRequest::New(::google::protobuf::Arena* arena) const {
  AlarmRequest* n = new AlarmRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlarmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&memberid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alarm_) -
      reinterpret_cast<char*>(&memberid_)) + sizeof(alarm_));
  _internal_metadata_.Clear();
}

bool AlarmRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AlarmRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.AlarmRequest.AlarmAction action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::etcdserverpb::AlarmRequest_AlarmAction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 memberID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memberid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.AlarmType alarm = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_alarm(static_cast< ::etcdserverpb::AlarmType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AlarmRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AlarmRequest)
  return false;
#undef DO_
}

void AlarmRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.AlarmRequest.AlarmAction action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // uint64 memberID = 2;
  if (this->memberid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->memberid(), output);
  }

  // .etcdserverpb.AlarmType alarm = 3;
  if (this->alarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->alarm(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AlarmRequest)
}

::google::protobuf::uint8* AlarmRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.AlarmRequest.AlarmAction action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // uint64 memberID = 2;
  if (this->memberid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->memberid(), target);
  }

  // .etcdserverpb.AlarmType alarm = 3;
  if (this->alarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->alarm(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AlarmRequest)
  return target;
}

size_t AlarmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AlarmRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 memberID = 2;
  if (this->memberid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->memberid());
  }

  // .etcdserverpb.AlarmRequest.AlarmAction action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // .etcdserverpb.AlarmType alarm = 3;
  if (this->alarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->alarm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AlarmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlarmRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AlarmRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AlarmRequest)
    MergeFrom(*source);
  }
}

void AlarmRequest::MergeFrom(const AlarmRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AlarmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.memberid() != 0) {
    set_memberid(from.memberid());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.alarm() != 0) {
    set_alarm(from.alarm());
  }
}

void AlarmRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AlarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmRequest::CopyFrom(const AlarmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AlarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRequest::IsInitialized() const {
  return true;
}

void AlarmRequest::Swap(AlarmRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmRequest::InternalSwap(AlarmRequest* other) {
  using std::swap;
  swap(memberid_, other->memberid_);
  swap(action_, other->action_);
  swap(alarm_, other->alarm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlarmRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlarmMember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmMember::kMemberIDFieldNumber;
const int AlarmMember::kAlarmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmMember::AlarmMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAlarmMember();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AlarmMember)
}
AlarmMember::AlarmMember(const AlarmMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&memberid_, &from.memberid_,
    static_cast<size_t>(reinterpret_cast<char*>(&alarm_) -
    reinterpret_cast<char*>(&memberid_)) + sizeof(alarm_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AlarmMember)
}

void AlarmMember::SharedCtor() {
  ::memset(&memberid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alarm_) -
      reinterpret_cast<char*>(&memberid_)) + sizeof(alarm_));
  _cached_size_ = 0;
}

AlarmMember::~AlarmMember() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AlarmMember)
  SharedDtor();
}

void AlarmMember::SharedDtor() {
}

void AlarmMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmMember::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlarmMember& AlarmMember::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAlarmMember();
  return *internal_default_instance();
}

AlarmMember* AlarmMember::New(::google::protobuf::Arena* arena) const {
  AlarmMember* n = new AlarmMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlarmMember::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AlarmMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&memberid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alarm_) -
      reinterpret_cast<char*>(&memberid_)) + sizeof(alarm_));
  _internal_metadata_.Clear();
}

bool AlarmMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AlarmMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 memberID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memberid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .etcdserverpb.AlarmType alarm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_alarm(static_cast< ::etcdserverpb::AlarmType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AlarmMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AlarmMember)
  return false;
#undef DO_
}

void AlarmMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AlarmMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 memberID = 1;
  if (this->memberid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->memberid(), output);
  }

  // .etcdserverpb.AlarmType alarm = 2;
  if (this->alarm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->alarm(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AlarmMember)
}

::google::protobuf::uint8* AlarmMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AlarmMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 memberID = 1;
  if (this->memberid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->memberid(), target);
  }

  // .etcdserverpb.AlarmType alarm = 2;
  if (this->alarm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->alarm(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AlarmMember)
  return target;
}

size_t AlarmMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AlarmMember)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 memberID = 1;
  if (this->memberid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->memberid());
  }

  // .etcdserverpb.AlarmType alarm = 2;
  if (this->alarm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->alarm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AlarmMember)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlarmMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AlarmMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AlarmMember)
    MergeFrom(*source);
  }
}

void AlarmMember::MergeFrom(const AlarmMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AlarmMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.memberid() != 0) {
    set_memberid(from.memberid());
  }
  if (from.alarm() != 0) {
    set_alarm(from.alarm());
  }
}

void AlarmMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AlarmMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmMember::CopyFrom(const AlarmMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AlarmMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmMember::IsInitialized() const {
  return true;
}

void AlarmMember::Swap(AlarmMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmMember::InternalSwap(AlarmMember* other) {
  using std::swap;
  swap(memberid_, other->memberid_);
  swap(alarm_, other->alarm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlarmMember::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AlarmResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AlarmResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmResponse::kHeaderFieldNumber;
const int AlarmResponse::kAlarmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmResponse::AlarmResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAlarmResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AlarmResponse)
}
AlarmResponse::AlarmResponse(const AlarmResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      alarms_(from.alarms_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AlarmResponse)
}

void AlarmResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AlarmResponse::~AlarmResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AlarmResponse)
  SharedDtor();
}

void AlarmResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AlarmResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlarmResponse& AlarmResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAlarmResponse();
  return *internal_default_instance();
}

AlarmResponse* AlarmResponse::New(::google::protobuf::Arena* arena) const {
  AlarmResponse* n = new AlarmResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlarmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AlarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alarms_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AlarmResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AlarmResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .etcdserverpb.AlarmMember alarms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_alarms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AlarmResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AlarmResponse)
  return false;
#undef DO_
}

void AlarmResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AlarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .etcdserverpb.AlarmMember alarms = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alarms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->alarms(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AlarmResponse)
}

::google::protobuf::uint8* AlarmResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AlarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .etcdserverpb.AlarmMember alarms = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alarms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->alarms(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AlarmResponse)
  return target;
}

size_t AlarmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AlarmResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .etcdserverpb.AlarmMember alarms = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->alarms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alarms(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AlarmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlarmResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AlarmResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AlarmResponse)
    MergeFrom(*source);
  }
}

void AlarmResponse::MergeFrom(const AlarmResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AlarmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alarms_.MergeFrom(from.alarms_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AlarmResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AlarmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmResponse::CopyFrom(const AlarmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AlarmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmResponse::IsInitialized() const {
  return true;
}

void AlarmResponse::Swap(AlarmResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmResponse::InternalSwap(AlarmResponse* other) {
  using std::swap;
  alarms_.InternalSwap(&other->alarms_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlarmResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusRequest::StatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.StatusRequest)
}
StatusRequest::StatusRequest(const StatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.StatusRequest)
}

void StatusRequest::SharedCtor() {
  _cached_size_ = 0;
}

StatusRequest::~StatusRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.StatusRequest)
  SharedDtor();
}

void StatusRequest::SharedDtor() {
}

void StatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusRequest& StatusRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsStatusRequest();
  return *internal_default_instance();
}

StatusRequest* StatusRequest::New(::google::protobuf::Arena* arena) const {
  StatusRequest* n = new StatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.StatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.StatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.StatusRequest)
  return false;
#undef DO_
}

void StatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.StatusRequest)
}

::google::protobuf::uint8* StatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.StatusRequest)
  return target;
}

size_t StatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.StatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.StatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.StatusRequest)
    MergeFrom(*source);
  }
}

void StatusRequest::MergeFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusRequest::CopyFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusRequest::IsInitialized() const {
  return true;
}

void StatusRequest::Swap(StatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusRequest::InternalSwap(StatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatusResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_StatusResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusResponse::kHeaderFieldNumber;
const int StatusResponse::kVersionFieldNumber;
const int StatusResponse::kDbSizeFieldNumber;
const int StatusResponse::kLeaderFieldNumber;
const int StatusResponse::kRaftIndexFieldNumber;
const int StatusResponse::kRaftTermFieldNumber;
const int StatusResponse::kRaftAppliedIndexFieldNumber;
const int StatusResponse::kErrorsFieldNumber;
const int StatusResponse::kDbSizeInUseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusResponse::StatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsStatusResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.StatusResponse)
}
StatusResponse::StatusResponse(const StatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&dbsize_, &from.dbsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&dbsizeinuse_) -
    reinterpret_cast<char*>(&dbsize_)) + sizeof(dbsizeinuse_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.StatusResponse)
}

void StatusResponse::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dbsizeinuse_) -
      reinterpret_cast<char*>(&header_)) + sizeof(dbsizeinuse_));
  _cached_size_ = 0;
}

StatusResponse::~StatusResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.StatusResponse)
  SharedDtor();
}

void StatusResponse::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void StatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusResponse& StatusResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsStatusResponse();
  return *internal_default_instance();
}

StatusResponse* StatusResponse::New(::google::protobuf::Arena* arena) const {
  StatusResponse* n = new StatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&dbsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dbsizeinuse_) -
      reinterpret_cast<char*>(&dbsize_)) + sizeof(dbsizeinuse_));
  _internal_metadata_.Clear();
}

bool StatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.StatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.StatusResponse.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 dbSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dbsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 leader = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &leader_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 raftIndex = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &raftindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 raftTerm = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &raftterm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 raftAppliedIndex = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &raftappliedindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string errors = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_errors()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errors(this->errors_size() - 1).data(),
            static_cast<int>(this->errors(this->errors_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.StatusResponse.errors"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 dbSizeInUse = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &dbsizeinuse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.StatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.StatusResponse)
  return false;
#undef DO_
}

void StatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.StatusResponse.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // int64 dbSize = 3;
  if (this->dbsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->dbsize(), output);
  }

  // uint64 leader = 4;
  if (this->leader() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->leader(), output);
  }

  // uint64 raftIndex = 5;
  if (this->raftindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->raftindex(), output);
  }

  // uint64 raftTerm = 6;
  if (this->raftterm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->raftterm(), output);
  }

  // uint64 raftAppliedIndex = 7;
  if (this->raftappliedindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->raftappliedindex(), output);
  }

  // repeated string errors = 8;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errors(i).data(), static_cast<int>(this->errors(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.StatusResponse.errors");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->errors(i), output);
  }

  // int64 dbSizeInUse = 9;
  if (this->dbsizeinuse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->dbsizeinuse(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.StatusResponse)
}

::google::protobuf::uint8* StatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.StatusResponse.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // int64 dbSize = 3;
  if (this->dbsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->dbsize(), target);
  }

  // uint64 leader = 4;
  if (this->leader() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->leader(), target);
  }

  // uint64 raftIndex = 5;
  if (this->raftindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->raftindex(), target);
  }

  // uint64 raftTerm = 6;
  if (this->raftterm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->raftterm(), target);
  }

  // uint64 raftAppliedIndex = 7;
  if (this->raftappliedindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->raftappliedindex(), target);
  }

  // repeated string errors = 8;
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errors(i).data(), static_cast<int>(this->errors(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.StatusResponse.errors");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->errors(i), target);
  }

  // int64 dbSizeInUse = 9;
  if (this->dbsizeinuse() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->dbsizeinuse(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.StatusResponse)
  return target;
}

size_t StatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.StatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string errors = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->errors_size());
  for (int i = 0, n = this->errors_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->errors(i));
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int64 dbSize = 3;
  if (this->dbsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dbsize());
  }

  // uint64 leader = 4;
  if (this->leader() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->leader());
  }

  // uint64 raftIndex = 5;
  if (this->raftindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->raftindex());
  }

  // uint64 raftTerm = 6;
  if (this->raftterm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->raftterm());
  }

  // uint64 raftAppliedIndex = 7;
  if (this->raftappliedindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->raftappliedindex());
  }

  // int64 dbSizeInUse = 9;
  if (this->dbsizeinuse() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->dbsizeinuse());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.StatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.StatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.StatusResponse)
    MergeFrom(*source);
  }
}

void StatusResponse::MergeFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.StatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
  if (from.dbsize() != 0) {
    set_dbsize(from.dbsize());
  }
  if (from.leader() != 0) {
    set_leader(from.leader());
  }
  if (from.raftindex() != 0) {
    set_raftindex(from.raftindex());
  }
  if (from.raftterm() != 0) {
    set_raftterm(from.raftterm());
  }
  if (from.raftappliedindex() != 0) {
    set_raftappliedindex(from.raftappliedindex());
  }
  if (from.dbsizeinuse() != 0) {
    set_dbsizeinuse(from.dbsizeinuse());
  }
}

void StatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusResponse::CopyFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusResponse::IsInitialized() const {
  return true;
}

void StatusResponse::Swap(StatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusResponse::InternalSwap(StatusResponse* other) {
  using std::swap;
  errors_.InternalSwap(&other->errors_);
  version_.Swap(&other->version_);
  swap(header_, other->header_);
  swap(dbsize_, other->dbsize_);
  swap(leader_, other->leader_);
  swap(raftindex_, other->raftindex_);
  swap(raftterm_, other->raftterm_);
  swap(raftappliedindex_, other->raftappliedindex_);
  swap(dbsizeinuse_, other->dbsizeinuse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthEnableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthEnableRequest::AuthEnableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthEnableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthEnableRequest)
}
AuthEnableRequest::AuthEnableRequest(const AuthEnableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthEnableRequest)
}

void AuthEnableRequest::SharedCtor() {
  _cached_size_ = 0;
}

AuthEnableRequest::~AuthEnableRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthEnableRequest)
  SharedDtor();
}

void AuthEnableRequest::SharedDtor() {
}

void AuthEnableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthEnableRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthEnableRequest& AuthEnableRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthEnableRequest();
  return *internal_default_instance();
}

AuthEnableRequest* AuthEnableRequest::New(::google::protobuf::Arena* arena) const {
  AuthEnableRequest* n = new AuthEnableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthEnableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthEnableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AuthEnableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthEnableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthEnableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthEnableRequest)
  return false;
#undef DO_
}

void AuthEnableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthEnableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthEnableRequest)
}

::google::protobuf::uint8* AuthEnableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthEnableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthEnableRequest)
  return target;
}

size_t AuthEnableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthEnableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthEnableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthEnableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthEnableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthEnableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthEnableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthEnableRequest)
    MergeFrom(*source);
  }
}

void AuthEnableRequest::MergeFrom(const AuthEnableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthEnableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AuthEnableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthEnableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthEnableRequest::CopyFrom(const AuthEnableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthEnableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthEnableRequest::IsInitialized() const {
  return true;
}

void AuthEnableRequest::Swap(AuthEnableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthEnableRequest::InternalSwap(AuthEnableRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthEnableRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthDisableRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthDisableRequest::AuthDisableRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthDisableRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthDisableRequest)
}
AuthDisableRequest::AuthDisableRequest(const AuthDisableRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthDisableRequest)
}

void AuthDisableRequest::SharedCtor() {
  _cached_size_ = 0;
}

AuthDisableRequest::~AuthDisableRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthDisableRequest)
  SharedDtor();
}

void AuthDisableRequest::SharedDtor() {
}

void AuthDisableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthDisableRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthDisableRequest& AuthDisableRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthDisableRequest();
  return *internal_default_instance();
}

AuthDisableRequest* AuthDisableRequest::New(::google::protobuf::Arena* arena) const {
  AuthDisableRequest* n = new AuthDisableRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthDisableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthDisableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AuthDisableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthDisableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthDisableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthDisableRequest)
  return false;
#undef DO_
}

void AuthDisableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthDisableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthDisableRequest)
}

::google::protobuf::uint8* AuthDisableRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthDisableRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthDisableRequest)
  return target;
}

size_t AuthDisableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthDisableRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthDisableRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthDisableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthDisableRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthDisableRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthDisableRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthDisableRequest)
    MergeFrom(*source);
  }
}

void AuthDisableRequest::MergeFrom(const AuthDisableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthDisableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AuthDisableRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthDisableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthDisableRequest::CopyFrom(const AuthDisableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthDisableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthDisableRequest::IsInitialized() const {
  return true;
}

void AuthDisableRequest::Swap(AuthDisableRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthDisableRequest::InternalSwap(AuthDisableRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthDisableRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateRequest::kNameFieldNumber;
const int AuthenticateRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateRequest::AuthenticateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthenticateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthenticateRequest)
}
AuthenticateRequest::AuthenticateRequest(const AuthenticateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthenticateRequest)
}

void AuthenticateRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthenticateRequest::~AuthenticateRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthenticateRequest)
  SharedDtor();
}

void AuthenticateRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateRequest& AuthenticateRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthenticateRequest();
  return *internal_default_instance();
}

AuthenticateRequest* AuthenticateRequest::New(::google::protobuf::Arena* arena) const {
  AuthenticateRequest* n = new AuthenticateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthenticateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthenticateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthenticateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthenticateRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthenticateRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthenticateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthenticateRequest)
  return false;
#undef DO_
}

void AuthenticateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthenticateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthenticateRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthenticateRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthenticateRequest)
}

::google::protobuf::uint8* AuthenticateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthenticateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthenticateRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthenticateRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthenticateRequest)
  return target;
}

size_t AuthenticateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthenticateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthenticateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthenticateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthenticateRequest)
    MergeFrom(*source);
  }
}

void AuthenticateRequest::MergeFrom(const AuthenticateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthenticateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void AuthenticateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthenticateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateRequest::CopyFrom(const AuthenticateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthenticateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateRequest::IsInitialized() const {
  return true;
}

void AuthenticateRequest::Swap(AuthenticateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateRequest::InternalSwap(AuthenticateRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserAddRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserAddRequest::kNameFieldNumber;
const int AuthUserAddRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserAddRequest::AuthUserAddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserAddRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserAddRequest)
}
AuthUserAddRequest::AuthUserAddRequest(const AuthUserAddRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserAddRequest)
}

void AuthUserAddRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthUserAddRequest::~AuthUserAddRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserAddRequest)
  SharedDtor();
}

void AuthUserAddRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthUserAddRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserAddRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserAddRequest& AuthUserAddRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserAddRequest();
  return *internal_default_instance();
}

AuthUserAddRequest* AuthUserAddRequest::New(::google::protobuf::Arena* arena) const {
  AuthUserAddRequest* n = new AuthUserAddRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthUserAddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserAddRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserAddRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserAddRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserAddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserAddRequest)
  return false;
#undef DO_
}

void AuthUserAddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserAddRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserAddRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserAddRequest)
}

::google::protobuf::uint8* AuthUserAddRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserAddRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserAddRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserAddRequest)
  return target;
}

size_t AuthUserAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserAddRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserAddRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserAddRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserAddRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserAddRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserAddRequest)
    MergeFrom(*source);
  }
}

void AuthUserAddRequest::MergeFrom(const AuthUserAddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void AuthUserAddRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserAddRequest::CopyFrom(const AuthUserAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserAddRequest::IsInitialized() const {
  return true;
}

void AuthUserAddRequest::Swap(AuthUserAddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserAddRequest::InternalSwap(AuthUserAddRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserAddRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserGetRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserGetRequest::AuthUserGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserGetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserGetRequest)
}
AuthUserGetRequest::AuthUserGetRequest(const AuthUserGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserGetRequest)
}

void AuthUserGetRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthUserGetRequest::~AuthUserGetRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserGetRequest)
  SharedDtor();
}

void AuthUserGetRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthUserGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserGetRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserGetRequest& AuthUserGetRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserGetRequest();
  return *internal_default_instance();
}

AuthUserGetRequest* AuthUserGetRequest::New(::google::protobuf::Arena* arena) const {
  AuthUserGetRequest* n = new AuthUserGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthUserGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserGetRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserGetRequest)
  return false;
#undef DO_
}

void AuthUserGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserGetRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserGetRequest)
}

::google::protobuf::uint8* AuthUserGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserGetRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserGetRequest)
  return target;
}

size_t AuthUserGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserGetRequest)
    MergeFrom(*source);
  }
}

void AuthUserGetRequest::MergeFrom(const AuthUserGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void AuthUserGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserGetRequest::CopyFrom(const AuthUserGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserGetRequest::IsInitialized() const {
  return true;
}

void AuthUserGetRequest::Swap(AuthUserGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserGetRequest::InternalSwap(AuthUserGetRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserGetRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserDeleteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserDeleteRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserDeleteRequest::AuthUserDeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserDeleteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserDeleteRequest)
}
AuthUserDeleteRequest::AuthUserDeleteRequest(const AuthUserDeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserDeleteRequest)
}

void AuthUserDeleteRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthUserDeleteRequest::~AuthUserDeleteRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserDeleteRequest)
  SharedDtor();
}

void AuthUserDeleteRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthUserDeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserDeleteRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserDeleteRequest& AuthUserDeleteRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserDeleteRequest();
  return *internal_default_instance();
}

AuthUserDeleteRequest* AuthUserDeleteRequest::New(::google::protobuf::Arena* arena) const {
  AuthUserDeleteRequest* n = new AuthUserDeleteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthUserDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserDeleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserDeleteRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserDeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserDeleteRequest)
  return false;
#undef DO_
}

void AuthUserDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserDeleteRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserDeleteRequest)
}

::google::protobuf::uint8* AuthUserDeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserDeleteRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserDeleteRequest)
  return target;
}

size_t AuthUserDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserDeleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserDeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserDeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserDeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserDeleteRequest)
    MergeFrom(*source);
  }
}

void AuthUserDeleteRequest::MergeFrom(const AuthUserDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void AuthUserDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserDeleteRequest::CopyFrom(const AuthUserDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserDeleteRequest::IsInitialized() const {
  return true;
}

void AuthUserDeleteRequest::Swap(AuthUserDeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserDeleteRequest::InternalSwap(AuthUserDeleteRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserDeleteRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserChangePasswordRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserChangePasswordRequest::kNameFieldNumber;
const int AuthUserChangePasswordRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserChangePasswordRequest::AuthUserChangePasswordRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserChangePasswordRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserChangePasswordRequest)
}
AuthUserChangePasswordRequest::AuthUserChangePasswordRequest(const AuthUserChangePasswordRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserChangePasswordRequest)
}

void AuthUserChangePasswordRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthUserChangePasswordRequest::~AuthUserChangePasswordRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserChangePasswordRequest)
  SharedDtor();
}

void AuthUserChangePasswordRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthUserChangePasswordRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserChangePasswordRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserChangePasswordRequest& AuthUserChangePasswordRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserChangePasswordRequest();
  return *internal_default_instance();
}

AuthUserChangePasswordRequest* AuthUserChangePasswordRequest::New(::google::protobuf::Arena* arena) const {
  AuthUserChangePasswordRequest* n = new AuthUserChangePasswordRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserChangePasswordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserChangePasswordRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthUserChangePasswordRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserChangePasswordRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserChangePasswordRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserChangePasswordRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserChangePasswordRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserChangePasswordRequest)
  return false;
#undef DO_
}

void AuthUserChangePasswordRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserChangePasswordRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserChangePasswordRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserChangePasswordRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserChangePasswordRequest)
}

::google::protobuf::uint8* AuthUserChangePasswordRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserChangePasswordRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserChangePasswordRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserChangePasswordRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserChangePasswordRequest)
  return target;
}

size_t AuthUserChangePasswordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserChangePasswordRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserChangePasswordRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserChangePasswordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserChangePasswordRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserChangePasswordRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserChangePasswordRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserChangePasswordRequest)
    MergeFrom(*source);
  }
}

void AuthUserChangePasswordRequest::MergeFrom(const AuthUserChangePasswordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserChangePasswordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void AuthUserChangePasswordRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserChangePasswordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserChangePasswordRequest::CopyFrom(const AuthUserChangePasswordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserChangePasswordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserChangePasswordRequest::IsInitialized() const {
  return true;
}

void AuthUserChangePasswordRequest::Swap(AuthUserChangePasswordRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserChangePasswordRequest::InternalSwap(AuthUserChangePasswordRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserChangePasswordRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserGrantRoleRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserGrantRoleRequest::kUserFieldNumber;
const int AuthUserGrantRoleRequest::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserGrantRoleRequest::AuthUserGrantRoleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserGrantRoleRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserGrantRoleRequest)
}
AuthUserGrantRoleRequest::AuthUserGrantRoleRequest(const AuthUserGrantRoleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserGrantRoleRequest)
}

void AuthUserGrantRoleRequest::SharedCtor() {
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthUserGrantRoleRequest::~AuthUserGrantRoleRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserGrantRoleRequest)
  SharedDtor();
}

void AuthUserGrantRoleRequest::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthUserGrantRoleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserGrantRoleRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserGrantRoleRequest& AuthUserGrantRoleRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserGrantRoleRequest();
  return *internal_default_instance();
}

AuthUserGrantRoleRequest* AuthUserGrantRoleRequest::New(::google::protobuf::Arena* arena) const {
  AuthUserGrantRoleRequest* n = new AuthUserGrantRoleRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserGrantRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserGrantRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthUserGrantRoleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserGrantRoleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserGrantRoleRequest.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserGrantRoleRequest.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserGrantRoleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserGrantRoleRequest)
  return false;
#undef DO_
}

void AuthUserGrantRoleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserGrantRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserGrantRoleRequest.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  // string role = 2;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserGrantRoleRequest.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->role(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserGrantRoleRequest)
}

::google::protobuf::uint8* AuthUserGrantRoleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserGrantRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserGrantRoleRequest.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  // string role = 2;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserGrantRoleRequest.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserGrantRoleRequest)
  return target;
}

size_t AuthUserGrantRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserGrantRoleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string role = 2;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserGrantRoleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserGrantRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserGrantRoleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserGrantRoleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserGrantRoleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserGrantRoleRequest)
    MergeFrom(*source);
  }
}

void AuthUserGrantRoleRequest::MergeFrom(const AuthUserGrantRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserGrantRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
}

void AuthUserGrantRoleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserGrantRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserGrantRoleRequest::CopyFrom(const AuthUserGrantRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserGrantRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserGrantRoleRequest::IsInitialized() const {
  return true;
}

void AuthUserGrantRoleRequest::Swap(AuthUserGrantRoleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserGrantRoleRequest::InternalSwap(AuthUserGrantRoleRequest* other) {
  using std::swap;
  user_.Swap(&other->user_);
  role_.Swap(&other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserGrantRoleRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserRevokeRoleRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserRevokeRoleRequest::kNameFieldNumber;
const int AuthUserRevokeRoleRequest::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserRevokeRoleRequest::AuthUserRevokeRoleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserRevokeRoleRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserRevokeRoleRequest)
}
AuthUserRevokeRoleRequest::AuthUserRevokeRoleRequest(const AuthUserRevokeRoleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserRevokeRoleRequest)
}

void AuthUserRevokeRoleRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthUserRevokeRoleRequest::~AuthUserRevokeRoleRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserRevokeRoleRequest)
  SharedDtor();
}

void AuthUserRevokeRoleRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthUserRevokeRoleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserRevokeRoleRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserRevokeRoleRequest& AuthUserRevokeRoleRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserRevokeRoleRequest();
  return *internal_default_instance();
}

AuthUserRevokeRoleRequest* AuthUserRevokeRoleRequest::New(::google::protobuf::Arena* arena) const {
  AuthUserRevokeRoleRequest* n = new AuthUserRevokeRoleRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserRevokeRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserRevokeRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthUserRevokeRoleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserRevokeRoleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserRevokeRoleRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserRevokeRoleRequest.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserRevokeRoleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserRevokeRoleRequest)
  return false;
#undef DO_
}

void AuthUserRevokeRoleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserRevokeRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserRevokeRoleRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string role = 2;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserRevokeRoleRequest.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->role(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserRevokeRoleRequest)
}

::google::protobuf::uint8* AuthUserRevokeRoleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserRevokeRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserRevokeRoleRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string role = 2;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserRevokeRoleRequest.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserRevokeRoleRequest)
  return target;
}

size_t AuthUserRevokeRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserRevokeRoleRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string role = 2;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserRevokeRoleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserRevokeRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserRevokeRoleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserRevokeRoleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserRevokeRoleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserRevokeRoleRequest)
    MergeFrom(*source);
  }
}

void AuthUserRevokeRoleRequest::MergeFrom(const AuthUserRevokeRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserRevokeRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
}

void AuthUserRevokeRoleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserRevokeRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserRevokeRoleRequest::CopyFrom(const AuthUserRevokeRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserRevokeRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserRevokeRoleRequest::IsInitialized() const {
  return true;
}

void AuthUserRevokeRoleRequest::Swap(AuthUserRevokeRoleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserRevokeRoleRequest::InternalSwap(AuthUserRevokeRoleRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  role_.Swap(&other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserRevokeRoleRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleAddRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleAddRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleAddRequest::AuthRoleAddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleAddRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleAddRequest)
}
AuthRoleAddRequest::AuthRoleAddRequest(const AuthRoleAddRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleAddRequest)
}

void AuthRoleAddRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthRoleAddRequest::~AuthRoleAddRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleAddRequest)
  SharedDtor();
}

void AuthRoleAddRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthRoleAddRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleAddRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleAddRequest& AuthRoleAddRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleAddRequest();
  return *internal_default_instance();
}

AuthRoleAddRequest* AuthRoleAddRequest::New(::google::protobuf::Arena* arena) const {
  AuthRoleAddRequest* n = new AuthRoleAddRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthRoleAddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleAddRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthRoleAddRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleAddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleAddRequest)
  return false;
#undef DO_
}

void AuthRoleAddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleAddRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleAddRequest)
}

::google::protobuf::uint8* AuthRoleAddRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleAddRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleAddRequest)
  return target;
}

size_t AuthRoleAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleAddRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleAddRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleAddRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleAddRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleAddRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleAddRequest)
    MergeFrom(*source);
  }
}

void AuthRoleAddRequest::MergeFrom(const AuthRoleAddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void AuthRoleAddRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleAddRequest::CopyFrom(const AuthRoleAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleAddRequest::IsInitialized() const {
  return true;
}

void AuthRoleAddRequest::Swap(AuthRoleAddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleAddRequest::InternalSwap(AuthRoleAddRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleAddRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleGetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleGetRequest::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleGetRequest::AuthRoleGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleGetRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleGetRequest)
}
AuthRoleGetRequest::AuthRoleGetRequest(const AuthRoleGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleGetRequest)
}

void AuthRoleGetRequest::SharedCtor() {
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthRoleGetRequest::~AuthRoleGetRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleGetRequest)
  SharedDtor();
}

void AuthRoleGetRequest::SharedDtor() {
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthRoleGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleGetRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleGetRequest& AuthRoleGetRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleGetRequest();
  return *internal_default_instance();
}

AuthRoleGetRequest* AuthRoleGetRequest::New(::google::protobuf::Arena* arena) const {
  AuthRoleGetRequest* n = new AuthRoleGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthRoleGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthRoleGetRequest.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleGetRequest)
  return false;
#undef DO_
}

void AuthRoleGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleGetRequest.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->role(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleGetRequest)
}

::google::protobuf::uint8* AuthRoleGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleGetRequest.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleGetRequest)
  return target;
}

size_t AuthRoleGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string role = 1;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleGetRequest)
    MergeFrom(*source);
  }
}

void AuthRoleGetRequest::MergeFrom(const AuthRoleGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
}

void AuthRoleGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleGetRequest::CopyFrom(const AuthRoleGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleGetRequest::IsInitialized() const {
  return true;
}

void AuthRoleGetRequest::Swap(AuthRoleGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleGetRequest::InternalSwap(AuthRoleGetRequest* other) {
  using std::swap;
  role_.Swap(&other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleGetRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserListRequest::AuthUserListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserListRequest)
}
AuthUserListRequest::AuthUserListRequest(const AuthUserListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserListRequest)
}

void AuthUserListRequest::SharedCtor() {
  _cached_size_ = 0;
}

AuthUserListRequest::~AuthUserListRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserListRequest)
  SharedDtor();
}

void AuthUserListRequest::SharedDtor() {
}

void AuthUserListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserListRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserListRequest& AuthUserListRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserListRequest();
  return *internal_default_instance();
}

AuthUserListRequest* AuthUserListRequest::New(::google::protobuf::Arena* arena) const {
  AuthUserListRequest* n = new AuthUserListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AuthUserListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserListRequest)
  return false;
#undef DO_
}

void AuthUserListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserListRequest)
}

::google::protobuf::uint8* AuthUserListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserListRequest)
  return target;
}

size_t AuthUserListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserListRequest)
    MergeFrom(*source);
  }
}

void AuthUserListRequest::MergeFrom(const AuthUserListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AuthUserListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserListRequest::CopyFrom(const AuthUserListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserListRequest::IsInitialized() const {
  return true;
}

void AuthUserListRequest::Swap(AuthUserListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserListRequest::InternalSwap(AuthUserListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserListRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleListRequest::AuthRoleListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleListRequest)
}
AuthRoleListRequest::AuthRoleListRequest(const AuthRoleListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleListRequest)
}

void AuthRoleListRequest::SharedCtor() {
  _cached_size_ = 0;
}

AuthRoleListRequest::~AuthRoleListRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleListRequest)
  SharedDtor();
}

void AuthRoleListRequest::SharedDtor() {
}

void AuthRoleListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleListRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleListRequest& AuthRoleListRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleListRequest();
  return *internal_default_instance();
}

AuthRoleListRequest* AuthRoleListRequest::New(::google::protobuf::Arena* arena) const {
  AuthRoleListRequest* n = new AuthRoleListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AuthRoleListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleListRequest)
  return false;
#undef DO_
}

void AuthRoleListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleListRequest)
}

::google::protobuf::uint8* AuthRoleListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleListRequest)
  return target;
}

size_t AuthRoleListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleListRequest)
    MergeFrom(*source);
  }
}

void AuthRoleListRequest::MergeFrom(const AuthRoleListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AuthRoleListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleListRequest::CopyFrom(const AuthRoleListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleListRequest::IsInitialized() const {
  return true;
}

void AuthRoleListRequest::Swap(AuthRoleListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleListRequest::InternalSwap(AuthRoleListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleListRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleDeleteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleDeleteRequest::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleDeleteRequest::AuthRoleDeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleDeleteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleDeleteRequest)
}
AuthRoleDeleteRequest::AuthRoleDeleteRequest(const AuthRoleDeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleDeleteRequest)
}

void AuthRoleDeleteRequest::SharedCtor() {
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthRoleDeleteRequest::~AuthRoleDeleteRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleDeleteRequest)
  SharedDtor();
}

void AuthRoleDeleteRequest::SharedDtor() {
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthRoleDeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleDeleteRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleDeleteRequest& AuthRoleDeleteRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleDeleteRequest();
  return *internal_default_instance();
}

AuthRoleDeleteRequest* AuthRoleDeleteRequest::New(::google::protobuf::Arena* arena) const {
  AuthRoleDeleteRequest* n = new AuthRoleDeleteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthRoleDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleDeleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthRoleDeleteRequest.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleDeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleDeleteRequest)
  return false;
#undef DO_
}

void AuthRoleDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleDeleteRequest.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->role(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleDeleteRequest)
}

::google::protobuf::uint8* AuthRoleDeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleDeleteRequest.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleDeleteRequest)
  return target;
}

size_t AuthRoleDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleDeleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string role = 1;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleDeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleDeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleDeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleDeleteRequest)
    MergeFrom(*source);
  }
}

void AuthRoleDeleteRequest::MergeFrom(const AuthRoleDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
}

void AuthRoleDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleDeleteRequest::CopyFrom(const AuthRoleDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleDeleteRequest::IsInitialized() const {
  return true;
}

void AuthRoleDeleteRequest::Swap(AuthRoleDeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleDeleteRequest::InternalSwap(AuthRoleDeleteRequest* other) {
  using std::swap;
  role_.Swap(&other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleDeleteRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleGrantPermissionRequest::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthRoleGrantPermissionRequest_default_instance_._instance.get_mutable()->perm_ = const_cast< ::authpb::Permission*>(
      ::authpb::Permission::internal_default_instance());
}
void AuthRoleGrantPermissionRequest::clear_perm() {
  if (GetArenaNoVirtual() == NULL && perm_ != NULL) {
    delete perm_;
  }
  perm_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleGrantPermissionRequest::kNameFieldNumber;
const int AuthRoleGrantPermissionRequest::kPermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleGrantPermissionRequest::AuthRoleGrantPermissionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleGrantPermissionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleGrantPermissionRequest)
}
AuthRoleGrantPermissionRequest::AuthRoleGrantPermissionRequest(const AuthRoleGrantPermissionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_perm()) {
    perm_ = new ::authpb::Permission(*from.perm_);
  } else {
    perm_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleGrantPermissionRequest)
}

void AuthRoleGrantPermissionRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perm_ = NULL;
  _cached_size_ = 0;
}

AuthRoleGrantPermissionRequest::~AuthRoleGrantPermissionRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleGrantPermissionRequest)
  SharedDtor();
}

void AuthRoleGrantPermissionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete perm_;
}

void AuthRoleGrantPermissionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleGrantPermissionRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleGrantPermissionRequest& AuthRoleGrantPermissionRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleGrantPermissionRequest();
  return *internal_default_instance();
}

AuthRoleGrantPermissionRequest* AuthRoleGrantPermissionRequest::New(::google::protobuf::Arena* arena) const {
  AuthRoleGrantPermissionRequest* n = new AuthRoleGrantPermissionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleGrantPermissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && perm_ != NULL) {
    delete perm_;
  }
  perm_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthRoleGrantPermissionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthRoleGrantPermissionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .authpb.Permission perm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_perm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleGrantPermissionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleGrantPermissionRequest)
  return false;
#undef DO_
}

void AuthRoleGrantPermissionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleGrantPermissionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .authpb.Permission perm = 2;
  if (this->has_perm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->perm_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleGrantPermissionRequest)
}

::google::protobuf::uint8* AuthRoleGrantPermissionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleGrantPermissionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .authpb.Permission perm = 2;
  if (this->has_perm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->perm_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleGrantPermissionRequest)
  return target;
}

size_t AuthRoleGrantPermissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .authpb.Permission perm = 2;
  if (this->has_perm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->perm_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleGrantPermissionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleGrantPermissionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleGrantPermissionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleGrantPermissionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleGrantPermissionRequest)
    MergeFrom(*source);
  }
}

void AuthRoleGrantPermissionRequest::MergeFrom(const AuthRoleGrantPermissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_perm()) {
    mutable_perm()->::authpb::Permission::MergeFrom(from.perm());
  }
}

void AuthRoleGrantPermissionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleGrantPermissionRequest::CopyFrom(const AuthRoleGrantPermissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleGrantPermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleGrantPermissionRequest::IsInitialized() const {
  return true;
}

void AuthRoleGrantPermissionRequest::Swap(AuthRoleGrantPermissionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleGrantPermissionRequest::InternalSwap(AuthRoleGrantPermissionRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(perm_, other->perm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleGrantPermissionRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleRevokePermissionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleRevokePermissionRequest::kRoleFieldNumber;
const int AuthRoleRevokePermissionRequest::kKeyFieldNumber;
const int AuthRoleRevokePermissionRequest::kRangeEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleRevokePermissionRequest::AuthRoleRevokePermissionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleRevokePermissionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleRevokePermissionRequest)
}
AuthRoleRevokePermissionRequest::AuthRoleRevokePermissionRequest(const AuthRoleRevokePermissionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.range_end().size() > 0) {
    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleRevokePermissionRequest)
}

void AuthRoleRevokePermissionRequest::SharedCtor() {
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthRoleRevokePermissionRequest::~AuthRoleRevokePermissionRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleRevokePermissionRequest)
  SharedDtor();
}

void AuthRoleRevokePermissionRequest::SharedDtor() {
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthRoleRevokePermissionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleRevokePermissionRequest::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleRevokePermissionRequest& AuthRoleRevokePermissionRequest::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleRevokePermissionRequest();
  return *internal_default_instance();
}

AuthRoleRevokePermissionRequest* AuthRoleRevokePermissionRequest::New(::google::protobuf::Arena* arena) const {
  AuthRoleRevokePermissionRequest* n = new AuthRoleRevokePermissionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleRevokePermissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthRoleRevokePermissionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string role = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthRoleRevokePermissionRequest.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthRoleRevokePermissionRequest.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string range_end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_range_end()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->range_end().data(), static_cast<int>(this->range_end().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthRoleRevokePermissionRequest.range_end"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleRevokePermissionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleRevokePermissionRequest)
  return false;
#undef DO_
}

void AuthRoleRevokePermissionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleRevokePermissionRequest.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->role(), output);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleRevokePermissionRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // string range_end = 3;
  if (this->range_end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->range_end().data(), static_cast<int>(this->range_end().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleRevokePermissionRequest.range_end");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->range_end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleRevokePermissionRequest)
}

::google::protobuf::uint8* AuthRoleRevokePermissionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleRevokePermissionRequest.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleRevokePermissionRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // string range_end = 3;
  if (this->range_end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->range_end().data(), static_cast<int>(this->range_end().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleRevokePermissionRequest.range_end");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->range_end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleRevokePermissionRequest)
  return target;
}

size_t AuthRoleRevokePermissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string role = 1;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string range_end = 3;
  if (this->range_end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->range_end());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleRevokePermissionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleRevokePermissionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleRevokePermissionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleRevokePermissionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleRevokePermissionRequest)
    MergeFrom(*source);
  }
}

void AuthRoleRevokePermissionRequest::MergeFrom(const AuthRoleRevokePermissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.range_end().size() > 0) {

    range_end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.range_end_);
  }
}

void AuthRoleRevokePermissionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleRevokePermissionRequest::CopyFrom(const AuthRoleRevokePermissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleRevokePermissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleRevokePermissionRequest::IsInitialized() const {
  return true;
}

void AuthRoleRevokePermissionRequest::Swap(AuthRoleRevokePermissionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleRevokePermissionRequest::InternalSwap(AuthRoleRevokePermissionRequest* other) {
  using std::swap;
  role_.Swap(&other->role_);
  key_.Swap(&other->key_);
  range_end_.Swap(&other->range_end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleRevokePermissionRequest::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthEnableResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthEnableResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthEnableResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthEnableResponse::AuthEnableResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthEnableResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthEnableResponse)
}
AuthEnableResponse::AuthEnableResponse(const AuthEnableResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthEnableResponse)
}

void AuthEnableResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthEnableResponse::~AuthEnableResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthEnableResponse)
  SharedDtor();
}

void AuthEnableResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthEnableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthEnableResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthEnableResponse& AuthEnableResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthEnableResponse();
  return *internal_default_instance();
}

AuthEnableResponse* AuthEnableResponse::New(::google::protobuf::Arena* arena) const {
  AuthEnableResponse* n = new AuthEnableResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthEnableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthEnableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthEnableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthEnableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthEnableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthEnableResponse)
  return false;
#undef DO_
}

void AuthEnableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthEnableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthEnableResponse)
}

::google::protobuf::uint8* AuthEnableResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthEnableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthEnableResponse)
  return target;
}

size_t AuthEnableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthEnableResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthEnableResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthEnableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthEnableResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthEnableResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthEnableResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthEnableResponse)
    MergeFrom(*source);
  }
}

void AuthEnableResponse::MergeFrom(const AuthEnableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthEnableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthEnableResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthEnableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthEnableResponse::CopyFrom(const AuthEnableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthEnableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthEnableResponse::IsInitialized() const {
  return true;
}

void AuthEnableResponse::Swap(AuthEnableResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthEnableResponse::InternalSwap(AuthEnableResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthEnableResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthDisableResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthDisableResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthDisableResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthDisableResponse::AuthDisableResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthDisableResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthDisableResponse)
}
AuthDisableResponse::AuthDisableResponse(const AuthDisableResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthDisableResponse)
}

void AuthDisableResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthDisableResponse::~AuthDisableResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthDisableResponse)
  SharedDtor();
}

void AuthDisableResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthDisableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthDisableResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthDisableResponse& AuthDisableResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthDisableResponse();
  return *internal_default_instance();
}

AuthDisableResponse* AuthDisableResponse::New(::google::protobuf::Arena* arena) const {
  AuthDisableResponse* n = new AuthDisableResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthDisableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthDisableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthDisableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthDisableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthDisableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthDisableResponse)
  return false;
#undef DO_
}

void AuthDisableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthDisableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthDisableResponse)
}

::google::protobuf::uint8* AuthDisableResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthDisableResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthDisableResponse)
  return target;
}

size_t AuthDisableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthDisableResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthDisableResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthDisableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthDisableResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthDisableResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthDisableResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthDisableResponse)
    MergeFrom(*source);
  }
}

void AuthDisableResponse::MergeFrom(const AuthDisableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthDisableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthDisableResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthDisableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthDisableResponse::CopyFrom(const AuthDisableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthDisableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthDisableResponse::IsInitialized() const {
  return true;
}

void AuthDisableResponse::Swap(AuthDisableResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthDisableResponse::InternalSwap(AuthDisableResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthDisableResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthenticateResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateResponse::kHeaderFieldNumber;
const int AuthenticateResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateResponse::AuthenticateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthenticateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthenticateResponse)
}
AuthenticateResponse::AuthenticateResponse(const AuthenticateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthenticateResponse)
}

void AuthenticateResponse::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
  _cached_size_ = 0;
}

AuthenticateResponse::~AuthenticateResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthenticateResponse)
  SharedDtor();
}

void AuthenticateResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void AuthenticateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateResponse& AuthenticateResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthenticateResponse();
  return *internal_default_instance();
}

AuthenticateResponse* AuthenticateResponse::New(::google::protobuf::Arena* arena) const {
  AuthenticateResponse* n = new AuthenticateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthenticateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthenticateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthenticateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthenticateResponse.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthenticateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthenticateResponse)
  return false;
#undef DO_
}

void AuthenticateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthenticateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthenticateResponse.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthenticateResponse)
}

::google::protobuf::uint8* AuthenticateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthenticateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthenticateResponse.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthenticateResponse)
  return target;
}

size_t AuthenticateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthenticateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthenticateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthenticateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthenticateResponse)
    MergeFrom(*source);
  }
}

void AuthenticateResponse::MergeFrom(const AuthenticateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthenticateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthenticateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthenticateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateResponse::CopyFrom(const AuthenticateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthenticateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateResponse::IsInitialized() const {
  return true;
}

void AuthenticateResponse::Swap(AuthenticateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateResponse::InternalSwap(AuthenticateResponse* other) {
  using std::swap;
  token_.Swap(&other->token_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserAddResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthUserAddResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserAddResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserAddResponse::AuthUserAddResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserAddResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserAddResponse)
}
AuthUserAddResponse::AuthUserAddResponse(const AuthUserAddResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserAddResponse)
}

void AuthUserAddResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthUserAddResponse::~AuthUserAddResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserAddResponse)
  SharedDtor();
}

void AuthUserAddResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthUserAddResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserAddResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserAddResponse& AuthUserAddResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserAddResponse();
  return *internal_default_instance();
}

AuthUserAddResponse* AuthUserAddResponse::New(::google::protobuf::Arena* arena) const {
  AuthUserAddResponse* n = new AuthUserAddResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserAddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthUserAddResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserAddResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserAddResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserAddResponse)
  return false;
#undef DO_
}

void AuthUserAddResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserAddResponse)
}

::google::protobuf::uint8* AuthUserAddResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserAddResponse)
  return target;
}

size_t AuthUserAddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserAddResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserAddResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserAddResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserAddResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserAddResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserAddResponse)
    MergeFrom(*source);
  }
}

void AuthUserAddResponse::MergeFrom(const AuthUserAddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthUserAddResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserAddResponse::CopyFrom(const AuthUserAddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserAddResponse::IsInitialized() const {
  return true;
}

void AuthUserAddResponse::Swap(AuthUserAddResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserAddResponse::InternalSwap(AuthUserAddResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserAddResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserGetResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthUserGetResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserGetResponse::kHeaderFieldNumber;
const int AuthUserGetResponse::kRolesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserGetResponse::AuthUserGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserGetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserGetResponse)
}
AuthUserGetResponse::AuthUserGetResponse(const AuthUserGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roles_(from.roles_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserGetResponse)
}

void AuthUserGetResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthUserGetResponse::~AuthUserGetResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserGetResponse)
  SharedDtor();
}

void AuthUserGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthUserGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserGetResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserGetResponse& AuthUserGetResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserGetResponse();
  return *internal_default_instance();
}

AuthUserGetResponse* AuthUserGetResponse::New(::google::protobuf::Arena* arena) const {
  AuthUserGetResponse* n = new AuthUserGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthUserGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string roles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roles(this->roles_size() - 1).data(),
            static_cast<int>(this->roles(this->roles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserGetResponse.roles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserGetResponse)
  return false;
#undef DO_
}

void AuthUserGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated string roles = 2;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserGetResponse.roles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->roles(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserGetResponse)
}

::google::protobuf::uint8* AuthUserGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated string roles = 2;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserGetResponse.roles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->roles(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserGetResponse)
  return target;
}

size_t AuthUserGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string roles = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->roles_size());
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->roles(i));
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserGetResponse)
    MergeFrom(*source);
  }
}

void AuthUserGetResponse::MergeFrom(const AuthUserGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthUserGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserGetResponse::CopyFrom(const AuthUserGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserGetResponse::IsInitialized() const {
  return true;
}

void AuthUserGetResponse::Swap(AuthUserGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserGetResponse::InternalSwap(AuthUserGetResponse* other) {
  using std::swap;
  roles_.InternalSwap(&other->roles_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserGetResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserDeleteResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthUserDeleteResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserDeleteResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserDeleteResponse::AuthUserDeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserDeleteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserDeleteResponse)
}
AuthUserDeleteResponse::AuthUserDeleteResponse(const AuthUserDeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserDeleteResponse)
}

void AuthUserDeleteResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthUserDeleteResponse::~AuthUserDeleteResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserDeleteResponse)
  SharedDtor();
}

void AuthUserDeleteResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthUserDeleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserDeleteResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserDeleteResponse& AuthUserDeleteResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserDeleteResponse();
  return *internal_default_instance();
}

AuthUserDeleteResponse* AuthUserDeleteResponse::New(::google::protobuf::Arena* arena) const {
  AuthUserDeleteResponse* n = new AuthUserDeleteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthUserDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserDeleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserDeleteResponse)
  return false;
#undef DO_
}

void AuthUserDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserDeleteResponse)
}

::google::protobuf::uint8* AuthUserDeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserDeleteResponse)
  return target;
}

size_t AuthUserDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserDeleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserDeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserDeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserDeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserDeleteResponse)
    MergeFrom(*source);
  }
}

void AuthUserDeleteResponse::MergeFrom(const AuthUserDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthUserDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserDeleteResponse::CopyFrom(const AuthUserDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserDeleteResponse::IsInitialized() const {
  return true;
}

void AuthUserDeleteResponse::Swap(AuthUserDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserDeleteResponse::InternalSwap(AuthUserDeleteResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserDeleteResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserChangePasswordResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthUserChangePasswordResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserChangePasswordResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserChangePasswordResponse::AuthUserChangePasswordResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserChangePasswordResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserChangePasswordResponse)
}
AuthUserChangePasswordResponse::AuthUserChangePasswordResponse(const AuthUserChangePasswordResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserChangePasswordResponse)
}

void AuthUserChangePasswordResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthUserChangePasswordResponse::~AuthUserChangePasswordResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserChangePasswordResponse)
  SharedDtor();
}

void AuthUserChangePasswordResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthUserChangePasswordResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserChangePasswordResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserChangePasswordResponse& AuthUserChangePasswordResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserChangePasswordResponse();
  return *internal_default_instance();
}

AuthUserChangePasswordResponse* AuthUserChangePasswordResponse::New(::google::protobuf::Arena* arena) const {
  AuthUserChangePasswordResponse* n = new AuthUserChangePasswordResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserChangePasswordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserChangePasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthUserChangePasswordResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserChangePasswordResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserChangePasswordResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserChangePasswordResponse)
  return false;
#undef DO_
}

void AuthUserChangePasswordResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserChangePasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserChangePasswordResponse)
}

::google::protobuf::uint8* AuthUserChangePasswordResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserChangePasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserChangePasswordResponse)
  return target;
}

size_t AuthUserChangePasswordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserChangePasswordResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserChangePasswordResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserChangePasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserChangePasswordResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserChangePasswordResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserChangePasswordResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserChangePasswordResponse)
    MergeFrom(*source);
  }
}

void AuthUserChangePasswordResponse::MergeFrom(const AuthUserChangePasswordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserChangePasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthUserChangePasswordResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserChangePasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserChangePasswordResponse::CopyFrom(const AuthUserChangePasswordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserChangePasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserChangePasswordResponse::IsInitialized() const {
  return true;
}

void AuthUserChangePasswordResponse::Swap(AuthUserChangePasswordResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserChangePasswordResponse::InternalSwap(AuthUserChangePasswordResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserChangePasswordResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserGrantRoleResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthUserGrantRoleResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserGrantRoleResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserGrantRoleResponse::AuthUserGrantRoleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserGrantRoleResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserGrantRoleResponse)
}
AuthUserGrantRoleResponse::AuthUserGrantRoleResponse(const AuthUserGrantRoleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserGrantRoleResponse)
}

void AuthUserGrantRoleResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthUserGrantRoleResponse::~AuthUserGrantRoleResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserGrantRoleResponse)
  SharedDtor();
}

void AuthUserGrantRoleResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthUserGrantRoleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserGrantRoleResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserGrantRoleResponse& AuthUserGrantRoleResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserGrantRoleResponse();
  return *internal_default_instance();
}

AuthUserGrantRoleResponse* AuthUserGrantRoleResponse::New(::google::protobuf::Arena* arena) const {
  AuthUserGrantRoleResponse* n = new AuthUserGrantRoleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserGrantRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserGrantRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthUserGrantRoleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserGrantRoleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserGrantRoleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserGrantRoleResponse)
  return false;
#undef DO_
}

void AuthUserGrantRoleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserGrantRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserGrantRoleResponse)
}

::google::protobuf::uint8* AuthUserGrantRoleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserGrantRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserGrantRoleResponse)
  return target;
}

size_t AuthUserGrantRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserGrantRoleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserGrantRoleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserGrantRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserGrantRoleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserGrantRoleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserGrantRoleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserGrantRoleResponse)
    MergeFrom(*source);
  }
}

void AuthUserGrantRoleResponse::MergeFrom(const AuthUserGrantRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserGrantRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthUserGrantRoleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserGrantRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserGrantRoleResponse::CopyFrom(const AuthUserGrantRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserGrantRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserGrantRoleResponse::IsInitialized() const {
  return true;
}

void AuthUserGrantRoleResponse::Swap(AuthUserGrantRoleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserGrantRoleResponse::InternalSwap(AuthUserGrantRoleResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserGrantRoleResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserRevokeRoleResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthUserRevokeRoleResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserRevokeRoleResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserRevokeRoleResponse::AuthUserRevokeRoleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserRevokeRoleResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserRevokeRoleResponse)
}
AuthUserRevokeRoleResponse::AuthUserRevokeRoleResponse(const AuthUserRevokeRoleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserRevokeRoleResponse)
}

void AuthUserRevokeRoleResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthUserRevokeRoleResponse::~AuthUserRevokeRoleResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserRevokeRoleResponse)
  SharedDtor();
}

void AuthUserRevokeRoleResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthUserRevokeRoleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserRevokeRoleResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserRevokeRoleResponse& AuthUserRevokeRoleResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserRevokeRoleResponse();
  return *internal_default_instance();
}

AuthUserRevokeRoleResponse* AuthUserRevokeRoleResponse::New(::google::protobuf::Arena* arena) const {
  AuthUserRevokeRoleResponse* n = new AuthUserRevokeRoleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserRevokeRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserRevokeRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthUserRevokeRoleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserRevokeRoleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserRevokeRoleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserRevokeRoleResponse)
  return false;
#undef DO_
}

void AuthUserRevokeRoleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserRevokeRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserRevokeRoleResponse)
}

::google::protobuf::uint8* AuthUserRevokeRoleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserRevokeRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserRevokeRoleResponse)
  return target;
}

size_t AuthUserRevokeRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserRevokeRoleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserRevokeRoleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserRevokeRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserRevokeRoleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserRevokeRoleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserRevokeRoleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserRevokeRoleResponse)
    MergeFrom(*source);
  }
}

void AuthUserRevokeRoleResponse::MergeFrom(const AuthUserRevokeRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserRevokeRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthUserRevokeRoleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserRevokeRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserRevokeRoleResponse::CopyFrom(const AuthUserRevokeRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserRevokeRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserRevokeRoleResponse::IsInitialized() const {
  return true;
}

void AuthUserRevokeRoleResponse::Swap(AuthUserRevokeRoleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserRevokeRoleResponse::InternalSwap(AuthUserRevokeRoleResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserRevokeRoleResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleAddResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthRoleAddResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleAddResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleAddResponse::AuthRoleAddResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleAddResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleAddResponse)
}
AuthRoleAddResponse::AuthRoleAddResponse(const AuthRoleAddResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleAddResponse)
}

void AuthRoleAddResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthRoleAddResponse::~AuthRoleAddResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleAddResponse)
  SharedDtor();
}

void AuthRoleAddResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthRoleAddResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleAddResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleAddResponse& AuthRoleAddResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleAddResponse();
  return *internal_default_instance();
}

AuthRoleAddResponse* AuthRoleAddResponse::New(::google::protobuf::Arena* arena) const {
  AuthRoleAddResponse* n = new AuthRoleAddResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleAddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthRoleAddResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleAddResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleAddResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleAddResponse)
  return false;
#undef DO_
}

void AuthRoleAddResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleAddResponse)
}

::google::protobuf::uint8* AuthRoleAddResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleAddResponse)
  return target;
}

size_t AuthRoleAddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleAddResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleAddResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleAddResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleAddResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleAddResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleAddResponse)
    MergeFrom(*source);
  }
}

void AuthRoleAddResponse::MergeFrom(const AuthRoleAddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthRoleAddResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleAddResponse::CopyFrom(const AuthRoleAddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleAddResponse::IsInitialized() const {
  return true;
}

void AuthRoleAddResponse::Swap(AuthRoleAddResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleAddResponse::InternalSwap(AuthRoleAddResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleAddResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleGetResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthRoleGetResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
void AuthRoleGetResponse::clear_perm() {
  perm_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleGetResponse::kHeaderFieldNumber;
const int AuthRoleGetResponse::kPermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleGetResponse::AuthRoleGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleGetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleGetResponse)
}
AuthRoleGetResponse::AuthRoleGetResponse(const AuthRoleGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      perm_(from.perm_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleGetResponse)
}

void AuthRoleGetResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthRoleGetResponse::~AuthRoleGetResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleGetResponse)
  SharedDtor();
}

void AuthRoleGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthRoleGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleGetResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleGetResponse& AuthRoleGetResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleGetResponse();
  return *internal_default_instance();
}

AuthRoleGetResponse* AuthRoleGetResponse::New(::google::protobuf::Arena* arena) const {
  AuthRoleGetResponse* n = new AuthRoleGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  perm_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthRoleGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .authpb.Permission perm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_perm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleGetResponse)
  return false;
#undef DO_
}

void AuthRoleGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .authpb.Permission perm = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->perm_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->perm(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleGetResponse)
}

::google::protobuf::uint8* AuthRoleGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .authpb.Permission perm = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->perm_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->perm(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleGetResponse)
  return target;
}

size_t AuthRoleGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .authpb.Permission perm = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->perm_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->perm(static_cast<int>(i)));
    }
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleGetResponse)
    MergeFrom(*source);
  }
}

void AuthRoleGetResponse::MergeFrom(const AuthRoleGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  perm_.MergeFrom(from.perm_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthRoleGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleGetResponse::CopyFrom(const AuthRoleGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleGetResponse::IsInitialized() const {
  return true;
}

void AuthRoleGetResponse::Swap(AuthRoleGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleGetResponse::InternalSwap(AuthRoleGetResponse* other) {
  using std::swap;
  perm_.InternalSwap(&other->perm_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleGetResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleListResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthRoleListResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleListResponse::kHeaderFieldNumber;
const int AuthRoleListResponse::kRolesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleListResponse::AuthRoleListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleListResponse)
}
AuthRoleListResponse::AuthRoleListResponse(const AuthRoleListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roles_(from.roles_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleListResponse)
}

void AuthRoleListResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthRoleListResponse::~AuthRoleListResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleListResponse)
  SharedDtor();
}

void AuthRoleListResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthRoleListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleListResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleListResponse& AuthRoleListResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleListResponse();
  return *internal_default_instance();
}

AuthRoleListResponse* AuthRoleListResponse::New(::google::protobuf::Arena* arena) const {
  AuthRoleListResponse* n = new AuthRoleListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthRoleListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string roles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roles(this->roles_size() - 1).data(),
            static_cast<int>(this->roles(this->roles_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthRoleListResponse.roles"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleListResponse)
  return false;
#undef DO_
}

void AuthRoleListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated string roles = 2;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleListResponse.roles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->roles(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleListResponse)
}

::google::protobuf::uint8* AuthRoleListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated string roles = 2;
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roles(i).data(), static_cast<int>(this->roles(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthRoleListResponse.roles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->roles(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleListResponse)
  return target;
}

size_t AuthRoleListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string roles = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->roles_size());
  for (int i = 0, n = this->roles_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->roles(i));
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleListResponse)
    MergeFrom(*source);
  }
}

void AuthRoleListResponse::MergeFrom(const AuthRoleListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthRoleListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleListResponse::CopyFrom(const AuthRoleListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleListResponse::IsInitialized() const {
  return true;
}

void AuthRoleListResponse::Swap(AuthRoleListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleListResponse::InternalSwap(AuthRoleListResponse* other) {
  using std::swap;
  roles_.InternalSwap(&other->roles_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleListResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthUserListResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthUserListResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthUserListResponse::kHeaderFieldNumber;
const int AuthUserListResponse::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthUserListResponse::AuthUserListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthUserListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthUserListResponse)
}
AuthUserListResponse::AuthUserListResponse(const AuthUserListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthUserListResponse)
}

void AuthUserListResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthUserListResponse::~AuthUserListResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthUserListResponse)
  SharedDtor();
}

void AuthUserListResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthUserListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthUserListResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthUserListResponse& AuthUserListResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthUserListResponse();
  return *internal_default_instance();
}

AuthUserListResponse* AuthUserListResponse::New(::google::protobuf::Arena* arena) const {
  AuthUserListResponse* n = new AuthUserListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthUserListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthUserListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthUserListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthUserListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string users = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_users()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->users(this->users_size() - 1).data(),
            static_cast<int>(this->users(this->users_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "etcdserverpb.AuthUserListResponse.users"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthUserListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthUserListResponse)
  return false;
#undef DO_
}

void AuthUserListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthUserListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated string users = 2;
  for (int i = 0, n = this->users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->users(i).data(), static_cast<int>(this->users(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserListResponse.users");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->users(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthUserListResponse)
}

::google::protobuf::uint8* AuthUserListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthUserListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated string users = 2;
  for (int i = 0, n = this->users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->users(i).data(), static_cast<int>(this->users(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.AuthUserListResponse.users");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->users(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthUserListResponse)
  return target;
}

size_t AuthUserListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthUserListResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string users = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->users_size());
  for (int i = 0, n = this->users_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->users(i));
  }

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthUserListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthUserListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthUserListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthUserListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthUserListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthUserListResponse)
    MergeFrom(*source);
  }
}

void AuthUserListResponse::MergeFrom(const AuthUserListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthUserListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthUserListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthUserListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthUserListResponse::CopyFrom(const AuthUserListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthUserListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthUserListResponse::IsInitialized() const {
  return true;
}

void AuthUserListResponse::Swap(AuthUserListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthUserListResponse::InternalSwap(AuthUserListResponse* other) {
  using std::swap;
  users_.InternalSwap(&other->users_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthUserListResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleDeleteResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthRoleDeleteResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleDeleteResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleDeleteResponse::AuthRoleDeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleDeleteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleDeleteResponse)
}
AuthRoleDeleteResponse::AuthRoleDeleteResponse(const AuthRoleDeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleDeleteResponse)
}

void AuthRoleDeleteResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthRoleDeleteResponse::~AuthRoleDeleteResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleDeleteResponse)
  SharedDtor();
}

void AuthRoleDeleteResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthRoleDeleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleDeleteResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleDeleteResponse& AuthRoleDeleteResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleDeleteResponse();
  return *internal_default_instance();
}

AuthRoleDeleteResponse* AuthRoleDeleteResponse::New(::google::protobuf::Arena* arena) const {
  AuthRoleDeleteResponse* n = new AuthRoleDeleteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthRoleDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleDeleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleDeleteResponse)
  return false;
#undef DO_
}

void AuthRoleDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleDeleteResponse)
}

::google::protobuf::uint8* AuthRoleDeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleDeleteResponse)
  return target;
}

size_t AuthRoleDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleDeleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleDeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleDeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleDeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleDeleteResponse)
    MergeFrom(*source);
  }
}

void AuthRoleDeleteResponse::MergeFrom(const AuthRoleDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthRoleDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleDeleteResponse::CopyFrom(const AuthRoleDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleDeleteResponse::IsInitialized() const {
  return true;
}

void AuthRoleDeleteResponse::Swap(AuthRoleDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleDeleteResponse::InternalSwap(AuthRoleDeleteResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleDeleteResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleGrantPermissionResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthRoleGrantPermissionResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleGrantPermissionResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleGrantPermissionResponse::AuthRoleGrantPermissionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleGrantPermissionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleGrantPermissionResponse)
}
AuthRoleGrantPermissionResponse::AuthRoleGrantPermissionResponse(const AuthRoleGrantPermissionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleGrantPermissionResponse)
}

void AuthRoleGrantPermissionResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthRoleGrantPermissionResponse::~AuthRoleGrantPermissionResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleGrantPermissionResponse)
  SharedDtor();
}

void AuthRoleGrantPermissionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthRoleGrantPermissionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleGrantPermissionResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleGrantPermissionResponse& AuthRoleGrantPermissionResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleGrantPermissionResponse();
  return *internal_default_instance();
}

AuthRoleGrantPermissionResponse* AuthRoleGrantPermissionResponse::New(::google::protobuf::Arena* arena) const {
  AuthRoleGrantPermissionResponse* n = new AuthRoleGrantPermissionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleGrantPermissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthRoleGrantPermissionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleGrantPermissionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleGrantPermissionResponse)
  return false;
#undef DO_
}

void AuthRoleGrantPermissionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleGrantPermissionResponse)
}

::google::protobuf::uint8* AuthRoleGrantPermissionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleGrantPermissionResponse)
  return target;
}

size_t AuthRoleGrantPermissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleGrantPermissionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleGrantPermissionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleGrantPermissionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleGrantPermissionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleGrantPermissionResponse)
    MergeFrom(*source);
  }
}

void AuthRoleGrantPermissionResponse::MergeFrom(const AuthRoleGrantPermissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthRoleGrantPermissionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleGrantPermissionResponse::CopyFrom(const AuthRoleGrantPermissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleGrantPermissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleGrantPermissionResponse::IsInitialized() const {
  return true;
}

void AuthRoleGrantPermissionResponse::Swap(AuthRoleGrantPermissionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleGrantPermissionResponse::InternalSwap(AuthRoleGrantPermissionResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleGrantPermissionResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthRoleRevokePermissionResponse::InitAsDefaultInstance() {
  ::etcdserverpb::_AuthRoleRevokePermissionResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::ResponseHeader*>(
      ::etcdserverpb::ResponseHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthRoleRevokePermissionResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthRoleRevokePermissionResponse::AuthRoleRevokePermissionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_rpc_2eproto::InitDefaultsAuthRoleRevokePermissionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.AuthRoleRevokePermissionResponse)
}
AuthRoleRevokePermissionResponse::AuthRoleRevokePermissionResponse(const AuthRoleRevokePermissionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::etcdserverpb::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.AuthRoleRevokePermissionResponse)
}

void AuthRoleRevokePermissionResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AuthRoleRevokePermissionResponse::~AuthRoleRevokePermissionResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.AuthRoleRevokePermissionResponse)
  SharedDtor();
}

void AuthRoleRevokePermissionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AuthRoleRevokePermissionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthRoleRevokePermissionResponse::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthRoleRevokePermissionResponse& AuthRoleRevokePermissionResponse::default_instance() {
  ::protobuf_rpc_2eproto::InitDefaultsAuthRoleRevokePermissionResponse();
  return *internal_default_instance();
}

AuthRoleRevokePermissionResponse* AuthRoleRevokePermissionResponse::New(::google::protobuf::Arena* arena) const {
  AuthRoleRevokePermissionResponse* n = new AuthRoleRevokePermissionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthRoleRevokePermissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AuthRoleRevokePermissionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .etcdserverpb.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.AuthRoleRevokePermissionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.AuthRoleRevokePermissionResponse)
  return false;
#undef DO_
}

void AuthRoleRevokePermissionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.AuthRoleRevokePermissionResponse)
}

::google::protobuf::uint8* AuthRoleRevokePermissionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.AuthRoleRevokePermissionResponse)
  return target;
}

size_t AuthRoleRevokePermissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .etcdserverpb.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthRoleRevokePermissionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthRoleRevokePermissionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthRoleRevokePermissionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.AuthRoleRevokePermissionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.AuthRoleRevokePermissionResponse)
    MergeFrom(*source);
  }
}

void AuthRoleRevokePermissionResponse::MergeFrom(const AuthRoleRevokePermissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::etcdserverpb::ResponseHeader::MergeFrom(from.header());
  }
}

void AuthRoleRevokePermissionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthRoleRevokePermissionResponse::CopyFrom(const AuthRoleRevokePermissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.AuthRoleRevokePermissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthRoleRevokePermissionResponse::IsInitialized() const {
  return true;
}

void AuthRoleRevokePermissionResponse::Swap(AuthRoleRevokePermissionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthRoleRevokePermissionResponse::InternalSwap(AuthRoleRevokePermissionResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthRoleRevokePermissionResponse::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace etcdserverpb

// @@protoc_insertion_point(global_scope)
